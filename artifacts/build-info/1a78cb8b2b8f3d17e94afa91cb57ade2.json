{"id":"1a78cb8b2b8f3d17e94afa91cb57ade2","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"./IERC1155.sol\";\nimport {IERC1155Receiver} from \"./IERC1155Receiver.sol\";\nimport {IERC1155MetadataURI} from \"./extensions/IERC1155MetadataURI.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {Arrays} from \"../../utils/Arrays.sol\";\nimport {IERC1155Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n */\nabstract contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI, IERC1155Errors {\n    using Arrays for uint256[];\n    using Arrays for address[];\n\n    mapping(uint256 id => mapping(address account => uint256)) private _balances;\n\n    mapping(address account => mapping(address operator => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256 /* id */) public view virtual returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     */\n    function balanceOf(address account, uint256 id) public view virtual returns (uint256) {\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] memory accounts,\n        uint256[] memory ids\n    ) public view virtual returns (uint256[] memory) {\n        if (accounts.length != ids.length) {\n            revert ERC1155InvalidArrayLength(ids.length, accounts.length);\n        }\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i));\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeTransferFrom(from, to, id, value, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeBatchTransferFrom(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n     * (or `to`) is the zero address.\n     *\n     * Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n     *   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     *\n     * NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead.\n     */\n    function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {\n        if (ids.length != values.length) {\n            revert ERC1155InvalidArrayLength(ids.length, values.length);\n        }\n\n        address operator = _msgSender();\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids.unsafeMemoryAccess(i);\n            uint256 value = values.unsafeMemoryAccess(i);\n\n            if (from != address(0)) {\n                uint256 fromBalance = _balances[id][from];\n                if (fromBalance < value) {\n                    revert ERC1155InsufficientBalance(from, fromBalance, value, id);\n                }\n                unchecked {\n                    // Overflow not possible: value <= fromBalance\n                    _balances[id][from] = fromBalance - value;\n                }\n            }\n\n            if (to != address(0)) {\n                _balances[id][to] += value;\n            }\n        }\n\n        if (ids.length == 1) {\n            uint256 id = ids.unsafeMemoryAccess(0);\n            uint256 value = values.unsafeMemoryAccess(0);\n            emit TransferSingle(operator, from, to, id, value);\n        } else {\n            emit TransferBatch(operator, from, to, ids, values);\n        }\n    }\n\n    /**\n     * @dev Version of {_update} that performs the token acceptance check by calling\n     * {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n     * contains code (eg. is a smart contract at the moment of execution).\n     *\n     * IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n     * update to the contract state after this function would break the check-effect-interaction pattern. Consider\n     * overriding {_update} instead.\n     */\n    function _updateWithAcceptanceCheck(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal virtual {\n        _update(from, to, ids, values);\n        if (to != address(0)) {\n            address operator = _msgSender();\n            if (ids.length == 1) {\n                uint256 id = ids.unsafeMemoryAccess(0);\n                uint256 value = values.unsafeMemoryAccess(0);\n                _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data);\n            } else {\n                _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data);\n            }\n        }\n    }\n\n    /**\n     * @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the values in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(address to, uint256[] memory ids, uint256[] memory values, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens of type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     */\n    function _burn(address from, uint256 id, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     * - `ids` and `values` must have the same length.\n     */\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory values) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC1155InvalidOperator(address(0));\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Performs an acceptance check by calling {IERC1155-onERC1155Received} on the `to` address\n     * if it contains code at the moment of execution.\n     */\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 value,\n        bytes memory data\n    ) private {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    // Tokens rejected\n                    revert ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-ERC1155Receiver implementer\n                    revert ERC1155InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Performs a batch acceptance check by calling {IERC1155-onERC1155BatchReceived} on the `to` address\n     * if it contains code at the moment of execution.\n     */\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) private {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    // Tokens rejected\n                    revert ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-ERC1155Receiver implementer\n                    revert ERC1155InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Creates an array in memory with only one value for each of the elements provided.\n     */\n    function _asSingletonArrays(\n        uint256 element1,\n        uint256 element2\n    ) private pure returns (uint256[] memory array1, uint256[] memory array2) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Load the free memory pointer\n            array1 := mload(0x40)\n            // Set array length to 1\n            mstore(array1, 1)\n            // Store the single element at the next word after the length (where content starts)\n            mstore(add(array1, 0x20), element1)\n\n            // Repeat for next array locating it right after the first array\n            array2 := add(array1, 0x40)\n            mstore(array2, 1)\n            mstore(add(array2, 0x20), element2)\n\n            // Update the free memory pointer by pointing after the second array\n            mstore(0x40, add(array2, 0x40))\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external;\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface that must be implemented by smart contracts in order to receive\n * ERC-1155 token transfers.\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20Permit} from \"./IERC20Permit.sol\";\nimport {ERC20} from \"../ERC20.sol\";\nimport {ECDSA} from \"../../../utils/cryptography/ECDSA.sol\";\nimport {EIP712} from \"../../../utils/cryptography/EIP712.sol\";\nimport {Nonces} from \"../../../utils/Nonces.sol\";\n\n/**\n * @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712, Nonces {\n    bytes32 private constant PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n\n    /**\n     * @dev Permit deadline has expired.\n     */\n    error ERC2612ExpiredSignature(uint256 deadline);\n\n    /**\n     * @dev Mismatched signature.\n     */\n    error ERC2612InvalidSigner(address signer, address owner);\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > deadline) {\n            revert ERC2612ExpiredSignature(deadline);\n        }\n\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        if (signer != owner) {\n            revert ERC2612InvalidSigner(signer, owner);\n        }\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {\n        return super.nonces(owner);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Arrays.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Arrays.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\nimport {Math} from \"./math/Math.sol\";\n\n/**\n * @dev Collection of functions related to array types.\n */\nlibrary Arrays {\n    using StorageSlot for bytes32;\n\n    /**\n     * @dev Searches a sorted `array` and returns the first index that contains\n     * a value greater or equal to `element`. If no such index exists (i.e. all\n     * values in the array are strictly less than `element`), the array length is\n     * returned. Time complexity O(log n).\n     *\n     * `array` is expected to be sorted in ascending order, and to contain no\n     * repeated elements.\n     */\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\n        if (low > 0 && unsafeAccess(array, low - 1).value == element) {\n            return low - 1;\n        } else {\n            return low;\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(address[] storage arr, uint256 pos) internal pure returns (StorageSlot.AddressSlot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getAddressSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes32[] storage arr, uint256 pos) internal pure returns (StorageSlot.Bytes32Slot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getBytes32Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(uint256[] storage arr, uint256 pos) internal pure returns (StorageSlot.Uint256Slot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getUint256Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError, bytes32) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError, bytes32) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {IERC-5267}.\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Nonces.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Nonces.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides tracking nonces for addresses. Nonces will only increment.\n */\nabstract contract Nonces {\n    /**\n     * @dev The nonce used for an `account` is not the expected current nonce.\n     */\n    error InvalidAccountNonce(address account, uint256 currentNonce);\n\n    mapping(address account => uint256) private _nonces;\n\n    /**\n     * @dev Returns the next unused nonce for an address.\n     */\n    function nonces(address owner) public view virtual returns (uint256) {\n        return _nonces[owner];\n    }\n\n    /**\n     * @dev Consumes a nonce.\n     *\n     * Returns the current value and increments nonce.\n     */\n    function _useNonce(address owner) internal virtual returns (uint256) {\n        // For each account, the nonce has an initial value of 0, can only be incremented by one, and cannot be\n        // decremented or reset. This guarantees that the nonce never overflows.\n        unchecked {\n            // It is important to do x++ and not ++x here.\n            return _nonces[owner]++;\n        }\n    }\n\n    /**\n     * @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`.\n     */\n    function _useCheckedNonce(address owner, uint256 nonce) internal virtual {\n        uint256 current = _useNonce(owner);\n        if (nonce != current) {\n            revert InvalidAccountNonce(owner, current);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/BarDex.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.20;\n\nimport './IERC20.sol';\nimport '@openzeppelin/contracts/access/Ownable.sol';\nimport '@openzeppelin/contracts/utils/Address.sol';\nimport '@openzeppelin/contracts/utils/ReentrancyGuard.sol';\n\ncontract BarDex is Ownable, ReentrancyGuard {\n    using Address for address payable;\n\n    IERC20 public BardToken;\n\n    constructor(address _BardToken) Ownable(msg.sender) {\n        BardToken = IERC20(_BardToken);\n    \n    }\n\n    function swap() payable public {\n        BardToken.mint(msg.sender, msg.value);\n    }\n\n    function widthdraw(uint256 amount) public onlyOwner nonReentrant{\n        payable(msg.sender).sendValue(amount);\n    }\n\n}\n"},"contracts/BardToken.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\";\n\ncontract BardToken is ERC20, AccessControl, ERC20Permit {\n\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n    uint public constant MAX_SUPPLY = 50000000 * 10 ** 18;\n    constructor()\n        ERC20(\"BardToken\", \"BRDT\")\n        ERC20Permit(\"BardToken\")\n    {\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        _grantRole(MINTER_ROLE, msg.sender);\n    }\n\n    function grantMinterRole(address _minter) public onlyRole(DEFAULT_ADMIN_ROLE) {\n        _grantRole(MINTER_ROLE, _minter);\n    }\n    function mint(address to, uint256 amount) onlyRole(MINTER_ROLE) public {\n        require(totalSupply() + amount <= MAX_SUPPLY, \"BardToken: max supply exceeded\");\n        require(totalSupply()<= MAX_SUPPLY, \"BardToken: max supply exceeded\");\n        _mint(to, amount);\n        emit Minted(to, amount);\n    }\n\n\n    event Minted(address indexed to, uint256 amount);\n}"},"contracts/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Creates `amount` tokens and assigns them to `to`, increasing\n     * @param to destionation address\n     * @param amount amount of tokens to mint\n     * \n     * Emits a {Minted} event\n     */\n    function mint(address to, uint256 amount) external;\n}\n"},"contracts/SubDaoToken.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.20;\n\nimport '@openzeppelin/contracts/token/ERC1155/ERC1155.sol';\nimport '@openzeppelin/contracts/access/AccessControl.sol';\n\ncontract MyToken is ERC1155, AccessControl {\n    uint256 public constant BARDAOTOKEN = 0;\n    uint256 public constant MEMBER = 1;\n\n    bytes32 public constant MINTER_ROLE = keccak256('MINTER_ROLE');\n\n    constructor(address defaultAdmin, address minter) ERC1155('') {\n        _grantRole(DEFAULT_ADMIN_ROLE, defaultAdmin);\n        _grantRole(MINTER_ROLE, minter);\n    }\n\n    function mint(\n        address account,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public onlyRole(MINTER_ROLE) {\n        _mint(account, id, amount, data);\n    }\n\n    function mintBatch(\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public onlyRole(MINTER_ROLE) {\n        _mintBatch(to, ids, amounts, data);\n    }\n\n    // The following functions are overrides required by Solidity.\n\n    function supportsInterface(\n        bytes4 interfaceId\n    ) public view override(ERC1155, AccessControl) returns (bool) {\n        return super.supportsInterface(interfaceId);\n    }\n}\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[295],"Context":[3187],"ERC165":[4579],"IAccessControl":[378]},"id":296,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":379,"src":"134:52:0","symbolAliases":[{"foreign":{"id":2,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"142:14:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":3188,"src":"187:45:0","symbolAliases":[{"foreign":{"id":4,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"195:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":4580,"src":"233:57:0","symbolAliases":[{"foreign":{"id":6,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4579,"src":"241:6:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":9,"name":"Context","nameLocations":["1988:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":3187,"src":"1988:7:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"1988:7:0"},{"baseName":{"id":11,"name":"IAccessControl","nameLocations":["1997:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":378,"src":"1997:14:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"1997:14:0"},{"baseName":{"id":13,"name":"ERC165","nameLocations":["2013:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":4579,"src":"2013:6:0"},"id":14,"nodeType":"InheritanceSpecifier","src":"2013:6:0"}],"canonicalName":"AccessControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":8,"nodeType":"StructuredDocumentation","src":"292:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":295,"linearizedBaseContracts":[295,4579,4591,378,3187],"name":"AccessControl","nameLocation":"1971:13:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":21,"members":[{"constant":false,"id":18,"mutability":"mutable","name":"hasRole","nameLocation":"2085:7:0","nodeType":"VariableDeclaration","scope":21,"src":"2052:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":17,"keyName":"account","keyNameLocation":"2068:7:0","keyType":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"2060:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2052:32:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":16,"name":"bool","nodeType":"ElementaryTypeName","src":"2079:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":20,"mutability":"mutable","name":"adminRole","nameLocation":"2110:9:0","nodeType":"VariableDeclaration","scope":21,"src":"2102:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2102:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2033:8:0","nodeType":"StructDefinition","scope":295,"src":"2026:100:0","visibility":"public"},{"constant":false,"id":26,"mutability":"mutable","name":"_roles","nameLocation":"2174:6:0","nodeType":"VariableDeclaration","scope":295,"src":"2132:48:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":25,"keyName":"role","keyNameLocation":"2148:4:0","keyType":{"id":22,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2140:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2132:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":24,"nodeType":"UserDefinedTypeName","pathNode":{"id":23,"name":"RoleData","nameLocations":["2156:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":21,"src":"2156:8:0"},"referencedDeclaration":21,"src":"2156:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":29,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2211:18:0","nodeType":"VariableDeclaration","scope":295,"src":"2187:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":27,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2187:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":28,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2232:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":39,"nodeType":"Block","src":"2454:44:0","statements":[{"expression":{"arguments":[{"id":35,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"2475:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":34,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[93,114],"referencedDeclaration":93,"src":"2464:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":36,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2464:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":37,"nodeType":"ExpressionStatement","src":"2464:16:0"},{"id":38,"nodeType":"PlaceholderStatement","src":"2490:1:0"}]},"documentation":{"id":30,"nodeType":"StructuredDocumentation","src":"2243:174:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."},"id":40,"name":"onlyRole","nameLocation":"2431:8:0","nodeType":"ModifierDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32,"mutability":"mutable","name":"role","nameLocation":"2448:4:0","nodeType":"VariableDeclaration","scope":40,"src":"2440:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":31,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2440:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2439:14:0"},"src":"2422:76:0","virtual":false,"visibility":"internal"},{"baseFunctions":[4578],"body":{"id":61,"nodeType":"Block","src":"2656:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":59,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":49,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"2673:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":51,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"2693:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$378_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$378_$","typeString":"type(contract IAccessControl)"}],"id":50,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2688:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":52,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2688:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$378","typeString":"type(contract IAccessControl)"}},"id":53,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2709:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"2688:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2673:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":57,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"2748:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":55,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2724:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$295_$","typeString":"type(contract super AccessControl)"}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2730:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":4578,"src":"2724:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":58,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2724:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2673:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":48,"id":60,"nodeType":"Return","src":"2666:94:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"2504:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":62,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2574:17:0","nodeType":"FunctionDefinition","overrides":{"id":45,"nodeType":"OverrideSpecifier","overrides":[],"src":"2632:8:0"},"parameters":{"id":44,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43,"mutability":"mutable","name":"interfaceId","nameLocation":"2599:11:0","nodeType":"VariableDeclaration","scope":62,"src":"2592:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":42,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2592:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2591:20:0"},"returnParameters":{"id":48,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":62,"src":"2650:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":46,"name":"bool","nodeType":"ElementaryTypeName","src":"2650:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2649:6:0"},"scope":295,"src":"2565:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[345],"body":{"id":79,"nodeType":"Block","src":"2937:53:0","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":72,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"2954:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":74,"indexExpression":{"id":73,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"2961:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2954:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":75,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2967:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"2954:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":77,"indexExpression":{"id":76,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"2975:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2954:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":71,"id":78,"nodeType":"Return","src":"2947:36:0"}]},"documentation":{"id":63,"nodeType":"StructuredDocumentation","src":"2773:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":80,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"2863:7:0","nodeType":"FunctionDefinition","parameters":{"id":68,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65,"mutability":"mutable","name":"role","nameLocation":"2879:4:0","nodeType":"VariableDeclaration","scope":80,"src":"2871:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":64,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2871:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":67,"mutability":"mutable","name":"account","nameLocation":"2893:7:0","nodeType":"VariableDeclaration","scope":80,"src":"2885:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":66,"name":"address","nodeType":"ElementaryTypeName","src":"2885:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2870:31:0"},"returnParameters":{"id":71,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":80,"src":"2931:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":69,"name":"bool","nodeType":"ElementaryTypeName","src":"2931:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2930:6:0"},"scope":295,"src":"2854:136:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":92,"nodeType":"Block","src":"3255:47:0","statements":[{"expression":{"arguments":[{"id":87,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"3276:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":88,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"3282:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3282:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[93,114],"referencedDeclaration":114,"src":"3265:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":90,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3265:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":91,"nodeType":"ExpressionStatement","src":"3265:30:0"}]},"documentation":{"id":81,"nodeType":"StructuredDocumentation","src":"2996:198:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."},"id":93,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3208:10:0","nodeType":"FunctionDefinition","parameters":{"id":84,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83,"mutability":"mutable","name":"role","nameLocation":"3227:4:0","nodeType":"VariableDeclaration","scope":93,"src":"3219:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":82,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3219:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3218:14:0"},"returnParameters":{"id":85,"nodeType":"ParameterList","parameters":[],"src":"3255:0:0"},"scope":295,"src":"3199:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":113,"nodeType":"Block","src":"3505:124:0","statements":[{"condition":{"id":105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3519:23:0","subExpression":{"arguments":[{"id":102,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3528:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":103,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"3534:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":101,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"3520:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3520:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":112,"nodeType":"IfStatement","src":"3515:108:0","trueBody":{"id":111,"nodeType":"Block","src":"3544:79:0","statements":[{"errorCall":{"arguments":[{"id":107,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"3598:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":108,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3607:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":106,"name":"AccessControlUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"3565:32:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32) pure"}},"id":109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3565:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":110,"nodeType":"RevertStatement","src":"3558:54:0"}]}}]},"documentation":{"id":94,"nodeType":"StructuredDocumentation","src":"3308:119:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."},"id":114,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3441:10:0","nodeType":"FunctionDefinition","parameters":{"id":99,"nodeType":"ParameterList","parameters":[{"constant":false,"id":96,"mutability":"mutable","name":"role","nameLocation":"3460:4:0","nodeType":"VariableDeclaration","scope":114,"src":"3452:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":95,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3452:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":98,"mutability":"mutable","name":"account","nameLocation":"3474:7:0","nodeType":"VariableDeclaration","scope":114,"src":"3466:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"3466:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3451:31:0"},"returnParameters":{"id":100,"nodeType":"ParameterList","parameters":[],"src":"3505:0:0"},"scope":295,"src":"3432:197:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[353],"body":{"id":127,"nodeType":"Block","src":"3884:46:0","statements":[{"expression":{"expression":{"baseExpression":{"id":122,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"3901:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":124,"indexExpression":{"id":123,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"3908:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3901:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":125,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3914:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":20,"src":"3901:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":121,"id":126,"nodeType":"Return","src":"3894:29:0"}]},"documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"3635:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":128,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"3819:12:0","nodeType":"FunctionDefinition","parameters":{"id":118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":117,"mutability":"mutable","name":"role","nameLocation":"3840:4:0","nodeType":"VariableDeclaration","scope":128,"src":"3832:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":116,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3832:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3831:14:0"},"returnParameters":{"id":121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":120,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":128,"src":"3875:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":119,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3875:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3874:9:0"},"scope":295,"src":"3810:120:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[361],"body":{"id":146,"nodeType":"Block","src":"4320:42:0","statements":[{"expression":{"arguments":[{"id":142,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"4341:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":143,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"4347:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":141,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"4330:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4330:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":145,"nodeType":"ExpressionStatement","src":"4330:25:0"}]},"documentation":{"id":129,"nodeType":"StructuredDocumentation","src":"3936:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":147,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":137,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"4313:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":136,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"4300:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4300:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":139,"kind":"modifierInvocation","modifierName":{"id":135,"name":"onlyRole","nameLocations":["4291:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"4291:8:0"},"nodeType":"ModifierInvocation","src":"4291:28:0"}],"name":"grantRole","nameLocation":"4235:9:0","nodeType":"FunctionDefinition","parameters":{"id":134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":131,"mutability":"mutable","name":"role","nameLocation":"4253:4:0","nodeType":"VariableDeclaration","scope":147,"src":"4245:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4245:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":133,"mutability":"mutable","name":"account","nameLocation":"4267:7:0","nodeType":"VariableDeclaration","scope":147,"src":"4259:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"4259:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4244:31:0"},"returnParameters":{"id":140,"nodeType":"ParameterList","parameters":[],"src":"4320:0:0"},"scope":295,"src":"4226:136:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[369],"body":{"id":165,"nodeType":"Block","src":"4737:43:0","statements":[{"expression":{"arguments":[{"id":161,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"4759:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":162,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":152,"src":"4765:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":160,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"4747:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4747:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":164,"nodeType":"ExpressionStatement","src":"4747:26:0"}]},"documentation":{"id":148,"nodeType":"StructuredDocumentation","src":"4368:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":166,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":156,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"4730:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":155,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"4717:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4717:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":158,"kind":"modifierInvocation","modifierName":{"id":154,"name":"onlyRole","nameLocations":["4708:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"4708:8:0"},"nodeType":"ModifierInvocation","src":"4708:28:0"}],"name":"revokeRole","nameLocation":"4651:10:0","nodeType":"FunctionDefinition","parameters":{"id":153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"mutability":"mutable","name":"role","nameLocation":"4670:4:0","nodeType":"VariableDeclaration","scope":166,"src":"4662:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":149,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4662:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":152,"mutability":"mutable","name":"account","nameLocation":"4684:7:0","nodeType":"VariableDeclaration","scope":166,"src":"4676:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"4676:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4661:31:0"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"4737:0:0"},"scope":295,"src":"4642:138:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[377],"body":{"id":188,"nodeType":"Block","src":"5407:166:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":174,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5421:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":175,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"5443:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5443:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5421:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":182,"nodeType":"IfStatement","src":"5417:102:0","trueBody":{"id":181,"nodeType":"Block","src":"5457:62:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":178,"name":"AccessControlBadConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"5478:28:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5478:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":180,"nodeType":"RevertStatement","src":"5471:37:0"}]}},{"expression":{"arguments":[{"id":184,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5541:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":185,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5547:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":183,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"5529:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5529:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":187,"nodeType":"ExpressionStatement","src":"5529:37:0"}]},"documentation":{"id":167,"nodeType":"StructuredDocumentation","src":"4786:537:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":189,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"5337:12:0","nodeType":"FunctionDefinition","parameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"role","nameLocation":"5358:4:0","nodeType":"VariableDeclaration","scope":189,"src":"5350:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5350:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"callerConfirmation","nameLocation":"5372:18:0","nodeType":"VariableDeclaration","scope":189,"src":"5364:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"5364:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5349:42:0"},"returnParameters":{"id":173,"nodeType":"ParameterList","parameters":[],"src":"5407:0:0"},"scope":295,"src":"5328:245:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":216,"nodeType":"Block","src":"5771:174:0","statements":[{"assignments":[198],"declarations":[{"constant":false,"id":198,"mutability":"mutable","name":"previousAdminRole","nameLocation":"5789:17:0","nodeType":"VariableDeclaration","scope":216,"src":"5781:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":197,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5781:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":202,"initialValue":{"arguments":[{"id":200,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5822:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":199,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"5809:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5809:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5781:46:0"},{"expression":{"id":208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":203,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"5837:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":205,"indexExpression":{"id":204,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5844:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5837:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":206,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5850:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":20,"src":"5837:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":207,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"5862:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5837:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":209,"nodeType":"ExpressionStatement","src":"5837:34:0"},{"eventCall":{"arguments":[{"id":211,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5903:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":212,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":198,"src":"5909:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":213,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"5928:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":210,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"5886:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5886:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":215,"nodeType":"EmitStatement","src":"5881:57:0"}]},"documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"5579:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":217,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"5707:13:0","nodeType":"FunctionDefinition","parameters":{"id":195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"role","nameLocation":"5729:4:0","nodeType":"VariableDeclaration","scope":217,"src":"5721:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":191,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5721:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":194,"mutability":"mutable","name":"adminRole","nameLocation":"5743:9:0","nodeType":"VariableDeclaration","scope":217,"src":"5735:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":193,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5735:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5720:33:0"},"returnParameters":{"id":196,"nodeType":"ParameterList","parameters":[],"src":"5771:0:0"},"scope":295,"src":"5698:247:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":255,"nodeType":"Block","src":"6262:233:0","statements":[{"condition":{"id":231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6276:23:0","subExpression":{"arguments":[{"id":228,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6285:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":229,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6291:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":227,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"6277:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6277:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":253,"nodeType":"Block","src":"6452:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6473:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":226,"id":252,"nodeType":"Return","src":"6466:12:0"}]},"id":254,"nodeType":"IfStatement","src":"6272:217:0","trueBody":{"id":250,"nodeType":"Block","src":"6301:145:0","statements":[{"expression":{"id":239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":232,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"6315:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":234,"indexExpression":{"id":233,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6322:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6315:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":235,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6328:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"6315:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":237,"indexExpression":{"id":236,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6336:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6315:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6347:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6315:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":240,"nodeType":"ExpressionStatement","src":"6315:36:0"},{"eventCall":{"arguments":[{"id":242,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6382:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":243,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6388:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":244,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"6397:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6397:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":241,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"6370:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6370:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":247,"nodeType":"EmitStatement","src":"6365:45:0"},{"expression":{"hexValue":"74727565","id":248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6431:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":226,"id":249,"nodeType":"Return","src":"6424:11:0"}]}}]},"documentation":{"id":218,"nodeType":"StructuredDocumentation","src":"5951:223:0","text":" @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":256,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"6188:10:0","nodeType":"FunctionDefinition","parameters":{"id":223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":220,"mutability":"mutable","name":"role","nameLocation":"6207:4:0","nodeType":"VariableDeclaration","scope":256,"src":"6199:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":219,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6199:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":222,"mutability":"mutable","name":"account","nameLocation":"6221:7:0","nodeType":"VariableDeclaration","scope":256,"src":"6213:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"6213:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6198:31:0"},"returnParameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":256,"src":"6256:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":224,"name":"bool","nodeType":"ElementaryTypeName","src":"6256:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6255:6:0"},"scope":295,"src":"6179:316:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":293,"nodeType":"Block","src":"6814:233:0","statements":[{"condition":{"arguments":[{"id":267,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6836:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":268,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6842:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":266,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"6828:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6828:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":291,"nodeType":"Block","src":"7004:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7025:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":265,"id":290,"nodeType":"Return","src":"7018:12:0"}]},"id":292,"nodeType":"IfStatement","src":"6824:217:0","trueBody":{"id":288,"nodeType":"Block","src":"6852:146:0","statements":[{"expression":{"id":277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":270,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"6866:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":272,"indexExpression":{"id":271,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6873:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6866:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":273,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6879:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"6866:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":275,"indexExpression":{"id":274,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6887:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6866:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6898:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6866:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":278,"nodeType":"ExpressionStatement","src":"6866:37:0"},{"eventCall":{"arguments":[{"id":280,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6934:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":281,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6940:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":282,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"6949:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6949:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":279,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"6922:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6922:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":285,"nodeType":"EmitStatement","src":"6917:45:0"},{"expression":{"hexValue":"74727565","id":286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6983:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":265,"id":287,"nodeType":"Return","src":"6976:11:0"}]}}]},"documentation":{"id":257,"nodeType":"StructuredDocumentation","src":"6501:224:0","text":" @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":294,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"6739:11:0","nodeType":"FunctionDefinition","parameters":{"id":262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":259,"mutability":"mutable","name":"role","nameLocation":"6759:4:0","nodeType":"VariableDeclaration","scope":294,"src":"6751:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":258,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6751:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":261,"mutability":"mutable","name":"account","nameLocation":"6773:7:0","nodeType":"VariableDeclaration","scope":294,"src":"6765:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":260,"name":"address","nodeType":"ElementaryTypeName","src":"6765:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6750:31:0"},"returnParameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":294,"src":"6808:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":263,"name":"bool","nodeType":"ElementaryTypeName","src":"6808:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6807:6:0"},"scope":295,"src":"6730:317:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":296,"src":"1953:5096:0","usedErrors":[305,308],"usedEvents":[317,326,335]}],"src":"108:6942:0"},"id":0},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[378]},"id":379,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":297,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":298,"nodeType":"StructuredDocumentation","src":"135:89:1","text":" @dev External interface of AccessControl declared to support ERC165 detection."},"fullyImplemented":false,"id":378,"linearizedBaseContracts":[378],"name":"IAccessControl","nameLocation":"235:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"256:56:1","text":" @dev The `account` is missing a role."},"errorSelector":"e2517d3f","id":305,"name":"AccessControlUnauthorizedAccount","nameLocation":"323:32:1","nodeType":"ErrorDefinition","parameters":{"id":304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"mutability":"mutable","name":"account","nameLocation":"364:7:1","nodeType":"VariableDeclaration","scope":305,"src":"356:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":300,"name":"address","nodeType":"ElementaryTypeName","src":"356:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":303,"mutability":"mutable","name":"neededRole","nameLocation":"381:10:1","nodeType":"VariableDeclaration","scope":305,"src":"373:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":302,"name":"bytes32","nodeType":"ElementaryTypeName","src":"373:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"355:37:1"},"src":"317:76:1"},{"documentation":{"id":306,"nodeType":"StructuredDocumentation","src":"399:148:1","text":" @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."},"errorSelector":"6697b232","id":308,"name":"AccessControlBadConfirmation","nameLocation":"558:28:1","nodeType":"ErrorDefinition","parameters":{"id":307,"nodeType":"ParameterList","parameters":[],"src":"586:2:1"},"src":"552:37:1"},{"anonymous":false,"documentation":{"id":309,"nodeType":"StructuredDocumentation","src":"595:254:1","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":317,"name":"RoleAdminChanged","nameLocation":"860:16:1","nodeType":"EventDefinition","parameters":{"id":316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":311,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"893:4:1","nodeType":"VariableDeclaration","scope":317,"src":"877:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":310,"name":"bytes32","nodeType":"ElementaryTypeName","src":"877:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":313,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"915:17:1","nodeType":"VariableDeclaration","scope":317,"src":"899:33:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":312,"name":"bytes32","nodeType":"ElementaryTypeName","src":"899:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":315,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"950:12:1","nodeType":"VariableDeclaration","scope":317,"src":"934:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":314,"name":"bytes32","nodeType":"ElementaryTypeName","src":"934:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"876:87:1"},"src":"854:110:1"},{"anonymous":false,"documentation":{"id":318,"nodeType":"StructuredDocumentation","src":"970:212:1","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":326,"name":"RoleGranted","nameLocation":"1193:11:1","nodeType":"EventDefinition","parameters":{"id":325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1221:4:1","nodeType":"VariableDeclaration","scope":326,"src":"1205:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":319,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1205:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":322,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1243:7:1","nodeType":"VariableDeclaration","scope":326,"src":"1227:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":321,"name":"address","nodeType":"ElementaryTypeName","src":"1227:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":324,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1268:6:1","nodeType":"VariableDeclaration","scope":326,"src":"1252:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":323,"name":"address","nodeType":"ElementaryTypeName","src":"1252:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1204:71:1"},"src":"1187:89:1"},{"anonymous":false,"documentation":{"id":327,"nodeType":"StructuredDocumentation","src":"1282:275:1","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":335,"name":"RoleRevoked","nameLocation":"1568:11:1","nodeType":"EventDefinition","parameters":{"id":334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":329,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1596:4:1","nodeType":"VariableDeclaration","scope":335,"src":"1580:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":328,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1580:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":331,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1618:7:1","nodeType":"VariableDeclaration","scope":335,"src":"1602:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":330,"name":"address","nodeType":"ElementaryTypeName","src":"1602:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":333,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1643:6:1","nodeType":"VariableDeclaration","scope":335,"src":"1627:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":332,"name":"address","nodeType":"ElementaryTypeName","src":"1627:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1579:71:1"},"src":"1562:89:1"},{"documentation":{"id":336,"nodeType":"StructuredDocumentation","src":"1657:76:1","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":345,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1747:7:1","nodeType":"FunctionDefinition","parameters":{"id":341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":338,"mutability":"mutable","name":"role","nameLocation":"1763:4:1","nodeType":"VariableDeclaration","scope":345,"src":"1755:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":337,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1755:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":340,"mutability":"mutable","name":"account","nameLocation":"1777:7:1","nodeType":"VariableDeclaration","scope":345,"src":"1769:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":339,"name":"address","nodeType":"ElementaryTypeName","src":"1769:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1754:31:1"},"returnParameters":{"id":344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":345,"src":"1809:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":342,"name":"bool","nodeType":"ElementaryTypeName","src":"1809:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1808:6:1"},"scope":378,"src":"1738:77:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"1821:184:1","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":353,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"2019:12:1","nodeType":"FunctionDefinition","parameters":{"id":349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"role","nameLocation":"2040:4:1","nodeType":"VariableDeclaration","scope":353,"src":"2032:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":347,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2032:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2031:14:1"},"returnParameters":{"id":352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":353,"src":"2069:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":350,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2069:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2068:9:1"},"scope":378,"src":"2010:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":354,"nodeType":"StructuredDocumentation","src":"2084:239:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":361,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2337:9:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":356,"mutability":"mutable","name":"role","nameLocation":"2355:4:1","nodeType":"VariableDeclaration","scope":361,"src":"2347:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":355,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2347:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":358,"mutability":"mutable","name":"account","nameLocation":"2369:7:1","nodeType":"VariableDeclaration","scope":361,"src":"2361:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":357,"name":"address","nodeType":"ElementaryTypeName","src":"2361:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2346:31:1"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[],"src":"2386:0:1"},"scope":378,"src":"2328:59:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":362,"nodeType":"StructuredDocumentation","src":"2393:223:1","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":369,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2630:10:1","nodeType":"FunctionDefinition","parameters":{"id":367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":364,"mutability":"mutable","name":"role","nameLocation":"2649:4:1","nodeType":"VariableDeclaration","scope":369,"src":"2641:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":363,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2641:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":366,"mutability":"mutable","name":"account","nameLocation":"2663:7:1","nodeType":"VariableDeclaration","scope":369,"src":"2655:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":365,"name":"address","nodeType":"ElementaryTypeName","src":"2655:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2640:31:1"},"returnParameters":{"id":368,"nodeType":"ParameterList","parameters":[],"src":"2680:0:1"},"scope":378,"src":"2621:60:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":370,"nodeType":"StructuredDocumentation","src":"2687:491:1","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."},"functionSelector":"36568abe","id":377,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"3192:12:1","nodeType":"FunctionDefinition","parameters":{"id":375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":372,"mutability":"mutable","name":"role","nameLocation":"3213:4:1","nodeType":"VariableDeclaration","scope":377,"src":"3205:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":371,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3205:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":374,"mutability":"mutable","name":"callerConfirmation","nameLocation":"3227:18:1","nodeType":"VariableDeclaration","scope":377,"src":"3219:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":373,"name":"address","nodeType":"ElementaryTypeName","src":"3219:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3204:42:1"},"returnParameters":{"id":376,"nodeType":"ParameterList","parameters":[],"src":"3255:0:1"},"scope":378,"src":"3183:73:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":379,"src":"225:3033:1","usedErrors":[305,308],"usedEvents":[317,326,335]}],"src":"109:3150:1"},"id":1},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[3187],"Ownable":[526]},"id":527,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":380,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:2"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":382,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":527,"sourceUnit":3188,"src":"128:45:2","symbolAliases":[{"foreign":{"id":381,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"136:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":384,"name":"Context","nameLocations":["692:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":3187,"src":"692:7:2"},"id":385,"nodeType":"InheritanceSpecifier","src":"692:7:2"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":383,"nodeType":"StructuredDocumentation","src":"175:487:2","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":526,"linearizedBaseContracts":[526,3187],"name":"Ownable","nameLocation":"681:7:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":387,"mutability":"mutable","name":"_owner","nameLocation":"722:6:2","nodeType":"VariableDeclaration","scope":526,"src":"706:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":386,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":388,"nodeType":"StructuredDocumentation","src":"735:85:2","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":392,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:2","nodeType":"ErrorDefinition","parameters":{"id":391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":390,"mutability":"mutable","name":"account","nameLocation":"866:7:2","nodeType":"VariableDeclaration","scope":392,"src":"858:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":389,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:2"},"src":"825:50:2"},{"documentation":{"id":393,"nodeType":"StructuredDocumentation","src":"881:82:2","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":397,"name":"OwnableInvalidOwner","nameLocation":"974:19:2","nodeType":"ErrorDefinition","parameters":{"id":396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":395,"mutability":"mutable","name":"owner","nameLocation":"1002:5:2","nodeType":"VariableDeclaration","scope":397,"src":"994:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":394,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:2"},"src":"968:41:2"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":403,"name":"OwnershipTransferred","nameLocation":"1021:20:2","nodeType":"EventDefinition","parameters":{"id":402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":399,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:2","nodeType":"VariableDeclaration","scope":403,"src":"1042:29:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":398,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":401,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:2","nodeType":"VariableDeclaration","scope":403,"src":"1073:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":400,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:2"},"src":"1015:84:2"},{"body":{"id":428,"nodeType":"Block","src":"1259:153:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":409,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"1273:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":410,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:2","typeDescriptions":{}}},"id":413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":423,"nodeType":"IfStatement","src":"1269:95:2","trueBody":{"id":422,"nodeType":"Block","src":"1301:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":416,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:2","typeDescriptions":{}}},"id":419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":415,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"1322:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":421,"nodeType":"RevertStatement","src":"1315:38:2"}]}},{"expression":{"arguments":[{"id":425,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"1392:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":424,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"1373:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":427,"nodeType":"ExpressionStatement","src":"1373:32:2"}]},"documentation":{"id":404,"nodeType":"StructuredDocumentation","src":"1105:115:2","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":429,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":406,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:2","nodeType":"VariableDeclaration","scope":429,"src":"1237:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":405,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:2"},"returnParameters":{"id":408,"nodeType":"ParameterList","parameters":[],"src":"1259:0:2"},"scope":526,"src":"1225:187:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":436,"nodeType":"Block","src":"1521:41:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":432,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"1531:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":434,"nodeType":"ExpressionStatement","src":"1531:13:2"},{"id":435,"nodeType":"PlaceholderStatement","src":"1554:1:2"}]},"documentation":{"id":430,"nodeType":"StructuredDocumentation","src":"1418:77:2","text":" @dev Throws if called by any account other than the owner."},"id":437,"name":"onlyOwner","nameLocation":"1509:9:2","nodeType":"ModifierDefinition","parameters":{"id":431,"nodeType":"ParameterList","parameters":[],"src":"1518:2:2"},"src":"1500:62:2","virtual":false,"visibility":"internal"},{"body":{"id":445,"nodeType":"Block","src":"1693:30:2","statements":[{"expression":{"id":443,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"1710:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":442,"id":444,"nodeType":"Return","src":"1703:13:2"}]},"documentation":{"id":438,"nodeType":"StructuredDocumentation","src":"1568:65:2","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":446,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:2","nodeType":"FunctionDefinition","parameters":{"id":439,"nodeType":"ParameterList","parameters":[],"src":"1652:2:2"},"returnParameters":{"id":442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":441,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":446,"src":"1684:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":440,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:2"},"scope":526,"src":"1638:85:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":462,"nodeType":"Block","src":"1841:117:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":450,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"1855:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":452,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"1866:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":461,"nodeType":"IfStatement","src":"1851:101:2","trueBody":{"id":460,"nodeType":"Block","src":"1880:72:2","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":456,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"1928:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":455,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"1901:26:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":459,"nodeType":"RevertStatement","src":"1894:47:2"}]}}]},"documentation":{"id":447,"nodeType":"StructuredDocumentation","src":"1729:62:2","text":" @dev Throws if the sender is not the owner."},"id":463,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:2","nodeType":"FunctionDefinition","parameters":{"id":448,"nodeType":"ParameterList","parameters":[],"src":"1816:2:2"},"returnParameters":{"id":449,"nodeType":"ParameterList","parameters":[],"src":"1841:0:2"},"scope":526,"src":"1796:162:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":476,"nodeType":"Block","src":"2347:47:2","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":470,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:2","typeDescriptions":{}}},"id":473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":469,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"2357:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":475,"nodeType":"ExpressionStatement","src":"2357:30:2"}]},"documentation":{"id":464,"nodeType":"StructuredDocumentation","src":"1964:324:2","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":477,"implemented":true,"kind":"function","modifiers":[{"id":467,"kind":"modifierInvocation","modifierName":{"id":466,"name":"onlyOwner","nameLocations":["2337:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":437,"src":"2337:9:2"},"nodeType":"ModifierInvocation","src":"2337:9:2"}],"name":"renounceOwnership","nameLocation":"2302:17:2","nodeType":"FunctionDefinition","parameters":{"id":465,"nodeType":"ParameterList","parameters":[],"src":"2319:2:2"},"returnParameters":{"id":468,"nodeType":"ParameterList","parameters":[],"src":"2347:0:2"},"scope":526,"src":"2293:101:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":504,"nodeType":"Block","src":"2613:145:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":485,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"2627:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":486,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:2","typeDescriptions":{}}},"id":489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":499,"nodeType":"IfStatement","src":"2623:91:2","trueBody":{"id":498,"nodeType":"Block","src":"2651:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":492,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:2","typeDescriptions":{}}},"id":495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":491,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"2672:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":497,"nodeType":"RevertStatement","src":"2665:38:2"}]}},{"expression":{"arguments":[{"id":501,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"2742:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":500,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"2723:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":503,"nodeType":"ExpressionStatement","src":"2723:28:2"}]},"documentation":{"id":478,"nodeType":"StructuredDocumentation","src":"2400:138:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":505,"implemented":true,"kind":"function","modifiers":[{"id":483,"kind":"modifierInvocation","modifierName":{"id":482,"name":"onlyOwner","nameLocations":["2603:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":437,"src":"2603:9:2"},"nodeType":"ModifierInvocation","src":"2603:9:2"}],"name":"transferOwnership","nameLocation":"2552:17:2","nodeType":"FunctionDefinition","parameters":{"id":481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":480,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:2","nodeType":"VariableDeclaration","scope":505,"src":"2570:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":479,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:2"},"returnParameters":{"id":484,"nodeType":"ParameterList","parameters":[],"src":"2613:0:2"},"scope":526,"src":"2543:215:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":524,"nodeType":"Block","src":"2975:124:2","statements":[{"assignments":[512],"declarations":[{"constant":false,"id":512,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:2","nodeType":"VariableDeclaration","scope":524,"src":"2985:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":511,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":514,"initialValue":{"id":513,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"3004:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:2"},{"expression":{"id":517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":515,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"3020:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":516,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"3029:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":518,"nodeType":"ExpressionStatement","src":"3020:17:2"},{"eventCall":{"arguments":[{"id":520,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"3073:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":521,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"3083:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":519,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"3052:20:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":523,"nodeType":"EmitStatement","src":"3047:45:2"}]},"documentation":{"id":506,"nodeType":"StructuredDocumentation","src":"2764:143:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":525,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:2","nodeType":"FunctionDefinition","parameters":{"id":509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":508,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:2","nodeType":"VariableDeclaration","scope":525,"src":"2940:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":507,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:2"},"returnParameters":{"id":510,"nodeType":"ParameterList","parameters":[],"src":"2975:0:2"},"scope":526,"src":"2912:187:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":527,"src":"663:2438:2","usedErrors":[392,397],"usedEvents":[403]}],"src":"102:3000:2"},"id":2},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[551]},"id":552,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":528,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":551,"linearizedBaseContracts":[551],"name":"IERC5267","nameLocation":"143:8:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":529,"nodeType":"StructuredDocumentation","src":"158:84:3","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":531,"name":"EIP712DomainChanged","nameLocation":"253:19:3","nodeType":"EventDefinition","parameters":{"id":530,"nodeType":"ParameterList","parameters":[],"src":"272:2:3"},"src":"247:28:3"},{"documentation":{"id":532,"nodeType":"StructuredDocumentation","src":"281:140:3","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":550,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"435:12:3","nodeType":"FunctionDefinition","parameters":{"id":533,"nodeType":"ParameterList","parameters":[],"src":"447:2:3"},"returnParameters":{"id":549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":535,"mutability":"mutable","name":"fields","nameLocation":"517:6:3","nodeType":"VariableDeclaration","scope":550,"src":"510:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":534,"name":"bytes1","nodeType":"ElementaryTypeName","src":"510:6:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":537,"mutability":"mutable","name":"name","nameLocation":"551:4:3","nodeType":"VariableDeclaration","scope":550,"src":"537:18:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":536,"name":"string","nodeType":"ElementaryTypeName","src":"537:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":539,"mutability":"mutable","name":"version","nameLocation":"583:7:3","nodeType":"VariableDeclaration","scope":550,"src":"569:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":538,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":541,"mutability":"mutable","name":"chainId","nameLocation":"612:7:3","nodeType":"VariableDeclaration","scope":550,"src":"604:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":540,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":543,"mutability":"mutable","name":"verifyingContract","nameLocation":"641:17:3","nodeType":"VariableDeclaration","scope":550,"src":"633:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":542,"name":"address","nodeType":"ElementaryTypeName","src":"633:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":545,"mutability":"mutable","name":"salt","nameLocation":"680:4:3","nodeType":"VariableDeclaration","scope":550,"src":"672:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":544,"name":"bytes32","nodeType":"ElementaryTypeName","src":"672:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":548,"mutability":"mutable","name":"extensions","nameLocation":"715:10:3","nodeType":"VariableDeclaration","scope":550,"src":"698:27:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":546,"name":"uint256","nodeType":"ElementaryTypeName","src":"698:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":547,"nodeType":"ArrayTypeName","src":"698:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"496:239:3"},"scope":551,"src":"426:310:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":552,"src":"133:605:3","usedErrors":[],"usedEvents":[531]}],"src":"107:632:3"},"id":3},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[688],"IERC20Errors":[593],"IERC721Errors":[641]},"id":689,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":553,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":554,"nodeType":"StructuredDocumentation","src":"138:139:4","text":" @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."},"fullyImplemented":true,"id":593,"linearizedBaseContracts":[593],"name":"IERC20Errors","nameLocation":"288:12:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":555,"nodeType":"StructuredDocumentation","src":"307:309:4","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":563,"name":"ERC20InsufficientBalance","nameLocation":"627:24:4","nodeType":"ErrorDefinition","parameters":{"id":562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":557,"mutability":"mutable","name":"sender","nameLocation":"660:6:4","nodeType":"VariableDeclaration","scope":563,"src":"652:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":556,"name":"address","nodeType":"ElementaryTypeName","src":"652:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":559,"mutability":"mutable","name":"balance","nameLocation":"676:7:4","nodeType":"VariableDeclaration","scope":563,"src":"668:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":558,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":561,"mutability":"mutable","name":"needed","nameLocation":"693:6:4","nodeType":"VariableDeclaration","scope":563,"src":"685:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":560,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"651:49:4"},"src":"621:80:4"},{"documentation":{"id":564,"nodeType":"StructuredDocumentation","src":"707:152:4","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":568,"name":"ERC20InvalidSender","nameLocation":"870:18:4","nodeType":"ErrorDefinition","parameters":{"id":567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":566,"mutability":"mutable","name":"sender","nameLocation":"897:6:4","nodeType":"VariableDeclaration","scope":568,"src":"889:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":565,"name":"address","nodeType":"ElementaryTypeName","src":"889:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"888:16:4"},"src":"864:41:4"},{"documentation":{"id":569,"nodeType":"StructuredDocumentation","src":"911:159:4","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":573,"name":"ERC20InvalidReceiver","nameLocation":"1081:20:4","nodeType":"ErrorDefinition","parameters":{"id":572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":571,"mutability":"mutable","name":"receiver","nameLocation":"1110:8:4","nodeType":"VariableDeclaration","scope":573,"src":"1102:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":570,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1101:18:4"},"src":"1075:45:4"},{"documentation":{"id":574,"nodeType":"StructuredDocumentation","src":"1126:345:4","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":582,"name":"ERC20InsufficientAllowance","nameLocation":"1482:26:4","nodeType":"ErrorDefinition","parameters":{"id":581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":576,"mutability":"mutable","name":"spender","nameLocation":"1517:7:4","nodeType":"VariableDeclaration","scope":582,"src":"1509:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":575,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":578,"mutability":"mutable","name":"allowance","nameLocation":"1534:9:4","nodeType":"VariableDeclaration","scope":582,"src":"1526:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":577,"name":"uint256","nodeType":"ElementaryTypeName","src":"1526:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":580,"mutability":"mutable","name":"needed","nameLocation":"1553:6:4","nodeType":"VariableDeclaration","scope":582,"src":"1545:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":579,"name":"uint256","nodeType":"ElementaryTypeName","src":"1545:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1508:52:4"},"src":"1476:85:4"},{"documentation":{"id":583,"nodeType":"StructuredDocumentation","src":"1567:174:4","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":587,"name":"ERC20InvalidApprover","nameLocation":"1752:20:4","nodeType":"ErrorDefinition","parameters":{"id":586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":585,"mutability":"mutable","name":"approver","nameLocation":"1781:8:4","nodeType":"VariableDeclaration","scope":587,"src":"1773:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":584,"name":"address","nodeType":"ElementaryTypeName","src":"1773:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1772:18:4"},"src":"1746:45:4"},{"documentation":{"id":588,"nodeType":"StructuredDocumentation","src":"1797:195:4","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":592,"name":"ERC20InvalidSpender","nameLocation":"2003:19:4","nodeType":"ErrorDefinition","parameters":{"id":591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":590,"mutability":"mutable","name":"spender","nameLocation":"2031:7:4","nodeType":"VariableDeclaration","scope":592,"src":"2023:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":589,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2022:17:4"},"src":"1997:43:4"}],"scope":689,"src":"278:1764:4","usedErrors":[563,568,573,582,587,592],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":594,"nodeType":"StructuredDocumentation","src":"2044:141:4","text":" @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."},"fullyImplemented":true,"id":641,"linearizedBaseContracts":[641],"name":"IERC721Errors","nameLocation":"2196:13:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":595,"nodeType":"StructuredDocumentation","src":"2216:219:4","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":599,"name":"ERC721InvalidOwner","nameLocation":"2446:18:4","nodeType":"ErrorDefinition","parameters":{"id":598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":597,"mutability":"mutable","name":"owner","nameLocation":"2473:5:4","nodeType":"VariableDeclaration","scope":599,"src":"2465:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":596,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2464:15:4"},"src":"2440:40:4"},{"documentation":{"id":600,"nodeType":"StructuredDocumentation","src":"2486:132:4","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":604,"name":"ERC721NonexistentToken","nameLocation":"2629:22:4","nodeType":"ErrorDefinition","parameters":{"id":603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":602,"mutability":"mutable","name":"tokenId","nameLocation":"2660:7:4","nodeType":"VariableDeclaration","scope":604,"src":"2652:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":601,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2651:17:4"},"src":"2623:46:4"},{"documentation":{"id":605,"nodeType":"StructuredDocumentation","src":"2675:289:4","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":613,"name":"ERC721IncorrectOwner","nameLocation":"2975:20:4","nodeType":"ErrorDefinition","parameters":{"id":612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":607,"mutability":"mutable","name":"sender","nameLocation":"3004:6:4","nodeType":"VariableDeclaration","scope":613,"src":"2996:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":606,"name":"address","nodeType":"ElementaryTypeName","src":"2996:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":609,"mutability":"mutable","name":"tokenId","nameLocation":"3020:7:4","nodeType":"VariableDeclaration","scope":613,"src":"3012:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":608,"name":"uint256","nodeType":"ElementaryTypeName","src":"3012:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":611,"mutability":"mutable","name":"owner","nameLocation":"3037:5:4","nodeType":"VariableDeclaration","scope":613,"src":"3029:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":610,"name":"address","nodeType":"ElementaryTypeName","src":"3029:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2995:48:4"},"src":"2969:75:4"},{"documentation":{"id":614,"nodeType":"StructuredDocumentation","src":"3050:152:4","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":618,"name":"ERC721InvalidSender","nameLocation":"3213:19:4","nodeType":"ErrorDefinition","parameters":{"id":617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":616,"mutability":"mutable","name":"sender","nameLocation":"3241:6:4","nodeType":"VariableDeclaration","scope":618,"src":"3233:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":615,"name":"address","nodeType":"ElementaryTypeName","src":"3233:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3232:16:4"},"src":"3207:42:4"},{"documentation":{"id":619,"nodeType":"StructuredDocumentation","src":"3255:159:4","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":623,"name":"ERC721InvalidReceiver","nameLocation":"3425:21:4","nodeType":"ErrorDefinition","parameters":{"id":622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":621,"mutability":"mutable","name":"receiver","nameLocation":"3455:8:4","nodeType":"VariableDeclaration","scope":623,"src":"3447:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":620,"name":"address","nodeType":"ElementaryTypeName","src":"3447:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3446:18:4"},"src":"3419:46:4"},{"documentation":{"id":624,"nodeType":"StructuredDocumentation","src":"3471:247:4","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":630,"name":"ERC721InsufficientApproval","nameLocation":"3729:26:4","nodeType":"ErrorDefinition","parameters":{"id":629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":626,"mutability":"mutable","name":"operator","nameLocation":"3764:8:4","nodeType":"VariableDeclaration","scope":630,"src":"3756:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":625,"name":"address","nodeType":"ElementaryTypeName","src":"3756:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":628,"mutability":"mutable","name":"tokenId","nameLocation":"3782:7:4","nodeType":"VariableDeclaration","scope":630,"src":"3774:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":627,"name":"uint256","nodeType":"ElementaryTypeName","src":"3774:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3755:35:4"},"src":"3723:68:4"},{"documentation":{"id":631,"nodeType":"StructuredDocumentation","src":"3797:174:4","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":635,"name":"ERC721InvalidApprover","nameLocation":"3982:21:4","nodeType":"ErrorDefinition","parameters":{"id":634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":633,"mutability":"mutable","name":"approver","nameLocation":"4012:8:4","nodeType":"VariableDeclaration","scope":635,"src":"4004:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":632,"name":"address","nodeType":"ElementaryTypeName","src":"4004:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4003:18:4"},"src":"3976:46:4"},{"documentation":{"id":636,"nodeType":"StructuredDocumentation","src":"4028:197:4","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":640,"name":"ERC721InvalidOperator","nameLocation":"4236:21:4","nodeType":"ErrorDefinition","parameters":{"id":639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":638,"mutability":"mutable","name":"operator","nameLocation":"4266:8:4","nodeType":"VariableDeclaration","scope":640,"src":"4258:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":637,"name":"address","nodeType":"ElementaryTypeName","src":"4258:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4257:18:4"},"src":"4230:46:4"}],"scope":689,"src":"2186:2092:4","usedErrors":[599,604,613,618,623,630,635,640],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":642,"nodeType":"StructuredDocumentation","src":"4280:143:4","text":" @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."},"fullyImplemented":true,"id":688,"linearizedBaseContracts":[688],"name":"IERC1155Errors","nameLocation":"4434:14:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":643,"nodeType":"StructuredDocumentation","src":"4455:361:4","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":653,"name":"ERC1155InsufficientBalance","nameLocation":"4827:26:4","nodeType":"ErrorDefinition","parameters":{"id":652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":645,"mutability":"mutable","name":"sender","nameLocation":"4862:6:4","nodeType":"VariableDeclaration","scope":653,"src":"4854:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":644,"name":"address","nodeType":"ElementaryTypeName","src":"4854:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":647,"mutability":"mutable","name":"balance","nameLocation":"4878:7:4","nodeType":"VariableDeclaration","scope":653,"src":"4870:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":646,"name":"uint256","nodeType":"ElementaryTypeName","src":"4870:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":649,"mutability":"mutable","name":"needed","nameLocation":"4895:6:4","nodeType":"VariableDeclaration","scope":653,"src":"4887:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":648,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":651,"mutability":"mutable","name":"tokenId","nameLocation":"4911:7:4","nodeType":"VariableDeclaration","scope":653,"src":"4903:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":650,"name":"uint256","nodeType":"ElementaryTypeName","src":"4903:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4853:66:4"},"src":"4821:99:4"},{"documentation":{"id":654,"nodeType":"StructuredDocumentation","src":"4926:152:4","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":658,"name":"ERC1155InvalidSender","nameLocation":"5089:20:4","nodeType":"ErrorDefinition","parameters":{"id":657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":656,"mutability":"mutable","name":"sender","nameLocation":"5118:6:4","nodeType":"VariableDeclaration","scope":658,"src":"5110:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":655,"name":"address","nodeType":"ElementaryTypeName","src":"5110:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5109:16:4"},"src":"5083:43:4"},{"documentation":{"id":659,"nodeType":"StructuredDocumentation","src":"5132:159:4","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":663,"name":"ERC1155InvalidReceiver","nameLocation":"5302:22:4","nodeType":"ErrorDefinition","parameters":{"id":662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":661,"mutability":"mutable","name":"receiver","nameLocation":"5333:8:4","nodeType":"VariableDeclaration","scope":663,"src":"5325:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":660,"name":"address","nodeType":"ElementaryTypeName","src":"5325:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5324:18:4"},"src":"5296:47:4"},{"documentation":{"id":664,"nodeType":"StructuredDocumentation","src":"5349:256:4","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":670,"name":"ERC1155MissingApprovalForAll","nameLocation":"5616:28:4","nodeType":"ErrorDefinition","parameters":{"id":669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":666,"mutability":"mutable","name":"operator","nameLocation":"5653:8:4","nodeType":"VariableDeclaration","scope":670,"src":"5645:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":665,"name":"address","nodeType":"ElementaryTypeName","src":"5645:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":668,"mutability":"mutable","name":"owner","nameLocation":"5671:5:4","nodeType":"VariableDeclaration","scope":670,"src":"5663:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":667,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5644:33:4"},"src":"5610:68:4"},{"documentation":{"id":671,"nodeType":"StructuredDocumentation","src":"5684:174:4","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":675,"name":"ERC1155InvalidApprover","nameLocation":"5869:22:4","nodeType":"ErrorDefinition","parameters":{"id":674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":673,"mutability":"mutable","name":"approver","nameLocation":"5900:8:4","nodeType":"VariableDeclaration","scope":675,"src":"5892:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":672,"name":"address","nodeType":"ElementaryTypeName","src":"5892:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5891:18:4"},"src":"5863:47:4"},{"documentation":{"id":676,"nodeType":"StructuredDocumentation","src":"5916:197:4","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":680,"name":"ERC1155InvalidOperator","nameLocation":"6124:22:4","nodeType":"ErrorDefinition","parameters":{"id":679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":678,"mutability":"mutable","name":"operator","nameLocation":"6155:8:4","nodeType":"VariableDeclaration","scope":680,"src":"6147:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":677,"name":"address","nodeType":"ElementaryTypeName","src":"6147:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6146:18:4"},"src":"6118:47:4"},{"documentation":{"id":681,"nodeType":"StructuredDocumentation","src":"6171:280:4","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":687,"name":"ERC1155InvalidArrayLength","nameLocation":"6462:25:4","nodeType":"ErrorDefinition","parameters":{"id":686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":683,"mutability":"mutable","name":"idsLength","nameLocation":"6496:9:4","nodeType":"VariableDeclaration","scope":687,"src":"6488:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":682,"name":"uint256","nodeType":"ElementaryTypeName","src":"6488:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":685,"mutability":"mutable","name":"valuesLength","nameLocation":"6515:12:4","nodeType":"VariableDeclaration","scope":687,"src":"6507:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":684,"name":"uint256","nodeType":"ElementaryTypeName","src":"6507:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6487:41:4"},"src":"6456:73:4"}],"scope":689,"src":"4424:2107:4","usedErrors":[653,658,663,670,675,680,687],"usedEvents":[]}],"src":"112:6420:4"},"id":4},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","exportedSymbols":{"Arrays":[3165],"Context":[3187],"ERC1155":[1739],"ERC165":[4579],"IERC1155":[1862],"IERC1155Errors":[688],"IERC1155MetadataURI":[1920],"IERC1155Receiver":[1904],"IERC165":[4591]},"id":1740,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":690,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"./IERC1155.sol","id":692,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1740,"sourceUnit":1863,"src":"135:40:5","symbolAliases":[{"foreign":{"id":691,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"143:8:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","file":"./IERC1155Receiver.sol","id":694,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1740,"sourceUnit":1905,"src":"176:56:5","symbolAliases":[{"foreign":{"id":693,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"184:16:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","file":"./extensions/IERC1155MetadataURI.sol","id":696,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1740,"sourceUnit":1921,"src":"233:73:5","symbolAliases":[{"foreign":{"id":695,"name":"IERC1155MetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1920,"src":"241:19:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":698,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1740,"sourceUnit":3188,"src":"307:48:5","symbolAliases":[{"foreign":{"id":697,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"315:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":701,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1740,"sourceUnit":4580,"src":"356:69:5","symbolAliases":[{"foreign":{"id":699,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4591,"src":"364:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":700,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4579,"src":"373:6:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","file":"../../utils/Arrays.sol","id":703,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1740,"sourceUnit":3166,"src":"426:46:5","symbolAliases":[{"foreign":{"id":702,"name":"Arrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3165,"src":"434:6:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":705,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1740,"sourceUnit":689,"src":"473:67:5","symbolAliases":[{"foreign":{"id":704,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"481:14:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":707,"name":"Context","nameLocations":["756:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":3187,"src":"756:7:5"},"id":708,"nodeType":"InheritanceSpecifier","src":"756:7:5"},{"baseName":{"id":709,"name":"ERC165","nameLocations":["765:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":4579,"src":"765:6:5"},"id":710,"nodeType":"InheritanceSpecifier","src":"765:6:5"},{"baseName":{"id":711,"name":"IERC1155","nameLocations":["773:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":1862,"src":"773:8:5"},"id":712,"nodeType":"InheritanceSpecifier","src":"773:8:5"},{"baseName":{"id":713,"name":"IERC1155MetadataURI","nameLocations":["783:19:5"],"nodeType":"IdentifierPath","referencedDeclaration":1920,"src":"783:19:5"},"id":714,"nodeType":"InheritanceSpecifier","src":"783:19:5"},{"baseName":{"id":715,"name":"IERC1155Errors","nameLocations":["804:14:5"],"nodeType":"IdentifierPath","referencedDeclaration":688,"src":"804:14:5"},"id":716,"nodeType":"InheritanceSpecifier","src":"804:14:5"}],"canonicalName":"ERC1155","contractDependencies":[],"contractKind":"contract","documentation":{"id":706,"nodeType":"StructuredDocumentation","src":"542:184:5","text":" @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155"},"fullyImplemented":true,"id":1739,"linearizedBaseContracts":[1739,688,1920,1862,4579,4591,3187],"name":"ERC1155","nameLocation":"745:7:5","nodeType":"ContractDefinition","nodes":[{"global":false,"id":720,"libraryName":{"id":717,"name":"Arrays","nameLocations":["831:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":3165,"src":"831:6:5"},"nodeType":"UsingForDirective","src":"825:27:5","typeName":{"baseType":{"id":718,"name":"uint256","nodeType":"ElementaryTypeName","src":"842:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":719,"nodeType":"ArrayTypeName","src":"842:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},{"global":false,"id":724,"libraryName":{"id":721,"name":"Arrays","nameLocations":["863:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":3165,"src":"863:6:5"},"nodeType":"UsingForDirective","src":"857:27:5","typeName":{"baseType":{"id":722,"name":"address","nodeType":"ElementaryTypeName","src":"874:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":723,"nodeType":"ArrayTypeName","src":"874:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},{"constant":false,"id":730,"mutability":"mutable","name":"_balances","nameLocation":"957:9:5","nodeType":"VariableDeclaration","scope":1739,"src":"890:76:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"typeName":{"id":729,"keyName":"id","keyNameLocation":"906:2:5","keyType":{"id":725,"name":"uint256","nodeType":"ElementaryTypeName","src":"898:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"890:58:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":728,"keyName":"account","keyNameLocation":"928:7:5","keyType":{"id":726,"name":"address","nodeType":"ElementaryTypeName","src":"920:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"912:35:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":727,"name":"uint256","nodeType":"ElementaryTypeName","src":"939:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":736,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1043:18:5","nodeType":"VariableDeclaration","scope":1739,"src":"973:88:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":735,"keyName":"account","keyNameLocation":"989:7:5","keyType":{"id":731,"name":"address","nodeType":"ElementaryTypeName","src":"981:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"973:61:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":734,"keyName":"operator","keyNameLocation":"1016:8:5","keyType":{"id":732,"name":"address","nodeType":"ElementaryTypeName","src":"1008:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1000:33:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":733,"name":"bool","nodeType":"ElementaryTypeName","src":"1028:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"constant":false,"id":738,"mutability":"mutable","name":"_uri","nameLocation":"1197:4:5","nodeType":"VariableDeclaration","scope":1739,"src":"1182:19:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":737,"name":"string","nodeType":"ElementaryTypeName","src":"1182:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":748,"nodeType":"Block","src":"1283:30:5","statements":[{"expression":{"arguments":[{"id":745,"name":"uri_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"1301:4:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":744,"name":"_setURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"1293:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1293:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":747,"nodeType":"ExpressionStatement","src":"1293:13:5"}]},"documentation":{"id":739,"nodeType":"StructuredDocumentation","src":"1208:38:5","text":" @dev See {_setURI}."},"id":749,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":741,"mutability":"mutable","name":"uri_","nameLocation":"1277:4:5","nodeType":"VariableDeclaration","scope":749,"src":"1263:18:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":740,"name":"string","nodeType":"ElementaryTypeName","src":"1263:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1262:20:5"},"returnParameters":{"id":743,"nodeType":"ParameterList","parameters":[],"src":"1283:0:5"},"scope":1739,"src":"1251:62:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[4578,4590],"body":{"id":779,"nodeType":"Block","src":"1488:197:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":760,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"1517:11:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":762,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"1537:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155_$1862_$","typeString":"type(contract IERC1155)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155_$1862_$","typeString":"type(contract IERC1155)"}],"id":761,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1532:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1532:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155_$1862","typeString":"type(contract IERC1155)"}},"id":764,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1547:11:5","memberName":"interfaceId","nodeType":"MemberAccess","src":"1532:26:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1517:41:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":766,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"1574:11:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":768,"name":"IERC1155MetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1920,"src":"1594:19:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$1920_$","typeString":"type(contract IERC1155MetadataURI)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$1920_$","typeString":"type(contract IERC1155MetadataURI)"}],"id":767,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1589:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1589:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1920","typeString":"type(contract IERC1155MetadataURI)"}},"id":770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1615:11:5","memberName":"interfaceId","nodeType":"MemberAccess","src":"1589:37:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1574:52:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1517:109:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":775,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"1666:11:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":773,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1642:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC1155_$1739_$","typeString":"type(contract super ERC1155)"}},"id":774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1648:17:5","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":4578,"src":"1642:23:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1642:36:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1517:161:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":759,"id":778,"nodeType":"Return","src":"1498:180:5"}]},"documentation":{"id":750,"nodeType":"StructuredDocumentation","src":"1319:56:5","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":780,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1389:17:5","nodeType":"FunctionDefinition","overrides":{"id":756,"nodeType":"OverrideSpecifier","overrides":[{"id":754,"name":"ERC165","nameLocations":["1456:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":4579,"src":"1456:6:5"},{"id":755,"name":"IERC165","nameLocations":["1464:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":4591,"src":"1464:7:5"}],"src":"1447:25:5"},"parameters":{"id":753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":752,"mutability":"mutable","name":"interfaceId","nameLocation":"1414:11:5","nodeType":"VariableDeclaration","scope":780,"src":"1407:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":751,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1407:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1406:20:5"},"returnParameters":{"id":759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":758,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":780,"src":"1482:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":757,"name":"bool","nodeType":"ElementaryTypeName","src":"1482:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1481:6:5"},"scope":1739,"src":"1380:305:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1919],"body":{"id":790,"nodeType":"Block","src":"2159:28:5","statements":[{"expression":{"id":788,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"2176:4:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":787,"id":789,"nodeType":"Return","src":"2169:11:5"}]},"documentation":{"id":781,"nodeType":"StructuredDocumentation","src":"1691:388:5","text":" @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."},"functionSelector":"0e89341c","id":791,"implemented":true,"kind":"function","modifiers":[],"name":"uri","nameLocation":"2093:3:5","nodeType":"FunctionDefinition","parameters":{"id":784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":783,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":791,"src":"2097:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":782,"name":"uint256","nodeType":"ElementaryTypeName","src":"2097:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2096:18:5"},"returnParameters":{"id":787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":786,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":791,"src":"2144:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":785,"name":"string","nodeType":"ElementaryTypeName","src":"2144:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2143:15:5"},"scope":1739,"src":"2084:103:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1800],"body":{"id":807,"nodeType":"Block","src":"2333:46:5","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":801,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"2350:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":803,"indexExpression":{"id":802,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":796,"src":"2360:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2350:13:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":805,"indexExpression":{"id":804,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"2364:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2350:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":800,"id":806,"nodeType":"Return","src":"2343:29:5"}]},"documentation":{"id":792,"nodeType":"StructuredDocumentation","src":"2193:49:5","text":" @dev See {IERC1155-balanceOf}."},"functionSelector":"00fdd58e","id":808,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2256:9:5","nodeType":"FunctionDefinition","parameters":{"id":797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":794,"mutability":"mutable","name":"account","nameLocation":"2274:7:5","nodeType":"VariableDeclaration","scope":808,"src":"2266:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":793,"name":"address","nodeType":"ElementaryTypeName","src":"2266:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":796,"mutability":"mutable","name":"id","nameLocation":"2291:2:5","nodeType":"VariableDeclaration","scope":808,"src":"2283:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":795,"name":"uint256","nodeType":"ElementaryTypeName","src":"2283:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2265:29:5"},"returnParameters":{"id":800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":799,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":808,"src":"2324:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":798,"name":"uint256","nodeType":"ElementaryTypeName","src":"2324:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2323:9:5"},"scope":1739,"src":"2247:132:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1813],"body":{"id":877,"nodeType":"Block","src":"2678:410:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":821,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"2692:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2701:6:5","memberName":"length","nodeType":"MemberAccess","src":"2692:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":823,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"2711:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2715:6:5","memberName":"length","nodeType":"MemberAccess","src":"2711:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2692:29:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":834,"nodeType":"IfStatement","src":"2688:121:5","trueBody":{"id":833,"nodeType":"Block","src":"2723:86:5","statements":[{"errorCall":{"arguments":[{"expression":{"id":827,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"2770:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2774:6:5","memberName":"length","nodeType":"MemberAccess","src":"2770:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":829,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"2782:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2791:6:5","memberName":"length","nodeType":"MemberAccess","src":"2782:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":826,"name":"ERC1155InvalidArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"2744:25:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2744:54:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":832,"nodeType":"RevertStatement","src":"2737:61:5"}]}},{"assignments":[839],"declarations":[{"constant":false,"id":839,"mutability":"mutable","name":"batchBalances","nameLocation":"2836:13:5","nodeType":"VariableDeclaration","scope":877,"src":"2819:30:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":837,"name":"uint256","nodeType":"ElementaryTypeName","src":"2819:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":838,"nodeType":"ArrayTypeName","src":"2819:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":846,"initialValue":{"arguments":[{"expression":{"id":843,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"2866:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2875:6:5","memberName":"length","nodeType":"MemberAccess","src":"2866:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2852:13:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":840,"name":"uint256","nodeType":"ElementaryTypeName","src":"2856:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":841,"nodeType":"ArrayTypeName","src":"2856:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2852:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2819:63:5"},{"body":{"id":873,"nodeType":"Block","src":"2939:112:5","statements":[{"expression":{"id":871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":858,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"2953:13:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":860,"indexExpression":{"id":859,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"2967:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2953:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":864,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"3010:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":862,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"2982:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2991:18:5","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3164,"src":"2982:27:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (address[] memory,uint256) pure returns (address)"}},"id":865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2982:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":868,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"3037:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":866,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"3014:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3018:18:5","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3151,"src":"3014:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3014:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":861,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"2972:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2972:68:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2953:87:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":872,"nodeType":"ExpressionStatement","src":"2953:87:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":851,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"2913:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":852,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"2917:8:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2926:6:5","memberName":"length","nodeType":"MemberAccess","src":"2917:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2913:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":874,"initializationExpression":{"assignments":[848],"declarations":[{"constant":false,"id":848,"mutability":"mutable","name":"i","nameLocation":"2906:1:5","nodeType":"VariableDeclaration","scope":874,"src":"2898:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":847,"name":"uint256","nodeType":"ElementaryTypeName","src":"2898:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":850,"initialValue":{"hexValue":"30","id":849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2910:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2898:13:5"},"loopExpression":{"expression":{"id":856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"2934:3:5","subExpression":{"id":855,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"2936:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":857,"nodeType":"ExpressionStatement","src":"2934:3:5"},"nodeType":"ForStatement","src":"2893:158:5"},{"expression":{"id":875,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"3068:13:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":820,"id":876,"nodeType":"Return","src":"3061:20:5"}]},"documentation":{"id":809,"nodeType":"StructuredDocumentation","src":"2385:146:5","text":" @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":878,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"2545:14:5","nodeType":"FunctionDefinition","parameters":{"id":816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":812,"mutability":"mutable","name":"accounts","nameLocation":"2586:8:5","nodeType":"VariableDeclaration","scope":878,"src":"2569:25:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":810,"name":"address","nodeType":"ElementaryTypeName","src":"2569:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":811,"nodeType":"ArrayTypeName","src":"2569:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":815,"mutability":"mutable","name":"ids","nameLocation":"2621:3:5","nodeType":"VariableDeclaration","scope":878,"src":"2604:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":813,"name":"uint256","nodeType":"ElementaryTypeName","src":"2604:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":814,"nodeType":"ArrayTypeName","src":"2604:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2559:71:5"},"returnParameters":{"id":820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":819,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":878,"src":"2660:16:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":817,"name":"uint256","nodeType":"ElementaryTypeName","src":"2660:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":818,"nodeType":"ArrayTypeName","src":"2660:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2659:18:5"},"scope":1739,"src":"2536:552:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1821],"body":{"id":893,"nodeType":"Block","src":"3231:69:5","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":887,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"3260:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3260:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":889,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"3274:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":890,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"3284:8:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":886,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"3241:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3241:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":892,"nodeType":"ExpressionStatement","src":"3241:52:5"}]},"documentation":{"id":879,"nodeType":"StructuredDocumentation","src":"3094:57:5","text":" @dev See {IERC1155-setApprovalForAll}."},"functionSelector":"a22cb465","id":894,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3165:17:5","nodeType":"FunctionDefinition","parameters":{"id":884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":881,"mutability":"mutable","name":"operator","nameLocation":"3191:8:5","nodeType":"VariableDeclaration","scope":894,"src":"3183:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":880,"name":"address","nodeType":"ElementaryTypeName","src":"3183:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":883,"mutability":"mutable","name":"approved","nameLocation":"3206:8:5","nodeType":"VariableDeclaration","scope":894,"src":"3201:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":882,"name":"bool","nodeType":"ElementaryTypeName","src":"3201:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3182:33:5"},"returnParameters":{"id":885,"nodeType":"ParameterList","parameters":[],"src":"3231:0:5"},"scope":1739,"src":"3156:144:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1831],"body":{"id":910,"nodeType":"Block","src":"3463:61:5","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":904,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"3480:18:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":906,"indexExpression":{"id":905,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"3499:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3480:27:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":908,"indexExpression":{"id":907,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"3508:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3480:37:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":903,"id":909,"nodeType":"Return","src":"3473:44:5"}]},"documentation":{"id":895,"nodeType":"StructuredDocumentation","src":"3306:56:5","text":" @dev See {IERC1155-isApprovedForAll}."},"functionSelector":"e985e9c5","id":911,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3376:16:5","nodeType":"FunctionDefinition","parameters":{"id":900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":897,"mutability":"mutable","name":"account","nameLocation":"3401:7:5","nodeType":"VariableDeclaration","scope":911,"src":"3393:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":896,"name":"address","nodeType":"ElementaryTypeName","src":"3393:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":899,"mutability":"mutable","name":"operator","nameLocation":"3418:8:5","nodeType":"VariableDeclaration","scope":911,"src":"3410:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":898,"name":"address","nodeType":"ElementaryTypeName","src":"3410:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3392:35:5"},"returnParameters":{"id":903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":902,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":911,"src":"3457:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":901,"name":"bool","nodeType":"ElementaryTypeName","src":"3457:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3456:6:5"},"scope":1739,"src":"3367:157:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1845],"body":{"id":954,"nodeType":"Block","src":"3704:238:5","statements":[{"assignments":[926],"declarations":[{"constant":false,"id":926,"mutability":"mutable","name":"sender","nameLocation":"3722:6:5","nodeType":"VariableDeclaration","scope":954,"src":"3714:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":925,"name":"address","nodeType":"ElementaryTypeName","src":"3714:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":929,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":927,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"3731:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3731:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3714:29:5"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":930,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"3757:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":931,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"3765:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3757:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3775:31:5","subExpression":{"arguments":[{"id":934,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"3793:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":935,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"3799:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":933,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"3776:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3776:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3757:49:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":945,"nodeType":"IfStatement","src":"3753:129:5","trueBody":{"id":944,"nodeType":"Block","src":"3808:74:5","statements":[{"errorCall":{"arguments":[{"id":940,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"3858:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":941,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"3866:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":939,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":670,"src":"3829:28:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3829:42:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":943,"nodeType":"RevertStatement","src":"3822:49:5"}]}},{"expression":{"arguments":[{"id":947,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"3909:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":948,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"3915:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":949,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":918,"src":"3919:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":950,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"3923:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":951,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"3930:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":946,"name":"_safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1296,"src":"3891:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,bytes memory)"}},"id":952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3891:44:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":953,"nodeType":"ExpressionStatement","src":"3891:44:5"}]},"documentation":{"id":912,"nodeType":"StructuredDocumentation","src":"3530:56:5","text":" @dev See {IERC1155-safeTransferFrom}."},"functionSelector":"f242432a","id":955,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3600:16:5","nodeType":"FunctionDefinition","parameters":{"id":923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":914,"mutability":"mutable","name":"from","nameLocation":"3625:4:5","nodeType":"VariableDeclaration","scope":955,"src":"3617:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":913,"name":"address","nodeType":"ElementaryTypeName","src":"3617:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":916,"mutability":"mutable","name":"to","nameLocation":"3639:2:5","nodeType":"VariableDeclaration","scope":955,"src":"3631:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":915,"name":"address","nodeType":"ElementaryTypeName","src":"3631:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":918,"mutability":"mutable","name":"id","nameLocation":"3651:2:5","nodeType":"VariableDeclaration","scope":955,"src":"3643:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":917,"name":"uint256","nodeType":"ElementaryTypeName","src":"3643:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":920,"mutability":"mutable","name":"value","nameLocation":"3663:5:5","nodeType":"VariableDeclaration","scope":955,"src":"3655:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":919,"name":"uint256","nodeType":"ElementaryTypeName","src":"3655:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":922,"mutability":"mutable","name":"data","nameLocation":"3683:4:5","nodeType":"VariableDeclaration","scope":955,"src":"3670:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":921,"name":"bytes","nodeType":"ElementaryTypeName","src":"3670:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3616:72:5"},"returnParameters":{"id":924,"nodeType":"ParameterList","parameters":[],"src":"3704:0:5"},"scope":1739,"src":"3591:351:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1861],"body":{"id":1000,"nodeType":"Block","src":"4198:245:5","statements":[{"assignments":[972],"declarations":[{"constant":false,"id":972,"mutability":"mutable","name":"sender","nameLocation":"4216:6:5","nodeType":"VariableDeclaration","scope":1000,"src":"4208:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":971,"name":"address","nodeType":"ElementaryTypeName","src":"4208:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":975,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":973,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"4225:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4225:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4208:29:5"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":976,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"4251:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":977,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":972,"src":"4259:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4251:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4269:31:5","subExpression":{"arguments":[{"id":980,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"4287:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":981,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":972,"src":"4293:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":979,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"4270:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4270:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4251:49:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":991,"nodeType":"IfStatement","src":"4247:129:5","trueBody":{"id":990,"nodeType":"Block","src":"4302:74:5","statements":[{"errorCall":{"arguments":[{"id":986,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":972,"src":"4352:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":987,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"4360:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":985,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":670,"src":"4323:28:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4323:42:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":989,"nodeType":"RevertStatement","src":"4316:49:5"}]}},{"expression":{"arguments":[{"id":993,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"4408:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":994,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"4414:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":995,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"4418:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":996,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"4423:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":997,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":968,"src":"4431:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":992,"name":"_safeBatchTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1351,"src":"4385:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4385:51:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":999,"nodeType":"ExpressionStatement","src":"4385:51:5"}]},"documentation":{"id":956,"nodeType":"StructuredDocumentation","src":"3948:61:5","text":" @dev See {IERC1155-safeBatchTransferFrom}."},"functionSelector":"2eb2c2d6","id":1001,"implemented":true,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"4023:21:5","nodeType":"FunctionDefinition","parameters":{"id":969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":958,"mutability":"mutable","name":"from","nameLocation":"4062:4:5","nodeType":"VariableDeclaration","scope":1001,"src":"4054:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":957,"name":"address","nodeType":"ElementaryTypeName","src":"4054:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":960,"mutability":"mutable","name":"to","nameLocation":"4084:2:5","nodeType":"VariableDeclaration","scope":1001,"src":"4076:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":959,"name":"address","nodeType":"ElementaryTypeName","src":"4076:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":963,"mutability":"mutable","name":"ids","nameLocation":"4113:3:5","nodeType":"VariableDeclaration","scope":1001,"src":"4096:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":961,"name":"uint256","nodeType":"ElementaryTypeName","src":"4096:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":962,"nodeType":"ArrayTypeName","src":"4096:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":966,"mutability":"mutable","name":"values","nameLocation":"4143:6:5","nodeType":"VariableDeclaration","scope":1001,"src":"4126:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":964,"name":"uint256","nodeType":"ElementaryTypeName","src":"4126:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":965,"nodeType":"ArrayTypeName","src":"4126:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":968,"mutability":"mutable","name":"data","nameLocation":"4172:4:5","nodeType":"VariableDeclaration","scope":1001,"src":"4159:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":967,"name":"bytes","nodeType":"ElementaryTypeName","src":"4159:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4044:138:5"},"returnParameters":{"id":970,"nodeType":"ParameterList","parameters":[],"src":"4198:0:5"},"scope":1739,"src":"4014:429:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1153,"nodeType":"Block","src":"5251:1174:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1015,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"5265:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5269:6:5","memberName":"length","nodeType":"MemberAccess","src":"5265:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1017,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"5279:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5286:6:5","memberName":"length","nodeType":"MemberAccess","src":"5279:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5265:27:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1028,"nodeType":"IfStatement","src":"5261:117:5","trueBody":{"id":1027,"nodeType":"Block","src":"5294:84:5","statements":[{"errorCall":{"arguments":[{"expression":{"id":1021,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"5341:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5345:6:5","memberName":"length","nodeType":"MemberAccess","src":"5341:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1023,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"5353:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5360:6:5","memberName":"length","nodeType":"MemberAccess","src":"5353:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1020,"name":"ERC1155InvalidArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"5315:25:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5315:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1026,"nodeType":"RevertStatement","src":"5308:59:5"}]}},{"assignments":[1030],"declarations":[{"constant":false,"id":1030,"mutability":"mutable","name":"operator","nameLocation":"5396:8:5","nodeType":"VariableDeclaration","scope":1153,"src":"5388:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1029,"name":"address","nodeType":"ElementaryTypeName","src":"5388:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1033,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1031,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"5407:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5407:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5388:31:5"},{"body":{"id":1114,"nodeType":"Block","src":"5471:650:5","statements":[{"assignments":[1046],"declarations":[{"constant":false,"id":1046,"mutability":"mutable","name":"id","nameLocation":"5493:2:5","nodeType":"VariableDeclaration","scope":1114,"src":"5485:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1045,"name":"uint256","nodeType":"ElementaryTypeName","src":"5485:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1051,"initialValue":{"arguments":[{"id":1049,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"5521:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1047,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"5498:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5502:18:5","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3151,"src":"5498:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5498:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5485:38:5"},{"assignments":[1053],"declarations":[{"constant":false,"id":1053,"mutability":"mutable","name":"value","nameLocation":"5545:5:5","nodeType":"VariableDeclaration","scope":1114,"src":"5537:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1052,"name":"uint256","nodeType":"ElementaryTypeName","src":"5537:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1058,"initialValue":{"arguments":[{"id":1056,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"5579:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1054,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"5553:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5560:18:5","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3151,"src":"5553:25:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5553:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5537:44:5"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1059,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1004,"src":"5600:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5616:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1061,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5608:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1060,"name":"address","nodeType":"ElementaryTypeName","src":"5608:7:5","typeDescriptions":{}}},"id":1063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5608:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5600:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1097,"nodeType":"IfStatement","src":"5596:420:5","trueBody":{"id":1096,"nodeType":"Block","src":"5620:396:5","statements":[{"assignments":[1066],"declarations":[{"constant":false,"id":1066,"mutability":"mutable","name":"fromBalance","nameLocation":"5646:11:5","nodeType":"VariableDeclaration","scope":1096,"src":"5638:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1065,"name":"uint256","nodeType":"ElementaryTypeName","src":"5638:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1072,"initialValue":{"baseExpression":{"baseExpression":{"id":1067,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"5660:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":1069,"indexExpression":{"id":1068,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"5670:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5660:13:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1071,"indexExpression":{"id":1070,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1004,"src":"5674:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5660:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5638:41:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1073,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"5701:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1074,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"5715:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5701:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1084,"nodeType":"IfStatement","src":"5697:129:5","trueBody":{"id":1083,"nodeType":"Block","src":"5722:104:5","statements":[{"errorCall":{"arguments":[{"id":1077,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1004,"src":"5778:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1078,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"5784:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1079,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"5797:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1080,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"5804:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1076,"name":"ERC1155InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":653,"src":"5751:26:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256) pure"}},"id":1081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5751:56:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1082,"nodeType":"RevertStatement","src":"5744:63:5"}]}},{"id":1095,"nodeType":"UncheckedBlock","src":"5843:159:5","statements":[{"expression":{"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1085,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"5942:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":1088,"indexExpression":{"id":1086,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"5952:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5942:13:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1089,"indexExpression":{"id":1087,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1004,"src":"5956:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5942:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1090,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"5964:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1091,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"5978:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5964:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5942:41:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1094,"nodeType":"ExpressionStatement","src":"5942:41:5"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1098,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"6034:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6048:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6040:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1099,"name":"address","nodeType":"ElementaryTypeName","src":"6040:7:5","typeDescriptions":{}}},"id":1102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6040:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6034:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1113,"nodeType":"IfStatement","src":"6030:81:5","trueBody":{"id":1112,"nodeType":"Block","src":"6052:59:5","statements":[{"expression":{"id":1110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1104,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"6070:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":1107,"indexExpression":{"id":1105,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"6080:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6070:13:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1108,"indexExpression":{"id":1106,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"6084:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6070:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1109,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"6091:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6070:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1111,"nodeType":"ExpressionStatement","src":"6070:26:5"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1038,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"5450:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1039,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"5454:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5458:6:5","memberName":"length","nodeType":"MemberAccess","src":"5454:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5450:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1115,"initializationExpression":{"assignments":[1035],"declarations":[{"constant":false,"id":1035,"mutability":"mutable","name":"i","nameLocation":"5443:1:5","nodeType":"VariableDeclaration","scope":1115,"src":"5435:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1034,"name":"uint256","nodeType":"ElementaryTypeName","src":"5435:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1037,"initialValue":{"hexValue":"30","id":1036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5447:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5435:13:5"},"loopExpression":{"expression":{"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"5466:3:5","subExpression":{"id":1042,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"5468:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1044,"nodeType":"ExpressionStatement","src":"5466:3:5"},"nodeType":"ForStatement","src":"5430:691:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1116,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"6135:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6139:6:5","memberName":"length","nodeType":"MemberAccess","src":"6135:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6149:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6135:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1151,"nodeType":"Block","src":"6343:76:5","statements":[{"eventCall":{"arguments":[{"id":1144,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"6376:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1145,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1004,"src":"6386:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1146,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"6392:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1147,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"6396:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1148,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"6401:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":1143,"name":"TransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"6362:13:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory)"}},"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6362:46:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1150,"nodeType":"EmitStatement","src":"6357:51:5"}]},"id":1152,"nodeType":"IfStatement","src":"6131:288:5","trueBody":{"id":1142,"nodeType":"Block","src":"6152:185:5","statements":[{"assignments":[1121],"declarations":[{"constant":false,"id":1121,"mutability":"mutable","name":"id","nameLocation":"6174:2:5","nodeType":"VariableDeclaration","scope":1142,"src":"6166:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1120,"name":"uint256","nodeType":"ElementaryTypeName","src":"6166:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1126,"initialValue":{"arguments":[{"hexValue":"30","id":1124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6202:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1122,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"6179:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6183:18:5","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3151,"src":"6179:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6179:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6166:38:5"},{"assignments":[1128],"declarations":[{"constant":false,"id":1128,"mutability":"mutable","name":"value","nameLocation":"6226:5:5","nodeType":"VariableDeclaration","scope":1142,"src":"6218:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1127,"name":"uint256","nodeType":"ElementaryTypeName","src":"6218:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1133,"initialValue":{"arguments":[{"hexValue":"30","id":1131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6260:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1129,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"6234:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6241:18:5","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3151,"src":"6234:25:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6234:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6218:44:5"},{"eventCall":{"arguments":[{"id":1135,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"6296:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1136,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1004,"src":"6306:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1137,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"6312:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1138,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"6316:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"6320:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1134,"name":"TransferSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"6281:14:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":1140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6281:45:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1141,"nodeType":"EmitStatement","src":"6276:50:5"}]}}]},"documentation":{"id":1002,"nodeType":"StructuredDocumentation","src":"4449:690:5","text":" @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n (or `to`) is the zero address.\n Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n Requirements:\n - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n - `ids` and `values` must have the same length.\n NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead."},"id":1154,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"5153:7:5","nodeType":"FunctionDefinition","parameters":{"id":1013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1004,"mutability":"mutable","name":"from","nameLocation":"5169:4:5","nodeType":"VariableDeclaration","scope":1154,"src":"5161:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1003,"name":"address","nodeType":"ElementaryTypeName","src":"5161:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1006,"mutability":"mutable","name":"to","nameLocation":"5183:2:5","nodeType":"VariableDeclaration","scope":1154,"src":"5175:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1005,"name":"address","nodeType":"ElementaryTypeName","src":"5175:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1009,"mutability":"mutable","name":"ids","nameLocation":"5204:3:5","nodeType":"VariableDeclaration","scope":1154,"src":"5187:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1007,"name":"uint256","nodeType":"ElementaryTypeName","src":"5187:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1008,"nodeType":"ArrayTypeName","src":"5187:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1012,"mutability":"mutable","name":"values","nameLocation":"5226:6:5","nodeType":"VariableDeclaration","scope":1154,"src":"5209:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1010,"name":"uint256","nodeType":"ElementaryTypeName","src":"5209:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1011,"nodeType":"ArrayTypeName","src":"5209:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5160:73:5"},"returnParameters":{"id":1014,"nodeType":"ParameterList","parameters":[],"src":"5251:0:5"},"scope":1739,"src":"5144:1281:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1229,"nodeType":"Block","src":"7195:499:5","statements":[{"expression":{"arguments":[{"id":1171,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"7213:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1172,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"7219:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1173,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"7223:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1174,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"7228:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":1170,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1154,"src":"7205:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory)"}},"id":1175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7205:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1176,"nodeType":"ExpressionStatement","src":"7205:30:5"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1177,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"7249:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7263:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7255:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1178,"name":"address","nodeType":"ElementaryTypeName","src":"7255:7:5","typeDescriptions":{}}},"id":1181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7255:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7249:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1228,"nodeType":"IfStatement","src":"7245:443:5","trueBody":{"id":1227,"nodeType":"Block","src":"7267:421:5","statements":[{"assignments":[1184],"declarations":[{"constant":false,"id":1184,"mutability":"mutable","name":"operator","nameLocation":"7289:8:5","nodeType":"VariableDeclaration","scope":1227,"src":"7281:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1183,"name":"address","nodeType":"ElementaryTypeName","src":"7281:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1187,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1185,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"7300:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7300:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7281:31:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1188,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"7330:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7334:6:5","memberName":"length","nodeType":"MemberAccess","src":"7330:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7344:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7330:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1225,"nodeType":"Block","src":"7571:107:5","statements":[{"expression":{"arguments":[{"id":1217,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"7625:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1218,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"7635:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1219,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"7641:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1220,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"7645:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1221,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"7650:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1222,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"7658:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1216,"name":"_doSafeBatchTransferAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"7589:35:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7589:74:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1224,"nodeType":"ExpressionStatement","src":"7589:74:5"}]},"id":1226,"nodeType":"IfStatement","src":"7326:352:5","trueBody":{"id":1215,"nodeType":"Block","src":"7347:218:5","statements":[{"assignments":[1193],"declarations":[{"constant":false,"id":1193,"mutability":"mutable","name":"id","nameLocation":"7373:2:5","nodeType":"VariableDeclaration","scope":1215,"src":"7365:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1192,"name":"uint256","nodeType":"ElementaryTypeName","src":"7365:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1198,"initialValue":{"arguments":[{"hexValue":"30","id":1196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7401:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1194,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"7378:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7382:18:5","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3151,"src":"7378:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7378:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7365:38:5"},{"assignments":[1200],"declarations":[{"constant":false,"id":1200,"mutability":"mutable","name":"value","nameLocation":"7429:5:5","nodeType":"VariableDeclaration","scope":1215,"src":"7421:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1199,"name":"uint256","nodeType":"ElementaryTypeName","src":"7421:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1205,"initialValue":{"arguments":[{"hexValue":"30","id":1203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7463:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1201,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"7437:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7444:18:5","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3151,"src":"7437:25:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7437:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7421:44:5"},{"expression":{"arguments":[{"id":1207,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"7514:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1208,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"7524:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1209,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"7530:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1210,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"7534:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1211,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"7538:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1212,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"7545:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1206,"name":"_doSafeTransferAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"7483:30:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,uint256,bytes memory)"}},"id":1213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7483:67:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1214,"nodeType":"ExpressionStatement","src":"7483:67:5"}]}}]}}]},"documentation":{"id":1155,"nodeType":"StructuredDocumentation","src":"6431:568:5","text":" @dev Version of {_update} that performs the token acceptance check by calling\n {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n contains code (eg. is a smart contract at the moment of execution).\n IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n update to the contract state after this function would break the check-effect-interaction pattern. Consider\n overriding {_update} instead."},"id":1230,"implemented":true,"kind":"function","modifiers":[],"name":"_updateWithAcceptanceCheck","nameLocation":"7013:26:5","nodeType":"FunctionDefinition","parameters":{"id":1168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1157,"mutability":"mutable","name":"from","nameLocation":"7057:4:5","nodeType":"VariableDeclaration","scope":1230,"src":"7049:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1156,"name":"address","nodeType":"ElementaryTypeName","src":"7049:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1159,"mutability":"mutable","name":"to","nameLocation":"7079:2:5","nodeType":"VariableDeclaration","scope":1230,"src":"7071:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1158,"name":"address","nodeType":"ElementaryTypeName","src":"7071:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1162,"mutability":"mutable","name":"ids","nameLocation":"7108:3:5","nodeType":"VariableDeclaration","scope":1230,"src":"7091:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1160,"name":"uint256","nodeType":"ElementaryTypeName","src":"7091:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1161,"nodeType":"ArrayTypeName","src":"7091:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1165,"mutability":"mutable","name":"values","nameLocation":"7138:6:5","nodeType":"VariableDeclaration","scope":1230,"src":"7121:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1163,"name":"uint256","nodeType":"ElementaryTypeName","src":"7121:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1164,"nodeType":"ArrayTypeName","src":"7121:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1167,"mutability":"mutable","name":"data","nameLocation":"7167:4:5","nodeType":"VariableDeclaration","scope":1230,"src":"7154:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1166,"name":"bytes","nodeType":"ElementaryTypeName","src":"7154:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7039:138:5"},"returnParameters":{"id":1169,"nodeType":"ParameterList","parameters":[],"src":"7195:0:5"},"scope":1739,"src":"7004:690:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1295,"nodeType":"Block","src":"8259:355:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1244,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"8273:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8287:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8279:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1245,"name":"address","nodeType":"ElementaryTypeName","src":"8279:7:5","typeDescriptions":{}}},"id":1248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8279:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8273:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1258,"nodeType":"IfStatement","src":"8269:88:5","trueBody":{"id":1257,"nodeType":"Block","src":"8291:66:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8343:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8335:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1251,"name":"address","nodeType":"ElementaryTypeName","src":"8335:7:5","typeDescriptions":{}}},"id":1254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8335:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1250,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"8312:22:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8312:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1256,"nodeType":"RevertStatement","src":"8305:41:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1259,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"8370:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8386:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8378:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1260,"name":"address","nodeType":"ElementaryTypeName","src":"8378:7:5","typeDescriptions":{}}},"id":1263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8378:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8370:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1273,"nodeType":"IfStatement","src":"8366:88:5","trueBody":{"id":1272,"nodeType":"Block","src":"8390:64:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8440:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8432:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1266,"name":"address","nodeType":"ElementaryTypeName","src":"8432:7:5","typeDescriptions":{}}},"id":1269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8432:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1265,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"8411:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8411:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1271,"nodeType":"RevertStatement","src":"8404:39:5"}]}},{"assignments":[1278,1281],"declarations":[{"constant":false,"id":1278,"mutability":"mutable","name":"ids","nameLocation":"8481:3:5","nodeType":"VariableDeclaration","scope":1295,"src":"8464:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1276,"name":"uint256","nodeType":"ElementaryTypeName","src":"8464:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1277,"nodeType":"ArrayTypeName","src":"8464:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1281,"mutability":"mutable","name":"values","nameLocation":"8503:6:5","nodeType":"VariableDeclaration","scope":1295,"src":"8486:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1279,"name":"uint256","nodeType":"ElementaryTypeName","src":"8486:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1280,"nodeType":"ArrayTypeName","src":"8486:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1286,"initialValue":{"arguments":[{"id":1283,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"8532:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1284,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"8536:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1282,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"8513:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8513:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"8463:79:5"},{"expression":{"arguments":[{"id":1288,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"8579:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1289,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"8585:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1290,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"8589:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1291,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"8594:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1292,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"8602:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1287,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"8552:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8552:55:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1294,"nodeType":"ExpressionStatement","src":"8552:55:5"}]},"documentation":{"id":1231,"nodeType":"StructuredDocumentation","src":"7700:446:5","text":" @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":1296,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransferFrom","nameLocation":"8160:17:5","nodeType":"FunctionDefinition","parameters":{"id":1242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1233,"mutability":"mutable","name":"from","nameLocation":"8186:4:5","nodeType":"VariableDeclaration","scope":1296,"src":"8178:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1232,"name":"address","nodeType":"ElementaryTypeName","src":"8178:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1235,"mutability":"mutable","name":"to","nameLocation":"8200:2:5","nodeType":"VariableDeclaration","scope":1296,"src":"8192:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1234,"name":"address","nodeType":"ElementaryTypeName","src":"8192:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1237,"mutability":"mutable","name":"id","nameLocation":"8212:2:5","nodeType":"VariableDeclaration","scope":1296,"src":"8204:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1236,"name":"uint256","nodeType":"ElementaryTypeName","src":"8204:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1239,"mutability":"mutable","name":"value","nameLocation":"8224:5:5","nodeType":"VariableDeclaration","scope":1296,"src":"8216:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1238,"name":"uint256","nodeType":"ElementaryTypeName","src":"8216:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1241,"mutability":"mutable","name":"data","nameLocation":"8244:4:5","nodeType":"VariableDeclaration","scope":1296,"src":"8231:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1240,"name":"bytes","nodeType":"ElementaryTypeName","src":"8231:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8177:72:5"},"returnParameters":{"id":1243,"nodeType":"ParameterList","parameters":[],"src":"8259:0:5"},"scope":1739,"src":"8151:463:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1350,"nodeType":"Block","src":"9194:266:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1312,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"9208:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9222:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9214:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1313,"name":"address","nodeType":"ElementaryTypeName","src":"9214:7:5","typeDescriptions":{}}},"id":1316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9214:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9208:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1326,"nodeType":"IfStatement","src":"9204:88:5","trueBody":{"id":1325,"nodeType":"Block","src":"9226:66:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9278:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1320,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9270:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1319,"name":"address","nodeType":"ElementaryTypeName","src":"9270:7:5","typeDescriptions":{}}},"id":1322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9270:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1318,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"9247:22:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9247:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1324,"nodeType":"RevertStatement","src":"9240:41:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1327,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"9305:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9321:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9313:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1328,"name":"address","nodeType":"ElementaryTypeName","src":"9313:7:5","typeDescriptions":{}}},"id":1331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9313:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9305:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1341,"nodeType":"IfStatement","src":"9301:88:5","trueBody":{"id":1340,"nodeType":"Block","src":"9325:64:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9375:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1335,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9367:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1334,"name":"address","nodeType":"ElementaryTypeName","src":"9367:7:5","typeDescriptions":{}}},"id":1337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9367:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1333,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"9346:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9346:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1339,"nodeType":"RevertStatement","src":"9339:39:5"}]}},{"expression":{"arguments":[{"id":1343,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"9425:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1344,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"9431:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1345,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"9435:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1346,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"9440:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1347,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"9448:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1342,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"9398:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9398:55:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1349,"nodeType":"ExpressionStatement","src":"9398:55:5"}]},"documentation":{"id":1297,"nodeType":"StructuredDocumentation","src":"8620:390:5","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value.\n - `ids` and `values` must have the same length."},"id":1351,"implemented":true,"kind":"function","modifiers":[],"name":"_safeBatchTransferFrom","nameLocation":"9024:22:5","nodeType":"FunctionDefinition","parameters":{"id":1310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1299,"mutability":"mutable","name":"from","nameLocation":"9064:4:5","nodeType":"VariableDeclaration","scope":1351,"src":"9056:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1298,"name":"address","nodeType":"ElementaryTypeName","src":"9056:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1301,"mutability":"mutable","name":"to","nameLocation":"9086:2:5","nodeType":"VariableDeclaration","scope":1351,"src":"9078:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1300,"name":"address","nodeType":"ElementaryTypeName","src":"9078:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1304,"mutability":"mutable","name":"ids","nameLocation":"9115:3:5","nodeType":"VariableDeclaration","scope":1351,"src":"9098:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1302,"name":"uint256","nodeType":"ElementaryTypeName","src":"9098:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1303,"nodeType":"ArrayTypeName","src":"9098:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1307,"mutability":"mutable","name":"values","nameLocation":"9145:6:5","nodeType":"VariableDeclaration","scope":1351,"src":"9128:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1305,"name":"uint256","nodeType":"ElementaryTypeName","src":"9128:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1306,"nodeType":"ArrayTypeName","src":"9128:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1309,"mutability":"mutable","name":"data","nameLocation":"9174:4:5","nodeType":"VariableDeclaration","scope":1351,"src":"9161:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1308,"name":"bytes","nodeType":"ElementaryTypeName","src":"9161:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9046:138:5"},"returnParameters":{"id":1311,"nodeType":"ParameterList","parameters":[],"src":"9194:0:5"},"scope":1739,"src":"9015:445:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1361,"nodeType":"Block","src":"10338:30:5","statements":[{"expression":{"id":1359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1357,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"10348:4:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1358,"name":"newuri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1354,"src":"10355:6:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"10348:13:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1360,"nodeType":"ExpressionStatement","src":"10348:13:5"}]},"documentation":{"id":1352,"nodeType":"StructuredDocumentation","src":"9466:811:5","text":" @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the values in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."},"id":1362,"implemented":true,"kind":"function","modifiers":[],"name":"_setURI","nameLocation":"10291:7:5","nodeType":"FunctionDefinition","parameters":{"id":1355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1354,"mutability":"mutable","name":"newuri","nameLocation":"10313:6:5","nodeType":"VariableDeclaration","scope":1362,"src":"10299:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1353,"name":"string","nodeType":"ElementaryTypeName","src":"10299:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10298:22:5"},"returnParameters":{"id":1356,"nodeType":"ParameterList","parameters":[],"src":"10338:0:5"},"scope":1739,"src":"10282:86:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1413,"nodeType":"Block","src":"10828:264:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1374,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1365,"src":"10842:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10856:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1376,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10848:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1375,"name":"address","nodeType":"ElementaryTypeName","src":"10848:7:5","typeDescriptions":{}}},"id":1378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10848:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10842:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1388,"nodeType":"IfStatement","src":"10838:88:5","trueBody":{"id":1387,"nodeType":"Block","src":"10860:66:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10912:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10904:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1381,"name":"address","nodeType":"ElementaryTypeName","src":"10904:7:5","typeDescriptions":{}}},"id":1384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10904:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1380,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"10881:22:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10881:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1386,"nodeType":"RevertStatement","src":"10874:41:5"}]}},{"assignments":[1393,1396],"declarations":[{"constant":false,"id":1393,"mutability":"mutable","name":"ids","nameLocation":"10953:3:5","nodeType":"VariableDeclaration","scope":1413,"src":"10936:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1391,"name":"uint256","nodeType":"ElementaryTypeName","src":"10936:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1392,"nodeType":"ArrayTypeName","src":"10936:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1396,"mutability":"mutable","name":"values","nameLocation":"10975:6:5","nodeType":"VariableDeclaration","scope":1413,"src":"10958:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1394,"name":"uint256","nodeType":"ElementaryTypeName","src":"10958:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1395,"nodeType":"ArrayTypeName","src":"10958:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1401,"initialValue":{"arguments":[{"id":1398,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"11004:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1399,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"11008:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1397,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"10985:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10985:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"10935:79:5"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11059:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1404,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11051:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1403,"name":"address","nodeType":"ElementaryTypeName","src":"11051:7:5","typeDescriptions":{}}},"id":1406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11051:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1407,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1365,"src":"11063:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1408,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"11067:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1409,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"11072:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1410,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1371,"src":"11080:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1402,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"11024:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11024:61:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1412,"nodeType":"ExpressionStatement","src":"11024:61:5"}]},"documentation":{"id":1363,"nodeType":"StructuredDocumentation","src":"10374:367:5","text":" @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":1414,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"10755:5:5","nodeType":"FunctionDefinition","parameters":{"id":1372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1365,"mutability":"mutable","name":"to","nameLocation":"10769:2:5","nodeType":"VariableDeclaration","scope":1414,"src":"10761:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1364,"name":"address","nodeType":"ElementaryTypeName","src":"10761:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1367,"mutability":"mutable","name":"id","nameLocation":"10781:2:5","nodeType":"VariableDeclaration","scope":1414,"src":"10773:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1366,"name":"uint256","nodeType":"ElementaryTypeName","src":"10773:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1369,"mutability":"mutable","name":"value","nameLocation":"10793:5:5","nodeType":"VariableDeclaration","scope":1414,"src":"10785:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1368,"name":"uint256","nodeType":"ElementaryTypeName","src":"10785:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1371,"mutability":"mutable","name":"data","nameLocation":"10813:4:5","nodeType":"VariableDeclaration","scope":1414,"src":"10800:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1370,"name":"bytes","nodeType":"ElementaryTypeName","src":"10800:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10760:58:5"},"returnParameters":{"id":1373,"nodeType":"ParameterList","parameters":[],"src":"10828:0:5"},"scope":1739,"src":"10746:346:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1454,"nodeType":"Block","src":"11630:175:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1428,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1417,"src":"11644:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11658:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1430,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11650:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1429,"name":"address","nodeType":"ElementaryTypeName","src":"11650:7:5","typeDescriptions":{}}},"id":1432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11650:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11644:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1442,"nodeType":"IfStatement","src":"11640:88:5","trueBody":{"id":1441,"nodeType":"Block","src":"11662:66:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11714:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11706:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1435,"name":"address","nodeType":"ElementaryTypeName","src":"11706:7:5","typeDescriptions":{}}},"id":1438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11706:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1434,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"11683:22:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11683:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1440,"nodeType":"RevertStatement","src":"11676:41:5"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11772:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11764:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1444,"name":"address","nodeType":"ElementaryTypeName","src":"11764:7:5","typeDescriptions":{}}},"id":1447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11764:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1448,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1417,"src":"11776:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1449,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"11780:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1450,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1423,"src":"11785:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1451,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1425,"src":"11793:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1443,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"11737:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11737:61:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1453,"nodeType":"ExpressionStatement","src":"11737:61:5"}]},"documentation":{"id":1415,"nodeType":"StructuredDocumentation","src":"11098:420:5","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `values` must have the same length.\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"id":1455,"implemented":true,"kind":"function","modifiers":[],"name":"_mintBatch","nameLocation":"11532:10:5","nodeType":"FunctionDefinition","parameters":{"id":1426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1417,"mutability":"mutable","name":"to","nameLocation":"11551:2:5","nodeType":"VariableDeclaration","scope":1455,"src":"11543:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1416,"name":"address","nodeType":"ElementaryTypeName","src":"11543:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1420,"mutability":"mutable","name":"ids","nameLocation":"11572:3:5","nodeType":"VariableDeclaration","scope":1455,"src":"11555:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1418,"name":"uint256","nodeType":"ElementaryTypeName","src":"11555:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1419,"nodeType":"ArrayTypeName","src":"11555:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1423,"mutability":"mutable","name":"values","nameLocation":"11594:6:5","nodeType":"VariableDeclaration","scope":1455,"src":"11577:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1421,"name":"uint256","nodeType":"ElementaryTypeName","src":"11577:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1422,"nodeType":"ArrayTypeName","src":"11577:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1425,"mutability":"mutable","name":"data","nameLocation":"11615:4:5","nodeType":"VariableDeclaration","scope":1455,"src":"11602:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1424,"name":"bytes","nodeType":"ElementaryTypeName","src":"11602:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11542:78:5"},"returnParameters":{"id":1427,"nodeType":"ParameterList","parameters":[],"src":"11630:0:5"},"scope":1739,"src":"11523:282:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1504,"nodeType":"Block","src":"12164:264:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1465,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"12178:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12194:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12186:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1466,"name":"address","nodeType":"ElementaryTypeName","src":"12186:7:5","typeDescriptions":{}}},"id":1469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12186:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12178:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1479,"nodeType":"IfStatement","src":"12174:88:5","trueBody":{"id":1478,"nodeType":"Block","src":"12198:64:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12248:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12240:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1472,"name":"address","nodeType":"ElementaryTypeName","src":"12240:7:5","typeDescriptions":{}}},"id":1475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12240:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1471,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"12219:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12219:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1477,"nodeType":"RevertStatement","src":"12212:39:5"}]}},{"assignments":[1484,1487],"declarations":[{"constant":false,"id":1484,"mutability":"mutable","name":"ids","nameLocation":"12289:3:5","nodeType":"VariableDeclaration","scope":1504,"src":"12272:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1482,"name":"uint256","nodeType":"ElementaryTypeName","src":"12272:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1483,"nodeType":"ArrayTypeName","src":"12272:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1487,"mutability":"mutable","name":"values","nameLocation":"12311:6:5","nodeType":"VariableDeclaration","scope":1504,"src":"12294:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1485,"name":"uint256","nodeType":"ElementaryTypeName","src":"12294:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1486,"nodeType":"ArrayTypeName","src":"12294:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1492,"initialValue":{"arguments":[{"id":1489,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"12340:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1490,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"12344:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1488,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"12321:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12321:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"12271:79:5"},{"expression":{"arguments":[{"id":1494,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"12387:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12401:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12393:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1495,"name":"address","nodeType":"ElementaryTypeName","src":"12393:7:5","typeDescriptions":{}}},"id":1498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12393:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1499,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1484,"src":"12405:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1500,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1487,"src":"12410:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12418:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1493,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"12360:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12360:61:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1503,"nodeType":"ExpressionStatement","src":"12360:61:5"}]},"documentation":{"id":1456,"nodeType":"StructuredDocumentation","src":"11811:283:5","text":" @dev Destroys a `value` amount of tokens of type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`."},"id":1505,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"12108:5:5","nodeType":"FunctionDefinition","parameters":{"id":1463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1458,"mutability":"mutable","name":"from","nameLocation":"12122:4:5","nodeType":"VariableDeclaration","scope":1505,"src":"12114:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1457,"name":"address","nodeType":"ElementaryTypeName","src":"12114:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1460,"mutability":"mutable","name":"id","nameLocation":"12136:2:5","nodeType":"VariableDeclaration","scope":1505,"src":"12128:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1459,"name":"uint256","nodeType":"ElementaryTypeName","src":"12128:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1462,"mutability":"mutable","name":"value","nameLocation":"12148:5:5","nodeType":"VariableDeclaration","scope":1505,"src":"12140:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1461,"name":"uint256","nodeType":"ElementaryTypeName","src":"12140:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12113:41:5"},"returnParameters":{"id":1464,"nodeType":"ParameterList","parameters":[],"src":"12164:0:5"},"scope":1739,"src":"12099:329:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1543,"nodeType":"Block","src":"12874:175:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1517,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"12888:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12904:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12896:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1518,"name":"address","nodeType":"ElementaryTypeName","src":"12896:7:5","typeDescriptions":{}}},"id":1521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12896:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12888:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1531,"nodeType":"IfStatement","src":"12884:88:5","trueBody":{"id":1530,"nodeType":"Block","src":"12908:64:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12958:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12950:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1524,"name":"address","nodeType":"ElementaryTypeName","src":"12950:7:5","typeDescriptions":{}}},"id":1527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12950:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1523,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"12929:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12929:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1529,"nodeType":"RevertStatement","src":"12922:39:5"}]}},{"expression":{"arguments":[{"id":1533,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"13008:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13022:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13014:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1534,"name":"address","nodeType":"ElementaryTypeName","src":"13014:7:5","typeDescriptions":{}}},"id":1537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13014:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1538,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"13026:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1539,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1514,"src":"13031:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13039:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1532,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"12981:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12981:61:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1542,"nodeType":"ExpressionStatement","src":"12981:61:5"}]},"documentation":{"id":1506,"nodeType":"StructuredDocumentation","src":"12434:345:5","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`.\n - `ids` and `values` must have the same length."},"id":1544,"implemented":true,"kind":"function","modifiers":[],"name":"_burnBatch","nameLocation":"12793:10:5","nodeType":"FunctionDefinition","parameters":{"id":1515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1508,"mutability":"mutable","name":"from","nameLocation":"12812:4:5","nodeType":"VariableDeclaration","scope":1544,"src":"12804:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1507,"name":"address","nodeType":"ElementaryTypeName","src":"12804:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1511,"mutability":"mutable","name":"ids","nameLocation":"12835:3:5","nodeType":"VariableDeclaration","scope":1544,"src":"12818:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1509,"name":"uint256","nodeType":"ElementaryTypeName","src":"12818:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1510,"nodeType":"ArrayTypeName","src":"12818:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1514,"mutability":"mutable","name":"values","nameLocation":"12857:6:5","nodeType":"VariableDeclaration","scope":1544,"src":"12840:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1512,"name":"uint256","nodeType":"ElementaryTypeName","src":"12840:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1513,"nodeType":"ArrayTypeName","src":"12840:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12803:61:5"},"returnParameters":{"id":1516,"nodeType":"ParameterList","parameters":[],"src":"12874:0:5"},"scope":1739,"src":"12784:265:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1583,"nodeType":"Block","src":"13361:222:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1554,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"13375:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13395:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1555,"name":"address","nodeType":"ElementaryTypeName","src":"13387:7:5","typeDescriptions":{}}},"id":1558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13387:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13375:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1568,"nodeType":"IfStatement","src":"13371:94:5","trueBody":{"id":1567,"nodeType":"Block","src":"13399:66:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13451:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13443:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1561,"name":"address","nodeType":"ElementaryTypeName","src":"13443:7:5","typeDescriptions":{}}},"id":1564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13443:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1560,"name":"ERC1155InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"13420:22:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13420:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1566,"nodeType":"RevertStatement","src":"13413:41:5"}]}},{"expression":{"id":1575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1569,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"13474:18:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1572,"indexExpression":{"id":1570,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"13493:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13474:25:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1573,"indexExpression":{"id":1571,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"13500:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13474:35:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1574,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"13512:8:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13474:46:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1576,"nodeType":"ExpressionStatement","src":"13474:46:5"},{"eventCall":{"arguments":[{"id":1578,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"13550:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1579,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"13557:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1580,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"13567:8:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1577,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"13535:14:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13535:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1582,"nodeType":"EmitStatement","src":"13530:46:5"}]},"documentation":{"id":1545,"nodeType":"StructuredDocumentation","src":"13055:208:5","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."},"id":1584,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"13277:18:5","nodeType":"FunctionDefinition","parameters":{"id":1552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1547,"mutability":"mutable","name":"owner","nameLocation":"13304:5:5","nodeType":"VariableDeclaration","scope":1584,"src":"13296:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1546,"name":"address","nodeType":"ElementaryTypeName","src":"13296:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1549,"mutability":"mutable","name":"operator","nameLocation":"13319:8:5","nodeType":"VariableDeclaration","scope":1584,"src":"13311:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1548,"name":"address","nodeType":"ElementaryTypeName","src":"13311:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1551,"mutability":"mutable","name":"approved","nameLocation":"13334:8:5","nodeType":"VariableDeclaration","scope":1584,"src":"13329:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1550,"name":"bool","nodeType":"ElementaryTypeName","src":"13329:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13295:48:5"},"returnParameters":{"id":1553,"nodeType":"ParameterList","parameters":[],"src":"13361:0:5"},"scope":1739,"src":"13268:315:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1651,"nodeType":"Block","src":"13953:782:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1600,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"13967:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13970:4:5","memberName":"code","nodeType":"MemberAccess","src":"13967:7:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13975:6:5","memberName":"length","nodeType":"MemberAccess","src":"13967:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13984:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13967:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1650,"nodeType":"IfStatement","src":"13963:766:5","trueBody":{"id":1649,"nodeType":"Block","src":"13987:742:5","statements":[{"clauses":[{"block":{"id":1629,"nodeType":"Block","src":"14103:206:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1618,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"14125:8:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1619,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"14137:16:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1904_$","typeString":"type(contract IERC1155Receiver)"}},"id":1620,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14154:17:5","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1885,"src":"14137:34:5","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"}},"id":1621,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14172:8:5","memberName":"selector","nodeType":"MemberAccess","src":"14137:43:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"14125:55:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1628,"nodeType":"IfStatement","src":"14121:174:5","trueBody":{"id":1627,"nodeType":"Block","src":"14182:113:5","statements":[{"errorCall":{"arguments":[{"id":1624,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"14273:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1623,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"14250:22:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14250:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1626,"nodeType":"RevertStatement","src":"14243:33:5"}]}}]},"errorName":"","id":1630,"nodeType":"TryCatchClause","parameters":{"id":1617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1616,"mutability":"mutable","name":"response","nameLocation":"14093:8:5","nodeType":"VariableDeclaration","scope":1630,"src":"14086:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1615,"name":"bytes4","nodeType":"ElementaryTypeName","src":"14086:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"14085:17:5"},"src":"14077:232:5"},{"block":{"id":1646,"nodeType":"Block","src":"14338:381:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1634,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"14360:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14367:6:5","memberName":"length","nodeType":"MemberAccess","src":"14360:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14377:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14360:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1644,"nodeType":"Block","src":"14515:190:5","statements":[{"AST":{"nodeType":"YulBlock","src":"14601:86:5","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14638:2:5","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"14642:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14634:3:5"},"nodeType":"YulFunctionCall","src":"14634:15:5"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"14657:6:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14651:5:5"},"nodeType":"YulFunctionCall","src":"14651:13:5"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14627:6:5"},"nodeType":"YulFunctionCall","src":"14627:38:5"},"nodeType":"YulExpressionStatement","src":"14627:38:5"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1632,"isOffset":false,"isSlot":false,"src":"14642:6:5","valueSize":1},{"declaration":1632,"isOffset":false,"isSlot":false,"src":"14657:6:5","valueSize":1}],"id":1643,"nodeType":"InlineAssembly","src":"14592:95:5"}]},"id":1645,"nodeType":"IfStatement","src":"14356:349:5","trueBody":{"id":1642,"nodeType":"Block","src":"14380:129:5","statements":[{"errorCall":{"arguments":[{"id":1639,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"14487:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1638,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"14464:22:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14464:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1641,"nodeType":"RevertStatement","src":"14457:33:5"}]}}]},"errorName":"","id":1647,"nodeType":"TryCatchClause","parameters":{"id":1633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1632,"mutability":"mutable","name":"reason","nameLocation":"14330:6:5","nodeType":"VariableDeclaration","scope":1647,"src":"14317:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1631,"name":"bytes","nodeType":"ElementaryTypeName","src":"14317:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14316:21:5"},"src":"14310:409:5"}],"externalCall":{"arguments":[{"id":1609,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"14044:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1610,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"14054:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1611,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"14060:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1612,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"14064:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1613,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"14071:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1606,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"14022:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1605,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"14005:16:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1904_$","typeString":"type(contract IERC1155Receiver)"}},"id":1607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14005:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1904","typeString":"contract IERC1155Receiver"}},"id":1608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14026:17:5","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1885,"src":"14005:38:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"}},"id":1614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14005:71:5","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1648,"nodeType":"TryStatement","src":"14001:718:5"}]}}]},"documentation":{"id":1585,"nodeType":"StructuredDocumentation","src":"13589:167:5","text":" @dev Performs an acceptance check by calling {IERC1155-onERC1155Received} on the `to` address\n if it contains code at the moment of execution."},"id":1652,"implemented":true,"kind":"function","modifiers":[],"name":"_doSafeTransferAcceptanceCheck","nameLocation":"13770:30:5","nodeType":"FunctionDefinition","parameters":{"id":1598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1587,"mutability":"mutable","name":"operator","nameLocation":"13818:8:5","nodeType":"VariableDeclaration","scope":1652,"src":"13810:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1586,"name":"address","nodeType":"ElementaryTypeName","src":"13810:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1589,"mutability":"mutable","name":"from","nameLocation":"13844:4:5","nodeType":"VariableDeclaration","scope":1652,"src":"13836:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1588,"name":"address","nodeType":"ElementaryTypeName","src":"13836:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1591,"mutability":"mutable","name":"to","nameLocation":"13866:2:5","nodeType":"VariableDeclaration","scope":1652,"src":"13858:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1590,"name":"address","nodeType":"ElementaryTypeName","src":"13858:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1593,"mutability":"mutable","name":"id","nameLocation":"13886:2:5","nodeType":"VariableDeclaration","scope":1652,"src":"13878:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1592,"name":"uint256","nodeType":"ElementaryTypeName","src":"13878:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1595,"mutability":"mutable","name":"value","nameLocation":"13906:5:5","nodeType":"VariableDeclaration","scope":1652,"src":"13898:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1594,"name":"uint256","nodeType":"ElementaryTypeName","src":"13898:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1597,"mutability":"mutable","name":"data","nameLocation":"13934:4:5","nodeType":"VariableDeclaration","scope":1652,"src":"13921:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1596,"name":"bytes","nodeType":"ElementaryTypeName","src":"13921:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13800:144:5"},"returnParameters":{"id":1599,"nodeType":"ParameterList","parameters":[],"src":"13953:0:5"},"scope":1739,"src":"13761:974:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1721,"nodeType":"Block","src":"15140:824:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1670,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1659,"src":"15154:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15157:4:5","memberName":"code","nodeType":"MemberAccess","src":"15154:7:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15162:6:5","memberName":"length","nodeType":"MemberAccess","src":"15154:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15171:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15154:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1720,"nodeType":"IfStatement","src":"15150:808:5","trueBody":{"id":1719,"nodeType":"Block","src":"15174:784:5","statements":[{"clauses":[{"block":{"id":1699,"nodeType":"Block","src":"15327:211:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1688,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"15349:8:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1689,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"15361:16:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1904_$","typeString":"type(contract IERC1155Receiver)"}},"id":1690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15378:22:5","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1903,"src":"15361:39:5","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"}},"id":1691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15401:8:5","memberName":"selector","nodeType":"MemberAccess","src":"15361:48:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"15349:60:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1698,"nodeType":"IfStatement","src":"15345:179:5","trueBody":{"id":1697,"nodeType":"Block","src":"15411:113:5","statements":[{"errorCall":{"arguments":[{"id":1694,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1659,"src":"15502:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1693,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"15479:22:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15479:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1696,"nodeType":"RevertStatement","src":"15472:33:5"}]}}]},"errorName":"","id":1700,"nodeType":"TryCatchClause","parameters":{"id":1687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1686,"mutability":"mutable","name":"response","nameLocation":"15304:8:5","nodeType":"VariableDeclaration","scope":1700,"src":"15297:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1685,"name":"bytes4","nodeType":"ElementaryTypeName","src":"15297:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"15279:47:5"},"src":"15271:267:5"},{"block":{"id":1716,"nodeType":"Block","src":"15567:381:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1704,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1702,"src":"15589:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15596:6:5","memberName":"length","nodeType":"MemberAccess","src":"15589:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15606:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15589:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1714,"nodeType":"Block","src":"15744:190:5","statements":[{"AST":{"nodeType":"YulBlock","src":"15830:86:5","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15867:2:5","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"15871:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15863:3:5"},"nodeType":"YulFunctionCall","src":"15863:15:5"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"15886:6:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15880:5:5"},"nodeType":"YulFunctionCall","src":"15880:13:5"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15856:6:5"},"nodeType":"YulFunctionCall","src":"15856:38:5"},"nodeType":"YulExpressionStatement","src":"15856:38:5"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1702,"isOffset":false,"isSlot":false,"src":"15871:6:5","valueSize":1},{"declaration":1702,"isOffset":false,"isSlot":false,"src":"15886:6:5","valueSize":1}],"id":1713,"nodeType":"InlineAssembly","src":"15821:95:5"}]},"id":1715,"nodeType":"IfStatement","src":"15585:349:5","trueBody":{"id":1712,"nodeType":"Block","src":"15609:129:5","statements":[{"errorCall":{"arguments":[{"id":1709,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1659,"src":"15716:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1708,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"15693:22:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15693:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1711,"nodeType":"RevertStatement","src":"15686:33:5"}]}}]},"errorName":"","id":1717,"nodeType":"TryCatchClause","parameters":{"id":1703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1702,"mutability":"mutable","name":"reason","nameLocation":"15559:6:5","nodeType":"VariableDeclaration","scope":1717,"src":"15546:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1701,"name":"bytes","nodeType":"ElementaryTypeName","src":"15546:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15545:21:5"},"src":"15539:409:5"}],"externalCall":{"arguments":[{"id":1679,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1655,"src":"15236:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1680,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"15246:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1681,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"15252:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1682,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1665,"src":"15257:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1683,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1667,"src":"15265:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1676,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1659,"src":"15209:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1675,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"15192:16:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1904_$","typeString":"type(contract IERC1155Receiver)"}},"id":1677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15192:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1904","typeString":"contract IERC1155Receiver"}},"id":1678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15213:22:5","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1903,"src":"15192:43:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"}},"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15192:78:5","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1718,"nodeType":"TryStatement","src":"15188:760:5"}]}}]},"documentation":{"id":1653,"nodeType":"StructuredDocumentation","src":"14741:177:5","text":" @dev Performs a batch acceptance check by calling {IERC1155-onERC1155BatchReceived} on the `to` address\n if it contains code at the moment of execution."},"id":1722,"implemented":true,"kind":"function","modifiers":[],"name":"_doSafeBatchTransferAcceptanceCheck","nameLocation":"14932:35:5","nodeType":"FunctionDefinition","parameters":{"id":1668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1655,"mutability":"mutable","name":"operator","nameLocation":"14985:8:5","nodeType":"VariableDeclaration","scope":1722,"src":"14977:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1654,"name":"address","nodeType":"ElementaryTypeName","src":"14977:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1657,"mutability":"mutable","name":"from","nameLocation":"15011:4:5","nodeType":"VariableDeclaration","scope":1722,"src":"15003:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1656,"name":"address","nodeType":"ElementaryTypeName","src":"15003:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1659,"mutability":"mutable","name":"to","nameLocation":"15033:2:5","nodeType":"VariableDeclaration","scope":1722,"src":"15025:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1658,"name":"address","nodeType":"ElementaryTypeName","src":"15025:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1662,"mutability":"mutable","name":"ids","nameLocation":"15062:3:5","nodeType":"VariableDeclaration","scope":1722,"src":"15045:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1660,"name":"uint256","nodeType":"ElementaryTypeName","src":"15045:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1661,"nodeType":"ArrayTypeName","src":"15045:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1665,"mutability":"mutable","name":"values","nameLocation":"15092:6:5","nodeType":"VariableDeclaration","scope":1722,"src":"15075:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1663,"name":"uint256","nodeType":"ElementaryTypeName","src":"15075:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1664,"nodeType":"ArrayTypeName","src":"15075:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1667,"mutability":"mutable","name":"data","nameLocation":"15121:4:5","nodeType":"VariableDeclaration","scope":1722,"src":"15108:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1666,"name":"bytes","nodeType":"ElementaryTypeName","src":"15108:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14967:164:5"},"returnParameters":{"id":1669,"nodeType":"ParameterList","parameters":[],"src":"15140:0:5"},"scope":1739,"src":"14923:1041:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1737,"nodeType":"Block","src":"16238:691:5","statements":[{"AST":{"nodeType":"YulBlock","src":"16300:623:5","statements":[{"nodeType":"YulAssignment","src":"16358:21:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16374:4:5","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16368:5:5"},"nodeType":"YulFunctionCall","src":"16368:11:5"},"variableNames":[{"name":"array1","nodeType":"YulIdentifier","src":"16358:6:5"}]},{"expression":{"arguments":[{"name":"array1","nodeType":"YulIdentifier","src":"16436:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"16444:1:5","type":"","value":"1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16429:6:5"},"nodeType":"YulFunctionCall","src":"16429:17:5"},"nodeType":"YulExpressionStatement","src":"16429:17:5"},{"expression":{"arguments":[{"arguments":[{"name":"array1","nodeType":"YulIdentifier","src":"16567:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"16575:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16563:3:5"},"nodeType":"YulFunctionCall","src":"16563:17:5"},{"name":"element1","nodeType":"YulIdentifier","src":"16582:8:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16556:6:5"},"nodeType":"YulFunctionCall","src":"16556:35:5"},"nodeType":"YulExpressionStatement","src":"16556:35:5"},{"nodeType":"YulAssignment","src":"16682:27:5","value":{"arguments":[{"name":"array1","nodeType":"YulIdentifier","src":"16696:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"16704:4:5","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16692:3:5"},"nodeType":"YulFunctionCall","src":"16692:17:5"},"variableNames":[{"name":"array2","nodeType":"YulIdentifier","src":"16682:6:5"}]},{"expression":{"arguments":[{"name":"array2","nodeType":"YulIdentifier","src":"16729:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"16737:1:5","type":"","value":"1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16722:6:5"},"nodeType":"YulFunctionCall","src":"16722:17:5"},"nodeType":"YulExpressionStatement","src":"16722:17:5"},{"expression":{"arguments":[{"arguments":[{"name":"array2","nodeType":"YulIdentifier","src":"16763:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"16771:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16759:3:5"},"nodeType":"YulFunctionCall","src":"16759:17:5"},{"name":"element2","nodeType":"YulIdentifier","src":"16778:8:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16752:6:5"},"nodeType":"YulFunctionCall","src":"16752:35:5"},"nodeType":"YulExpressionStatement","src":"16752:35:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16889:4:5","type":"","value":"0x40"},{"arguments":[{"name":"array2","nodeType":"YulIdentifier","src":"16899:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"16907:4:5","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16895:3:5"},"nodeType":"YulFunctionCall","src":"16895:17:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16882:6:5"},"nodeType":"YulFunctionCall","src":"16882:31:5"},"nodeType":"YulExpressionStatement","src":"16882:31:5"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1731,"isOffset":false,"isSlot":false,"src":"16358:6:5","valueSize":1},{"declaration":1731,"isOffset":false,"isSlot":false,"src":"16436:6:5","valueSize":1},{"declaration":1731,"isOffset":false,"isSlot":false,"src":"16567:6:5","valueSize":1},{"declaration":1731,"isOffset":false,"isSlot":false,"src":"16696:6:5","valueSize":1},{"declaration":1734,"isOffset":false,"isSlot":false,"src":"16682:6:5","valueSize":1},{"declaration":1734,"isOffset":false,"isSlot":false,"src":"16729:6:5","valueSize":1},{"declaration":1734,"isOffset":false,"isSlot":false,"src":"16763:6:5","valueSize":1},{"declaration":1734,"isOffset":false,"isSlot":false,"src":"16899:6:5","valueSize":1},{"declaration":1725,"isOffset":false,"isSlot":false,"src":"16582:8:5","valueSize":1},{"declaration":1727,"isOffset":false,"isSlot":false,"src":"16778:8:5","valueSize":1}],"id":1736,"nodeType":"InlineAssembly","src":"16291:632:5"}]},"documentation":{"id":1723,"nodeType":"StructuredDocumentation","src":"15970:105:5","text":" @dev Creates an array in memory with only one value for each of the elements provided."},"id":1738,"implemented":true,"kind":"function","modifiers":[],"name":"_asSingletonArrays","nameLocation":"16089:18:5","nodeType":"FunctionDefinition","parameters":{"id":1728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1725,"mutability":"mutable","name":"element1","nameLocation":"16125:8:5","nodeType":"VariableDeclaration","scope":1738,"src":"16117:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1724,"name":"uint256","nodeType":"ElementaryTypeName","src":"16117:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1727,"mutability":"mutable","name":"element2","nameLocation":"16151:8:5","nodeType":"VariableDeclaration","scope":1738,"src":"16143:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1726,"name":"uint256","nodeType":"ElementaryTypeName","src":"16143:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16107:58:5"},"returnParameters":{"id":1735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1731,"mutability":"mutable","name":"array1","nameLocation":"16205:6:5","nodeType":"VariableDeclaration","scope":1738,"src":"16188:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1729,"name":"uint256","nodeType":"ElementaryTypeName","src":"16188:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1730,"nodeType":"ArrayTypeName","src":"16188:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1734,"mutability":"mutable","name":"array2","nameLocation":"16230:6:5","nodeType":"VariableDeclaration","scope":1738,"src":"16213:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1732,"name":"uint256","nodeType":"ElementaryTypeName","src":"16213:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1733,"nodeType":"ArrayTypeName","src":"16213:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"16187:50:5"},"scope":1739,"src":"16080:849:5","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1740,"src":"727:16204:5","usedErrors":[653,658,663,670,675,680,687],"usedEvents":[1759,1774,1783,1790]}],"src":"109:16823:5"},"id":5},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","exportedSymbols":{"IERC1155":[1862],"IERC165":[4591]},"id":1863,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1741,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"110:24:6"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1743,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1863,"sourceUnit":4592,"src":"136:62:6","symbolAliases":[{"foreign":{"id":1742,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4591,"src":"144:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1745,"name":"IERC165","nameLocations":["358:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":4591,"src":"358:7:6"},"id":1746,"nodeType":"InheritanceSpecifier","src":"358:7:6"}],"canonicalName":"IERC1155","contractDependencies":[],"contractKind":"interface","documentation":{"id":1744,"nodeType":"StructuredDocumentation","src":"200:135:6","text":" @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP]."},"fullyImplemented":false,"id":1862,"linearizedBaseContracts":[1862,4591],"name":"IERC1155","nameLocation":"346:8:6","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1747,"nodeType":"StructuredDocumentation","src":"372:125:6","text":" @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."},"eventSelector":"c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62","id":1759,"name":"TransferSingle","nameLocation":"508:14:6","nodeType":"EventDefinition","parameters":{"id":1758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1749,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"539:8:6","nodeType":"VariableDeclaration","scope":1759,"src":"523:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1748,"name":"address","nodeType":"ElementaryTypeName","src":"523:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1751,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"565:4:6","nodeType":"VariableDeclaration","scope":1759,"src":"549:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1750,"name":"address","nodeType":"ElementaryTypeName","src":"549:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1753,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"587:2:6","nodeType":"VariableDeclaration","scope":1759,"src":"571:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1752,"name":"address","nodeType":"ElementaryTypeName","src":"571:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1755,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"599:2:6","nodeType":"VariableDeclaration","scope":1759,"src":"591:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1754,"name":"uint256","nodeType":"ElementaryTypeName","src":"591:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1757,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"611:5:6","nodeType":"VariableDeclaration","scope":1759,"src":"603:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1756,"name":"uint256","nodeType":"ElementaryTypeName","src":"603:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"522:95:6"},"src":"502:116:6"},{"anonymous":false,"documentation":{"id":1760,"nodeType":"StructuredDocumentation","src":"624:144:6","text":" @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."},"eventSelector":"4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb","id":1774,"name":"TransferBatch","nameLocation":"779:13:6","nodeType":"EventDefinition","parameters":{"id":1773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1762,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"818:8:6","nodeType":"VariableDeclaration","scope":1774,"src":"802:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1761,"name":"address","nodeType":"ElementaryTypeName","src":"802:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1764,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"852:4:6","nodeType":"VariableDeclaration","scope":1774,"src":"836:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1763,"name":"address","nodeType":"ElementaryTypeName","src":"836:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1766,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"882:2:6","nodeType":"VariableDeclaration","scope":1774,"src":"866:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1765,"name":"address","nodeType":"ElementaryTypeName","src":"866:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1769,"indexed":false,"mutability":"mutable","name":"ids","nameLocation":"904:3:6","nodeType":"VariableDeclaration","scope":1774,"src":"894:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1767,"name":"uint256","nodeType":"ElementaryTypeName","src":"894:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1768,"nodeType":"ArrayTypeName","src":"894:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1772,"indexed":false,"mutability":"mutable","name":"values","nameLocation":"927:6:6","nodeType":"VariableDeclaration","scope":1774,"src":"917:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1770,"name":"uint256","nodeType":"ElementaryTypeName","src":"917:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1771,"nodeType":"ArrayTypeName","src":"917:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"792:147:6"},"src":"773:167:6"},{"anonymous":false,"documentation":{"id":1775,"nodeType":"StructuredDocumentation","src":"946:147:6","text":" @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1783,"name":"ApprovalForAll","nameLocation":"1104:14:6","nodeType":"EventDefinition","parameters":{"id":1782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1777,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1135:7:6","nodeType":"VariableDeclaration","scope":1783,"src":"1119:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1776,"name":"address","nodeType":"ElementaryTypeName","src":"1119:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1779,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"1160:8:6","nodeType":"VariableDeclaration","scope":1783,"src":"1144:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1778,"name":"address","nodeType":"ElementaryTypeName","src":"1144:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1781,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"1175:8:6","nodeType":"VariableDeclaration","scope":1783,"src":"1170:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1780,"name":"bool","nodeType":"ElementaryTypeName","src":"1170:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1118:66:6"},"src":"1098:87:6"},{"anonymous":false,"documentation":{"id":1784,"nodeType":"StructuredDocumentation","src":"1191:343:6","text":" @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."},"eventSelector":"6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b","id":1790,"name":"URI","nameLocation":"1545:3:6","nodeType":"EventDefinition","parameters":{"id":1789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1786,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"1556:5:6","nodeType":"VariableDeclaration","scope":1790,"src":"1549:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1785,"name":"string","nodeType":"ElementaryTypeName","src":"1549:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1788,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"1579:2:6","nodeType":"VariableDeclaration","scope":1790,"src":"1563:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1787,"name":"uint256","nodeType":"ElementaryTypeName","src":"1563:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1548:34:6"},"src":"1539:44:6"},{"documentation":{"id":1791,"nodeType":"StructuredDocumentation","src":"1589:172:6","text":" @dev Returns the value of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."},"functionSelector":"00fdd58e","id":1800,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1775:9:6","nodeType":"FunctionDefinition","parameters":{"id":1796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1793,"mutability":"mutable","name":"account","nameLocation":"1793:7:6","nodeType":"VariableDeclaration","scope":1800,"src":"1785:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1792,"name":"address","nodeType":"ElementaryTypeName","src":"1785:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1795,"mutability":"mutable","name":"id","nameLocation":"1810:2:6","nodeType":"VariableDeclaration","scope":1800,"src":"1802:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1794,"name":"uint256","nodeType":"ElementaryTypeName","src":"1802:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1784:29:6"},"returnParameters":{"id":1799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1798,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1800,"src":"1837:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1797,"name":"uint256","nodeType":"ElementaryTypeName","src":"1837:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1836:9:6"},"scope":1862,"src":"1766:80:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1801,"nodeType":"StructuredDocumentation","src":"1852:188:6","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":1813,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"2054:14:6","nodeType":"FunctionDefinition","parameters":{"id":1808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1804,"mutability":"mutable","name":"accounts","nameLocation":"2097:8:6","nodeType":"VariableDeclaration","scope":1813,"src":"2078:27:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1802,"name":"address","nodeType":"ElementaryTypeName","src":"2078:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1803,"nodeType":"ArrayTypeName","src":"2078:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1807,"mutability":"mutable","name":"ids","nameLocation":"2134:3:6","nodeType":"VariableDeclaration","scope":1813,"src":"2115:22:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1805,"name":"uint256","nodeType":"ElementaryTypeName","src":"2115:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1806,"nodeType":"ArrayTypeName","src":"2115:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2068:75:6"},"returnParameters":{"id":1812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1811,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1813,"src":"2167:16:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1809,"name":"uint256","nodeType":"ElementaryTypeName","src":"2167:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1810,"nodeType":"ArrayTypeName","src":"2167:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2166:18:6"},"scope":1862,"src":"2045:140:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1814,"nodeType":"StructuredDocumentation","src":"2191:248:6","text":" @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."},"functionSelector":"a22cb465","id":1821,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"2453:17:6","nodeType":"FunctionDefinition","parameters":{"id":1819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1816,"mutability":"mutable","name":"operator","nameLocation":"2479:8:6","nodeType":"VariableDeclaration","scope":1821,"src":"2471:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1815,"name":"address","nodeType":"ElementaryTypeName","src":"2471:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1818,"mutability":"mutable","name":"approved","nameLocation":"2494:8:6","nodeType":"VariableDeclaration","scope":1821,"src":"2489:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1817,"name":"bool","nodeType":"ElementaryTypeName","src":"2489:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2470:33:6"},"returnParameters":{"id":1820,"nodeType":"ParameterList","parameters":[],"src":"2512:0:6"},"scope":1862,"src":"2444:69:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1822,"nodeType":"StructuredDocumentation","src":"2519:135:6","text":" @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."},"functionSelector":"e985e9c5","id":1831,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"2668:16:6","nodeType":"FunctionDefinition","parameters":{"id":1827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1824,"mutability":"mutable","name":"account","nameLocation":"2693:7:6","nodeType":"VariableDeclaration","scope":1831,"src":"2685:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1823,"name":"address","nodeType":"ElementaryTypeName","src":"2685:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1826,"mutability":"mutable","name":"operator","nameLocation":"2710:8:6","nodeType":"VariableDeclaration","scope":1831,"src":"2702:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1825,"name":"address","nodeType":"ElementaryTypeName","src":"2702:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2684:35:6"},"returnParameters":{"id":1830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1829,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1831,"src":"2743:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1828,"name":"bool","nodeType":"ElementaryTypeName","src":"2743:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2742:6:6"},"scope":1862,"src":"2659:90:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1832,"nodeType":"StructuredDocumentation","src":"2755:910:6","text":" @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"functionSelector":"f242432a","id":1845,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3679:16:6","nodeType":"FunctionDefinition","parameters":{"id":1843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1834,"mutability":"mutable","name":"from","nameLocation":"3704:4:6","nodeType":"VariableDeclaration","scope":1845,"src":"3696:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1833,"name":"address","nodeType":"ElementaryTypeName","src":"3696:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1836,"mutability":"mutable","name":"to","nameLocation":"3718:2:6","nodeType":"VariableDeclaration","scope":1845,"src":"3710:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1835,"name":"address","nodeType":"ElementaryTypeName","src":"3710:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1838,"mutability":"mutable","name":"id","nameLocation":"3730:2:6","nodeType":"VariableDeclaration","scope":1845,"src":"3722:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1837,"name":"uint256","nodeType":"ElementaryTypeName","src":"3722:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1840,"mutability":"mutable","name":"value","nameLocation":"3742:5:6","nodeType":"VariableDeclaration","scope":1845,"src":"3734:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1839,"name":"uint256","nodeType":"ElementaryTypeName","src":"3734:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1842,"mutability":"mutable","name":"data","nameLocation":"3764:4:6","nodeType":"VariableDeclaration","scope":1845,"src":"3749:19:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1841,"name":"bytes","nodeType":"ElementaryTypeName","src":"3749:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3695:74:6"},"returnParameters":{"id":1844,"nodeType":"ParameterList","parameters":[],"src":"3778:0:6"},"scope":1862,"src":"3670:109:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1846,"nodeType":"StructuredDocumentation","src":"3785:744:6","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `values` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"functionSelector":"2eb2c2d6","id":1861,"implemented":false,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"4543:21:6","nodeType":"FunctionDefinition","parameters":{"id":1859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1848,"mutability":"mutable","name":"from","nameLocation":"4582:4:6","nodeType":"VariableDeclaration","scope":1861,"src":"4574:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1847,"name":"address","nodeType":"ElementaryTypeName","src":"4574:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1850,"mutability":"mutable","name":"to","nameLocation":"4604:2:6","nodeType":"VariableDeclaration","scope":1861,"src":"4596:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1849,"name":"address","nodeType":"ElementaryTypeName","src":"4596:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1853,"mutability":"mutable","name":"ids","nameLocation":"4635:3:6","nodeType":"VariableDeclaration","scope":1861,"src":"4616:22:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1851,"name":"uint256","nodeType":"ElementaryTypeName","src":"4616:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1852,"nodeType":"ArrayTypeName","src":"4616:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1856,"mutability":"mutable","name":"values","nameLocation":"4667:6:6","nodeType":"VariableDeclaration","scope":1861,"src":"4648:25:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1854,"name":"uint256","nodeType":"ElementaryTypeName","src":"4648:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1855,"nodeType":"ArrayTypeName","src":"4648:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1858,"mutability":"mutable","name":"data","nameLocation":"4698:4:6","nodeType":"VariableDeclaration","scope":1861,"src":"4683:19:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1857,"name":"bytes","nodeType":"ElementaryTypeName","src":"4683:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4564:144:6"},"returnParameters":{"id":1860,"nodeType":"ParameterList","parameters":[],"src":"4717:0:6"},"scope":1862,"src":"4534:184:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1863,"src":"336:4384:6","usedErrors":[],"usedEvents":[1759,1774,1783,1790]}],"src":"110:4611:6"},"id":6},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","exportedSymbols":{"IERC1155Receiver":[1904],"IERC165":[4591]},"id":1905,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1864,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:7"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1866,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1905,"sourceUnit":4592,"src":"144:62:7","symbolAliases":[{"foreign":{"id":1865,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4591,"src":"152:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1868,"name":"IERC165","nameLocations":["357:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":4591,"src":"357:7:7"},"id":1869,"nodeType":"InheritanceSpecifier","src":"357:7:7"}],"canonicalName":"IERC1155Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1867,"nodeType":"StructuredDocumentation","src":"208:118:7","text":" @dev Interface that must be implemented by smart contracts in order to receive\n ERC-1155 token transfers."},"fullyImplemented":false,"id":1904,"linearizedBaseContracts":[1904,4591],"name":"IERC1155Receiver","nameLocation":"337:16:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1870,"nodeType":"StructuredDocumentation","src":"371:826:7","text":" @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"},"functionSelector":"f23a6e61","id":1885,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155Received","nameLocation":"1211:17:7","nodeType":"FunctionDefinition","parameters":{"id":1881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1872,"mutability":"mutable","name":"operator","nameLocation":"1246:8:7","nodeType":"VariableDeclaration","scope":1885,"src":"1238:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1871,"name":"address","nodeType":"ElementaryTypeName","src":"1238:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1874,"mutability":"mutable","name":"from","nameLocation":"1272:4:7","nodeType":"VariableDeclaration","scope":1885,"src":"1264:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1873,"name":"address","nodeType":"ElementaryTypeName","src":"1264:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1876,"mutability":"mutable","name":"id","nameLocation":"1294:2:7","nodeType":"VariableDeclaration","scope":1885,"src":"1286:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1875,"name":"uint256","nodeType":"ElementaryTypeName","src":"1286:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1878,"mutability":"mutable","name":"value","nameLocation":"1314:5:7","nodeType":"VariableDeclaration","scope":1885,"src":"1306:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1877,"name":"uint256","nodeType":"ElementaryTypeName","src":"1306:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1880,"mutability":"mutable","name":"data","nameLocation":"1344:4:7","nodeType":"VariableDeclaration","scope":1885,"src":"1329:19:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1879,"name":"bytes","nodeType":"ElementaryTypeName","src":"1329:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1228:126:7"},"returnParameters":{"id":1884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1883,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1885,"src":"1373:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1882,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1373:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1372:8:7"},"scope":1904,"src":"1202:179:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1886,"nodeType":"StructuredDocumentation","src":"1387:994:7","text":" @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"},"functionSelector":"bc197c81","id":1903,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nameLocation":"2395:22:7","nodeType":"FunctionDefinition","parameters":{"id":1899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1888,"mutability":"mutable","name":"operator","nameLocation":"2435:8:7","nodeType":"VariableDeclaration","scope":1903,"src":"2427:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1887,"name":"address","nodeType":"ElementaryTypeName","src":"2427:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1890,"mutability":"mutable","name":"from","nameLocation":"2461:4:7","nodeType":"VariableDeclaration","scope":1903,"src":"2453:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1889,"name":"address","nodeType":"ElementaryTypeName","src":"2453:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1893,"mutability":"mutable","name":"ids","nameLocation":"2494:3:7","nodeType":"VariableDeclaration","scope":1903,"src":"2475:22:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1891,"name":"uint256","nodeType":"ElementaryTypeName","src":"2475:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1892,"nodeType":"ArrayTypeName","src":"2475:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1896,"mutability":"mutable","name":"values","nameLocation":"2526:6:7","nodeType":"VariableDeclaration","scope":1903,"src":"2507:25:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1894,"name":"uint256","nodeType":"ElementaryTypeName","src":"2507:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1895,"nodeType":"ArrayTypeName","src":"2507:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1898,"mutability":"mutable","name":"data","nameLocation":"2557:4:7","nodeType":"VariableDeclaration","scope":1903,"src":"2542:19:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1897,"name":"bytes","nodeType":"ElementaryTypeName","src":"2542:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2417:150:7"},"returnParameters":{"id":1902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1901,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1903,"src":"2586:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1900,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2586:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2585:8:7"},"scope":1904,"src":"2386:208:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1905,"src":"327:2269:7","usedErrors":[],"usedEvents":[]}],"src":"118:2479:7"},"id":7},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","exportedSymbols":{"IERC1155":[1862],"IERC1155MetadataURI":[1920]},"id":1921,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1906,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"132:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"../IERC1155.sol","id":1908,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1921,"sourceUnit":1863,"src":"158:41:8","symbolAliases":[{"foreign":{"id":1907,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"166:8:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1910,"name":"IERC1155","nameLocations":["399:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":1862,"src":"399:8:8"},"id":1911,"nodeType":"InheritanceSpecifier","src":"399:8:8"}],"canonicalName":"IERC1155MetadataURI","contractDependencies":[],"contractKind":"interface","documentation":{"id":1909,"nodeType":"StructuredDocumentation","src":"201:164:8","text":" @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]."},"fullyImplemented":false,"id":1920,"linearizedBaseContracts":[1920,1862,4591],"name":"IERC1155MetadataURI","nameLocation":"376:19:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1912,"nodeType":"StructuredDocumentation","src":"414:192:8","text":" @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."},"functionSelector":"0e89341c","id":1919,"implemented":false,"kind":"function","modifiers":[],"name":"uri","nameLocation":"620:3:8","nodeType":"FunctionDefinition","parameters":{"id":1915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1914,"mutability":"mutable","name":"id","nameLocation":"632:2:8","nodeType":"VariableDeclaration","scope":1919,"src":"624:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1913,"name":"uint256","nodeType":"ElementaryTypeName","src":"624:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"623:12:8"},"returnParameters":{"id":1918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1917,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1919,"src":"659:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1916,"name":"string","nodeType":"ElementaryTypeName","src":"659:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"658:15:8"},"scope":1920,"src":"611:63:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1921,"src":"366:310:8","usedErrors":[],"usedEvents":[1759,1774,1783,1790]}],"src":"132:545:8"},"id":8},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[3187],"ERC20":[2435],"IERC20":[2513],"IERC20Errors":[593],"IERC20Metadata":[2693]},"id":2436,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1922,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":1924,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2436,"sourceUnit":2514,"src":"131:36:9","symbolAliases":[{"foreign":{"id":1923,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"139:6:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":1926,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2436,"sourceUnit":2694,"src":"168:63:9","symbolAliases":[{"foreign":{"id":1925,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2693,"src":"176:14:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":1928,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2436,"sourceUnit":3188,"src":"232:48:9","symbolAliases":[{"foreign":{"id":1927,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"240:7:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":1930,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2436,"sourceUnit":689,"src":"281:65:9","symbolAliases":[{"foreign":{"id":1929,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"289:12:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1932,"name":"Context","nameLocations":["1428:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":3187,"src":"1428:7:9"},"id":1933,"nodeType":"InheritanceSpecifier","src":"1428:7:9"},{"baseName":{"id":1934,"name":"IERC20","nameLocations":["1437:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2513,"src":"1437:6:9"},"id":1935,"nodeType":"InheritanceSpecifier","src":"1437:6:9"},{"baseName":{"id":1936,"name":"IERC20Metadata","nameLocations":["1445:14:9"],"nodeType":"IdentifierPath","referencedDeclaration":2693,"src":"1445:14:9"},"id":1937,"nodeType":"InheritanceSpecifier","src":"1445:14:9"},{"baseName":{"id":1938,"name":"IERC20Errors","nameLocations":["1461:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":593,"src":"1461:12:9"},"id":1939,"nodeType":"InheritanceSpecifier","src":"1461:12:9"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":1931,"nodeType":"StructuredDocumentation","src":"348:1052:9","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."},"fullyImplemented":true,"id":2435,"linearizedBaseContracts":[2435,593,2693,2513,3187],"name":"ERC20","nameLocation":"1419:5:9","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1943,"mutability":"mutable","name":"_balances","nameLocation":"1524:9:9","nodeType":"VariableDeclaration","scope":2435,"src":"1480:53:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1942,"keyName":"account","keyNameLocation":"1496:7:9","keyType":{"id":1940,"name":"address","nodeType":"ElementaryTypeName","src":"1488:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1480:35:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1941,"name":"uint256","nodeType":"ElementaryTypeName","src":"1507:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1949,"mutability":"mutable","name":"_allowances","nameLocation":"1612:11:9","nodeType":"VariableDeclaration","scope":2435,"src":"1540:83:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":1948,"keyName":"account","keyNameLocation":"1556:7:9","keyType":{"id":1944,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1540:63:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1947,"keyName":"spender","keyNameLocation":"1583:7:9","keyType":{"id":1945,"name":"address","nodeType":"ElementaryTypeName","src":"1575:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1567:35:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1946,"name":"uint256","nodeType":"ElementaryTypeName","src":"1594:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":1951,"mutability":"mutable","name":"_totalSupply","nameLocation":"1646:12:9","nodeType":"VariableDeclaration","scope":2435,"src":"1630:28:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1950,"name":"uint256","nodeType":"ElementaryTypeName","src":"1630:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1953,"mutability":"mutable","name":"_name","nameLocation":"1680:5:9","nodeType":"VariableDeclaration","scope":2435,"src":"1665:20:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1952,"name":"string","nodeType":"ElementaryTypeName","src":"1665:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1955,"mutability":"mutable","name":"_symbol","nameLocation":"1706:7:9","nodeType":"VariableDeclaration","scope":2435,"src":"1691:22:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1954,"name":"string","nodeType":"ElementaryTypeName","src":"1691:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":1971,"nodeType":"Block","src":"1952:57:9","statements":[{"expression":{"id":1965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1963,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"1962:5:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1964,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"1970:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1962:13:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1966,"nodeType":"ExpressionStatement","src":"1962:13:9"},{"expression":{"id":1969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1967,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"1985:7:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1968,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"1995:7:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1985:17:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1970,"nodeType":"ExpressionStatement","src":"1985:17:9"}]},"documentation":{"id":1956,"nodeType":"StructuredDocumentation","src":"1720:171:9","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":1972,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1958,"mutability":"mutable","name":"name_","nameLocation":"1922:5:9","nodeType":"VariableDeclaration","scope":1972,"src":"1908:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1957,"name":"string","nodeType":"ElementaryTypeName","src":"1908:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1960,"mutability":"mutable","name":"symbol_","nameLocation":"1943:7:9","nodeType":"VariableDeclaration","scope":1972,"src":"1929:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1959,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1907:44:9"},"returnParameters":{"id":1962,"nodeType":"ParameterList","parameters":[],"src":"1952:0:9"},"scope":2435,"src":"1896:113:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2680],"body":{"id":1980,"nodeType":"Block","src":"2134:29:9","statements":[{"expression":{"id":1978,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"2151:5:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1977,"id":1979,"nodeType":"Return","src":"2144:12:9"}]},"documentation":{"id":1973,"nodeType":"StructuredDocumentation","src":"2015:54:9","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1981,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2083:4:9","nodeType":"FunctionDefinition","parameters":{"id":1974,"nodeType":"ParameterList","parameters":[],"src":"2087:2:9"},"returnParameters":{"id":1977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1976,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1981,"src":"2119:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1975,"name":"string","nodeType":"ElementaryTypeName","src":"2119:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2118:15:9"},"scope":2435,"src":"2074:89:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2686],"body":{"id":1989,"nodeType":"Block","src":"2338:31:9","statements":[{"expression":{"id":1987,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"2355:7:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1986,"id":1988,"nodeType":"Return","src":"2348:14:9"}]},"documentation":{"id":1982,"nodeType":"StructuredDocumentation","src":"2169:102:9","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":1990,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2285:6:9","nodeType":"FunctionDefinition","parameters":{"id":1983,"nodeType":"ParameterList","parameters":[],"src":"2291:2:9"},"returnParameters":{"id":1986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1985,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1990,"src":"2323:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1984,"name":"string","nodeType":"ElementaryTypeName","src":"2323:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2322:15:9"},"scope":2435,"src":"2276:93:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2692],"body":{"id":1998,"nodeType":"Block","src":"3058:26:9","statements":[{"expression":{"hexValue":"3138","id":1996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3075:2:9","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":1995,"id":1997,"nodeType":"Return","src":"3068:9:9"}]},"documentation":{"id":1991,"nodeType":"StructuredDocumentation","src":"2375:622:9","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":1999,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3011:8:9","nodeType":"FunctionDefinition","parameters":{"id":1992,"nodeType":"ParameterList","parameters":[],"src":"3019:2:9"},"returnParameters":{"id":1995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1994,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1999,"src":"3051:5:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1993,"name":"uint8","nodeType":"ElementaryTypeName","src":"3051:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3050:7:9"},"scope":2435,"src":"3002:82:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2462],"body":{"id":2007,"nodeType":"Block","src":"3205:36:9","statements":[{"expression":{"id":2005,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"3222:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2004,"id":2006,"nodeType":"Return","src":"3215:19:9"}]},"documentation":{"id":2000,"nodeType":"StructuredDocumentation","src":"3090:49:9","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":2008,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3153:11:9","nodeType":"FunctionDefinition","parameters":{"id":2001,"nodeType":"ParameterList","parameters":[],"src":"3164:2:9"},"returnParameters":{"id":2004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2003,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2008,"src":"3196:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2002,"name":"uint256","nodeType":"ElementaryTypeName","src":"3196:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3195:9:9"},"scope":2435,"src":"3144:97:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2470],"body":{"id":2020,"nodeType":"Block","src":"3373:42:9","statements":[{"expression":{"baseExpression":{"id":2016,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"3390:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2018,"indexExpression":{"id":2017,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2011,"src":"3400:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3390:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2015,"id":2019,"nodeType":"Return","src":"3383:25:9"}]},"documentation":{"id":2009,"nodeType":"StructuredDocumentation","src":"3247:47:9","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":2021,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3308:9:9","nodeType":"FunctionDefinition","parameters":{"id":2012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2011,"mutability":"mutable","name":"account","nameLocation":"3326:7:9","nodeType":"VariableDeclaration","scope":2021,"src":"3318:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2010,"name":"address","nodeType":"ElementaryTypeName","src":"3318:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3317:17:9"},"returnParameters":{"id":2015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2014,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2021,"src":"3364:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2013,"name":"uint256","nodeType":"ElementaryTypeName","src":"3364:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3363:9:9"},"scope":2435,"src":"3299:116:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2480],"body":{"id":2044,"nodeType":"Block","src":"3685:103:9","statements":[{"assignments":[2032],"declarations":[{"constant":false,"id":2032,"mutability":"mutable","name":"owner","nameLocation":"3703:5:9","nodeType":"VariableDeclaration","scope":2044,"src":"3695:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2031,"name":"address","nodeType":"ElementaryTypeName","src":"3695:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2035,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2033,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"3711:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3711:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3695:28:9"},{"expression":{"arguments":[{"id":2037,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"3743:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2038,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"3750:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2039,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2026,"src":"3754:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2036,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"3733:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2041,"nodeType":"ExpressionStatement","src":"3733:27:9"},{"expression":{"hexValue":"74727565","id":2042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3777:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2030,"id":2043,"nodeType":"Return","src":"3770:11:9"}]},"documentation":{"id":2022,"nodeType":"StructuredDocumentation","src":"3421:184:9","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":2045,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3619:8:9","nodeType":"FunctionDefinition","parameters":{"id":2027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2024,"mutability":"mutable","name":"to","nameLocation":"3636:2:9","nodeType":"VariableDeclaration","scope":2045,"src":"3628:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2023,"name":"address","nodeType":"ElementaryTypeName","src":"3628:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2026,"mutability":"mutable","name":"value","nameLocation":"3648:5:9","nodeType":"VariableDeclaration","scope":2045,"src":"3640:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2025,"name":"uint256","nodeType":"ElementaryTypeName","src":"3640:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3627:27:9"},"returnParameters":{"id":2030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2029,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2045,"src":"3679:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2028,"name":"bool","nodeType":"ElementaryTypeName","src":"3679:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3678:6:9"},"scope":2435,"src":"3610:178:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2490],"body":{"id":2061,"nodeType":"Block","src":"3935:51:9","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":2055,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"3952:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2057,"indexExpression":{"id":2056,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"3964:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:18:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2059,"indexExpression":{"id":2058,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"3971:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:27:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2054,"id":2060,"nodeType":"Return","src":"3945:34:9"}]},"documentation":{"id":2046,"nodeType":"StructuredDocumentation","src":"3794:47:9","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":2062,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3855:9:9","nodeType":"FunctionDefinition","parameters":{"id":2051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2048,"mutability":"mutable","name":"owner","nameLocation":"3873:5:9","nodeType":"VariableDeclaration","scope":2062,"src":"3865:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2047,"name":"address","nodeType":"ElementaryTypeName","src":"3865:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2050,"mutability":"mutable","name":"spender","nameLocation":"3888:7:9","nodeType":"VariableDeclaration","scope":2062,"src":"3880:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2049,"name":"address","nodeType":"ElementaryTypeName","src":"3880:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3864:32:9"},"returnParameters":{"id":2054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2053,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2062,"src":"3926:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2052,"name":"uint256","nodeType":"ElementaryTypeName","src":"3926:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3925:9:9"},"scope":2435,"src":"3846:140:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2500],"body":{"id":2085,"nodeType":"Block","src":"4372:107:9","statements":[{"assignments":[2073],"declarations":[{"constant":false,"id":2073,"mutability":"mutable","name":"owner","nameLocation":"4390:5:9","nodeType":"VariableDeclaration","scope":2085,"src":"4382:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2072,"name":"address","nodeType":"ElementaryTypeName","src":"4382:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2076,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2074,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"4398:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4398:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4382:28:9"},{"expression":{"arguments":[{"id":2078,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2073,"src":"4429:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2079,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"4436:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2080,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"4445:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2077,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2326,2386],"referencedDeclaration":2326,"src":"4420:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4420:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2082,"nodeType":"ExpressionStatement","src":"4420:31:9"},{"expression":{"hexValue":"74727565","id":2083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4468:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2071,"id":2084,"nodeType":"Return","src":"4461:11:9"}]},"documentation":{"id":2063,"nodeType":"StructuredDocumentation","src":"3992:296:9","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":2086,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4302:7:9","nodeType":"FunctionDefinition","parameters":{"id":2068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2065,"mutability":"mutable","name":"spender","nameLocation":"4318:7:9","nodeType":"VariableDeclaration","scope":2086,"src":"4310:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2064,"name":"address","nodeType":"ElementaryTypeName","src":"4310:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2067,"mutability":"mutable","name":"value","nameLocation":"4335:5:9","nodeType":"VariableDeclaration","scope":2086,"src":"4327:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2066,"name":"uint256","nodeType":"ElementaryTypeName","src":"4327:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4309:32:9"},"returnParameters":{"id":2071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2070,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2086,"src":"4366:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2069,"name":"bool","nodeType":"ElementaryTypeName","src":"4366:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4365:6:9"},"scope":2435,"src":"4293:186:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2512],"body":{"id":2117,"nodeType":"Block","src":"5132:151:9","statements":[{"assignments":[2099],"declarations":[{"constant":false,"id":2099,"mutability":"mutable","name":"spender","nameLocation":"5150:7:9","nodeType":"VariableDeclaration","scope":2117,"src":"5142:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2098,"name":"address","nodeType":"ElementaryTypeName","src":"5142:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2102,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2100,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"5160:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5160:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5142:30:9"},{"expression":{"arguments":[{"id":2104,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2089,"src":"5198:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2105,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2099,"src":"5204:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2106,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"5213:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2103,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"5182:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5182:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2108,"nodeType":"ExpressionStatement","src":"5182:37:9"},{"expression":{"arguments":[{"id":2110,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2089,"src":"5239:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2111,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"5245:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2112,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"5249:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2109,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"5229:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5229:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2114,"nodeType":"ExpressionStatement","src":"5229:26:9"},{"expression":{"hexValue":"74727565","id":2115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5272:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2097,"id":2116,"nodeType":"Return","src":"5265:11:9"}]},"documentation":{"id":2087,"nodeType":"StructuredDocumentation","src":"4485:549:9","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":2118,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5048:12:9","nodeType":"FunctionDefinition","parameters":{"id":2094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2089,"mutability":"mutable","name":"from","nameLocation":"5069:4:9","nodeType":"VariableDeclaration","scope":2118,"src":"5061:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2088,"name":"address","nodeType":"ElementaryTypeName","src":"5061:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2091,"mutability":"mutable","name":"to","nameLocation":"5083:2:9","nodeType":"VariableDeclaration","scope":2118,"src":"5075:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2090,"name":"address","nodeType":"ElementaryTypeName","src":"5075:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2093,"mutability":"mutable","name":"value","nameLocation":"5095:5:9","nodeType":"VariableDeclaration","scope":2118,"src":"5087:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2092,"name":"uint256","nodeType":"ElementaryTypeName","src":"5087:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5060:41:9"},"returnParameters":{"id":2097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2096,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2118,"src":"5126:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2095,"name":"bool","nodeType":"ElementaryTypeName","src":"5126:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5125:6:9"},"scope":2435,"src":"5039:244:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2164,"nodeType":"Block","src":"5725:231:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2128,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2121,"src":"5739:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5755:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5747:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2129,"name":"address","nodeType":"ElementaryTypeName","src":"5747:7:9","typeDescriptions":{}}},"id":2132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5747:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5739:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2142,"nodeType":"IfStatement","src":"5735:86:9","trueBody":{"id":2141,"nodeType":"Block","src":"5759:62:9","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5807:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5799:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2135,"name":"address","nodeType":"ElementaryTypeName","src":"5799:7:9","typeDescriptions":{}}},"id":2138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5799:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2134,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"5780:18:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5780:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2140,"nodeType":"RevertStatement","src":"5773:37:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2143,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2123,"src":"5834:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5848:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5840:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2144,"name":"address","nodeType":"ElementaryTypeName","src":"5840:7:9","typeDescriptions":{}}},"id":2147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5840:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5834:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2157,"nodeType":"IfStatement","src":"5830:86:9","trueBody":{"id":2156,"nodeType":"Block","src":"5852:64:9","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5902:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2151,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5894:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2150,"name":"address","nodeType":"ElementaryTypeName","src":"5894:7:9","typeDescriptions":{}}},"id":2153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5894:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2149,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"5873:20:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5873:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2155,"nodeType":"RevertStatement","src":"5866:39:9"}]}},{"expression":{"arguments":[{"id":2159,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2121,"src":"5933:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2160,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2123,"src":"5939:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2161,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"5943:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2158,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2242,"src":"5925:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5925:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2163,"nodeType":"ExpressionStatement","src":"5925:24:9"}]},"documentation":{"id":2119,"nodeType":"StructuredDocumentation","src":"5289:362:9","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":2165,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5665:9:9","nodeType":"FunctionDefinition","parameters":{"id":2126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2121,"mutability":"mutable","name":"from","nameLocation":"5683:4:9","nodeType":"VariableDeclaration","scope":2165,"src":"5675:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2120,"name":"address","nodeType":"ElementaryTypeName","src":"5675:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2123,"mutability":"mutable","name":"to","nameLocation":"5697:2:9","nodeType":"VariableDeclaration","scope":2165,"src":"5689:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2122,"name":"address","nodeType":"ElementaryTypeName","src":"5689:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2125,"mutability":"mutable","name":"value","nameLocation":"5709:5:9","nodeType":"VariableDeclaration","scope":2165,"src":"5701:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2124,"name":"uint256","nodeType":"ElementaryTypeName","src":"5701:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:41:9"},"returnParameters":{"id":2127,"nodeType":"ParameterList","parameters":[],"src":"5725:0:9"},"scope":2435,"src":"5656:300:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2241,"nodeType":"Block","src":"6346:1032:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2175,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"6360:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6376:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2177,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6368:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2176,"name":"address","nodeType":"ElementaryTypeName","src":"6368:7:9","typeDescriptions":{}}},"id":2179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6368:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6360:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2212,"nodeType":"Block","src":"6534:362:9","statements":[{"assignments":[2187],"declarations":[{"constant":false,"id":2187,"mutability":"mutable","name":"fromBalance","nameLocation":"6556:11:9","nodeType":"VariableDeclaration","scope":2212,"src":"6548:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2186,"name":"uint256","nodeType":"ElementaryTypeName","src":"6548:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2191,"initialValue":{"baseExpression":{"id":2188,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"6570:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2190,"indexExpression":{"id":2189,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"6580:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6570:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6548:37:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2192,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2187,"src":"6603:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2193,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2172,"src":"6617:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6603:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2202,"nodeType":"IfStatement","src":"6599:115:9","trueBody":{"id":2201,"nodeType":"Block","src":"6624:90:9","statements":[{"errorCall":{"arguments":[{"id":2196,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"6674:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2197,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2187,"src":"6680:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2198,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2172,"src":"6693:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2195,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"6649:24:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":2199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6649:50:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2200,"nodeType":"RevertStatement","src":"6642:57:9"}]}},{"id":2211,"nodeType":"UncheckedBlock","src":"6727:159:9","statements":[{"expression":{"id":2209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2203,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"6834:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2205,"indexExpression":{"id":2204,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"6844:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6834:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2206,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2187,"src":"6852:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2207,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2172,"src":"6866:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6852:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6834:37:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2210,"nodeType":"ExpressionStatement","src":"6834:37:9"}]}]},"id":2213,"nodeType":"IfStatement","src":"6356:540:9","trueBody":{"id":2185,"nodeType":"Block","src":"6380:148:9","statements":[{"expression":{"id":2183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2181,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"6496:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2182,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2172,"src":"6512:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6496:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2184,"nodeType":"ExpressionStatement","src":"6496:21:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2214,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"6910:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6924:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2215,"name":"address","nodeType":"ElementaryTypeName","src":"6916:7:9","typeDescriptions":{}}},"id":2218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6910:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2233,"nodeType":"Block","src":"7125:206:9","statements":[{"id":2232,"nodeType":"UncheckedBlock","src":"7139:182:9","statements":[{"expression":{"id":2230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2226,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"7284:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2228,"indexExpression":{"id":2227,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"7294:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7284:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2229,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2172,"src":"7301:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7284:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2231,"nodeType":"ExpressionStatement","src":"7284:22:9"}]}]},"id":2234,"nodeType":"IfStatement","src":"6906:425:9","trueBody":{"id":2225,"nodeType":"Block","src":"6928:191:9","statements":[{"id":2224,"nodeType":"UncheckedBlock","src":"6942:167:9","statements":[{"expression":{"id":2222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2220,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"7073:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":2221,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2172,"src":"7089:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7073:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2223,"nodeType":"ExpressionStatement","src":"7073:21:9"}]}]}},{"eventCall":{"arguments":[{"id":2236,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"7355:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2237,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"7361:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2238,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2172,"src":"7365:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2235,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"7346:8:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7346:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2240,"nodeType":"EmitStatement","src":"7341:30:9"}]},"documentation":{"id":2166,"nodeType":"StructuredDocumentation","src":"5962:304:9","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":2242,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6280:7:9","nodeType":"FunctionDefinition","parameters":{"id":2173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2168,"mutability":"mutable","name":"from","nameLocation":"6296:4:9","nodeType":"VariableDeclaration","scope":2242,"src":"6288:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2167,"name":"address","nodeType":"ElementaryTypeName","src":"6288:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2170,"mutability":"mutable","name":"to","nameLocation":"6310:2:9","nodeType":"VariableDeclaration","scope":2242,"src":"6302:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2169,"name":"address","nodeType":"ElementaryTypeName","src":"6302:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2172,"mutability":"mutable","name":"value","nameLocation":"6322:5:9","nodeType":"VariableDeclaration","scope":2242,"src":"6314:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2171,"name":"uint256","nodeType":"ElementaryTypeName","src":"6314:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6287:41:9"},"returnParameters":{"id":2174,"nodeType":"ParameterList","parameters":[],"src":"6346:0:9"},"scope":2435,"src":"6271:1107:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2274,"nodeType":"Block","src":"7777:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2250,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"7791:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7810:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7802:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2251,"name":"address","nodeType":"ElementaryTypeName","src":"7802:7:9","typeDescriptions":{}}},"id":2254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7802:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7791:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2264,"nodeType":"IfStatement","src":"7787:91:9","trueBody":{"id":2263,"nodeType":"Block","src":"7814:64:9","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7864:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7856:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2257,"name":"address","nodeType":"ElementaryTypeName","src":"7856:7:9","typeDescriptions":{}}},"id":2260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7856:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2256,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"7835:20:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7835:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2262,"nodeType":"RevertStatement","src":"7828:39:9"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7903:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7895:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2266,"name":"address","nodeType":"ElementaryTypeName","src":"7895:7:9","typeDescriptions":{}}},"id":2269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7895:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2270,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"7907:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2271,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"7916:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2265,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2242,"src":"7887:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7887:35:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2273,"nodeType":"ExpressionStatement","src":"7887:35:9"}]},"documentation":{"id":2243,"nodeType":"StructuredDocumentation","src":"7384:332:9","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":2275,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7730:5:9","nodeType":"FunctionDefinition","parameters":{"id":2248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2245,"mutability":"mutable","name":"account","nameLocation":"7744:7:9","nodeType":"VariableDeclaration","scope":2275,"src":"7736:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2244,"name":"address","nodeType":"ElementaryTypeName","src":"7736:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2247,"mutability":"mutable","name":"value","nameLocation":"7761:5:9","nodeType":"VariableDeclaration","scope":2275,"src":"7753:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2246,"name":"uint256","nodeType":"ElementaryTypeName","src":"7753:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7735:32:9"},"returnParameters":{"id":2249,"nodeType":"ParameterList","parameters":[],"src":"7777:0:9"},"scope":2435,"src":"7721:208:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2307,"nodeType":"Block","src":"8303:150:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2283,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2278,"src":"8317:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8336:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8328:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2284,"name":"address","nodeType":"ElementaryTypeName","src":"8328:7:9","typeDescriptions":{}}},"id":2287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8328:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8317:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2297,"nodeType":"IfStatement","src":"8313:89:9","trueBody":{"id":2296,"nodeType":"Block","src":"8340:62:9","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8388:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2291,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8380:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2290,"name":"address","nodeType":"ElementaryTypeName","src":"8380:7:9","typeDescriptions":{}}},"id":2293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8380:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2289,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"8361:18:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8361:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2295,"nodeType":"RevertStatement","src":"8354:37:9"}]}},{"expression":{"arguments":[{"id":2299,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2278,"src":"8419:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8436:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8428:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2300,"name":"address","nodeType":"ElementaryTypeName","src":"8428:7:9","typeDescriptions":{}}},"id":2303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8428:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2304,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"8440:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2298,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2242,"src":"8411:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8411:35:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2306,"nodeType":"ExpressionStatement","src":"8411:35:9"}]},"documentation":{"id":2276,"nodeType":"StructuredDocumentation","src":"7935:307:9","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":2308,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"8256:5:9","nodeType":"FunctionDefinition","parameters":{"id":2281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2278,"mutability":"mutable","name":"account","nameLocation":"8270:7:9","nodeType":"VariableDeclaration","scope":2308,"src":"8262:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2277,"name":"address","nodeType":"ElementaryTypeName","src":"8262:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2280,"mutability":"mutable","name":"value","nameLocation":"8287:5:9","nodeType":"VariableDeclaration","scope":2308,"src":"8279:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2279,"name":"uint256","nodeType":"ElementaryTypeName","src":"8279:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8261:32:9"},"returnParameters":{"id":2282,"nodeType":"ParameterList","parameters":[],"src":"8303:0:9"},"scope":2435,"src":"8247:206:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2325,"nodeType":"Block","src":"9063:54:9","statements":[{"expression":{"arguments":[{"id":2319,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"9082:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2320,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"9089:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2321,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"9098:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":2322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9105:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2318,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2326,2386],"referencedDeclaration":2386,"src":"9073:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":2323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9073:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2324,"nodeType":"ExpressionStatement","src":"9073:37:9"}]},"documentation":{"id":2309,"nodeType":"StructuredDocumentation","src":"8459:525:9","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":2326,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8998:8:9","nodeType":"FunctionDefinition","parameters":{"id":2316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2311,"mutability":"mutable","name":"owner","nameLocation":"9015:5:9","nodeType":"VariableDeclaration","scope":2326,"src":"9007:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2310,"name":"address","nodeType":"ElementaryTypeName","src":"9007:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2313,"mutability":"mutable","name":"spender","nameLocation":"9030:7:9","nodeType":"VariableDeclaration","scope":2326,"src":"9022:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2312,"name":"address","nodeType":"ElementaryTypeName","src":"9022:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2315,"mutability":"mutable","name":"value","nameLocation":"9047:5:9","nodeType":"VariableDeclaration","scope":2326,"src":"9039:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2314,"name":"uint256","nodeType":"ElementaryTypeName","src":"9039:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9006:47:9"},"returnParameters":{"id":2317,"nodeType":"ParameterList","parameters":[],"src":"9063:0:9"},"scope":2435,"src":"8989:128:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2385,"nodeType":"Block","src":"10047:334:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2338,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2329,"src":"10061:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10078:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10070:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2339,"name":"address","nodeType":"ElementaryTypeName","src":"10070:7:9","typeDescriptions":{}}},"id":2342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10070:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10061:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2352,"nodeType":"IfStatement","src":"10057:89:9","trueBody":{"id":2351,"nodeType":"Block","src":"10082:64:9","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10124:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2345,"name":"address","nodeType":"ElementaryTypeName","src":"10124:7:9","typeDescriptions":{}}},"id":2348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10124:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2344,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"10103:20:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10103:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2350,"nodeType":"RevertStatement","src":"10096:39:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2353,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2331,"src":"10159:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10178:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10170:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2354,"name":"address","nodeType":"ElementaryTypeName","src":"10170:7:9","typeDescriptions":{}}},"id":2357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10170:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10159:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2367,"nodeType":"IfStatement","src":"10155:90:9","trueBody":{"id":2366,"nodeType":"Block","src":"10182:63:9","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10231:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10223:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2360,"name":"address","nodeType":"ElementaryTypeName","src":"10223:7:9","typeDescriptions":{}}},"id":2363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10223:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2359,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"10203:19:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10203:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2365,"nodeType":"RevertStatement","src":"10196:38:9"}]}},{"expression":{"id":2374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2368,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"10254:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2371,"indexExpression":{"id":2369,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2329,"src":"10266:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10254:18:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2372,"indexExpression":{"id":2370,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2331,"src":"10273:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10254:27:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2373,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"10284:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10254:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2375,"nodeType":"ExpressionStatement","src":"10254:35:9"},{"condition":{"id":2376,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2335,"src":"10303:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2384,"nodeType":"IfStatement","src":"10299:76:9","trueBody":{"id":2383,"nodeType":"Block","src":"10314:61:9","statements":[{"eventCall":{"arguments":[{"id":2378,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2329,"src":"10342:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2379,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2331,"src":"10349:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2380,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"10358:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2377,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2456,"src":"10333:8:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10333:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2382,"nodeType":"EmitStatement","src":"10328:36:9"}]}}]},"documentation":{"id":2327,"nodeType":"StructuredDocumentation","src":"9123:821:9","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":2386,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9958:8:9","nodeType":"FunctionDefinition","parameters":{"id":2336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2329,"mutability":"mutable","name":"owner","nameLocation":"9975:5:9","nodeType":"VariableDeclaration","scope":2386,"src":"9967:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2328,"name":"address","nodeType":"ElementaryTypeName","src":"9967:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2331,"mutability":"mutable","name":"spender","nameLocation":"9990:7:9","nodeType":"VariableDeclaration","scope":2386,"src":"9982:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2330,"name":"address","nodeType":"ElementaryTypeName","src":"9982:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2333,"mutability":"mutable","name":"value","nameLocation":"10007:5:9","nodeType":"VariableDeclaration","scope":2386,"src":"9999:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2332,"name":"uint256","nodeType":"ElementaryTypeName","src":"9999:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2335,"mutability":"mutable","name":"emitEvent","nameLocation":"10019:9:9","nodeType":"VariableDeclaration","scope":2386,"src":"10014:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2334,"name":"bool","nodeType":"ElementaryTypeName","src":"10014:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9966:63:9"},"returnParameters":{"id":2337,"nodeType":"ParameterList","parameters":[],"src":"10047:0:9"},"scope":2435,"src":"9949:432:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2433,"nodeType":"Block","src":"10752:388:9","statements":[{"assignments":[2397],"declarations":[{"constant":false,"id":2397,"mutability":"mutable","name":"currentAllowance","nameLocation":"10770:16:9","nodeType":"VariableDeclaration","scope":2433,"src":"10762:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2396,"name":"uint256","nodeType":"ElementaryTypeName","src":"10762:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2402,"initialValue":{"arguments":[{"id":2399,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"10799:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2400,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2391,"src":"10806:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2398,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2062,"src":"10789:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":2401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10789:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10762:52:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2403,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2397,"src":"10828:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":2406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10853:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2405,"name":"uint256","nodeType":"ElementaryTypeName","src":"10853:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":2404,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10848:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10848:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":2408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10862:3:9","memberName":"max","nodeType":"MemberAccess","src":"10848:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10828:37:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2432,"nodeType":"IfStatement","src":"10824:310:9","trueBody":{"id":2431,"nodeType":"Block","src":"10867:267:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2410,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2397,"src":"10885:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2411,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2393,"src":"10904:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10885:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2420,"nodeType":"IfStatement","src":"10881:130:9","trueBody":{"id":2419,"nodeType":"Block","src":"10911:100:9","statements":[{"errorCall":{"arguments":[{"id":2414,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2391,"src":"10963:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2415,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2397,"src":"10972:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2416,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2393,"src":"10990:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2413,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"10936:26:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":2417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10936:60:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2418,"nodeType":"RevertStatement","src":"10929:67:9"}]}},{"id":2430,"nodeType":"UncheckedBlock","src":"11024:100:9","statements":[{"expression":{"arguments":[{"id":2422,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"11061:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2423,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2391,"src":"11068:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2424,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2397,"src":"11077:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2425,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2393,"src":"11096:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11077:24:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":2427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11103:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2421,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2326,2386],"referencedDeclaration":2386,"src":"11052:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":2428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11052:57:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2429,"nodeType":"ExpressionStatement","src":"11052:57:9"}]}]}}]},"documentation":{"id":2387,"nodeType":"StructuredDocumentation","src":"10387:271:9","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":2434,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10672:15:9","nodeType":"FunctionDefinition","parameters":{"id":2394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2389,"mutability":"mutable","name":"owner","nameLocation":"10696:5:9","nodeType":"VariableDeclaration","scope":2434,"src":"10688:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2388,"name":"address","nodeType":"ElementaryTypeName","src":"10688:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2391,"mutability":"mutable","name":"spender","nameLocation":"10711:7:9","nodeType":"VariableDeclaration","scope":2434,"src":"10703:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2390,"name":"address","nodeType":"ElementaryTypeName","src":"10703:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2393,"mutability":"mutable","name":"value","nameLocation":"10728:5:9","nodeType":"VariableDeclaration","scope":2434,"src":"10720:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2392,"name":"uint256","nodeType":"ElementaryTypeName","src":"10720:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10687:47:9"},"returnParameters":{"id":2395,"nodeType":"ParameterList","parameters":[],"src":"10752:0:9"},"scope":2435,"src":"10663:477:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2436,"src":"1401:9741:9","usedErrors":[563,568,573,582,587,592],"usedEvents":[2447,2456]}],"src":"105:11038:9"},"id":9},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[2513]},"id":2514,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2437,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":2438,"nodeType":"StructuredDocumentation","src":"132:70:10","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":2513,"linearizedBaseContracts":[2513],"name":"IERC20","nameLocation":"213:6:10","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2439,"nodeType":"StructuredDocumentation","src":"226:158:10","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":2447,"name":"Transfer","nameLocation":"395:8:10","nodeType":"EventDefinition","parameters":{"id":2446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2441,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:10","nodeType":"VariableDeclaration","scope":2447,"src":"404:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2440,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2443,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:10","nodeType":"VariableDeclaration","scope":2447,"src":"426:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2442,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2445,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:10","nodeType":"VariableDeclaration","scope":2447,"src":"446:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2444,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:10"},"src":"389:72:10"},{"anonymous":false,"documentation":{"id":2448,"nodeType":"StructuredDocumentation","src":"467:148:10","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":2456,"name":"Approval","nameLocation":"626:8:10","nodeType":"EventDefinition","parameters":{"id":2455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2450,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:10","nodeType":"VariableDeclaration","scope":2456,"src":"635:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2449,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2452,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:10","nodeType":"VariableDeclaration","scope":2456,"src":"658:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2451,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2454,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:10","nodeType":"VariableDeclaration","scope":2456,"src":"683:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2453,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:10"},"src":"620:78:10"},{"documentation":{"id":2457,"nodeType":"StructuredDocumentation","src":"704:65:10","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":2462,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:10","nodeType":"FunctionDefinition","parameters":{"id":2458,"nodeType":"ParameterList","parameters":[],"src":"794:2:10"},"returnParameters":{"id":2461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2460,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2462,"src":"820:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2459,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:10"},"scope":2513,"src":"774:55:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2463,"nodeType":"StructuredDocumentation","src":"835:71:10","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":2470,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:10","nodeType":"FunctionDefinition","parameters":{"id":2466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2465,"mutability":"mutable","name":"account","nameLocation":"938:7:10","nodeType":"VariableDeclaration","scope":2470,"src":"930:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2464,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:10"},"returnParameters":{"id":2469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2468,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2470,"src":"970:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2467,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:10"},"scope":2513,"src":"911:68:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2471,"nodeType":"StructuredDocumentation","src":"985:213:10","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":2480,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:10","nodeType":"FunctionDefinition","parameters":{"id":2476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2473,"mutability":"mutable","name":"to","nameLocation":"1229:2:10","nodeType":"VariableDeclaration","scope":2480,"src":"1221:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2472,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2475,"mutability":"mutable","name":"value","nameLocation":"1241:5:10","nodeType":"VariableDeclaration","scope":2480,"src":"1233:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2474,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:10"},"returnParameters":{"id":2479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2478,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2480,"src":"1266:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2477,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:10"},"scope":2513,"src":"1203:69:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2481,"nodeType":"StructuredDocumentation","src":"1278:264:10","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":2490,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:10","nodeType":"FunctionDefinition","parameters":{"id":2486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2483,"mutability":"mutable","name":"owner","nameLocation":"1574:5:10","nodeType":"VariableDeclaration","scope":2490,"src":"1566:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2482,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2485,"mutability":"mutable","name":"spender","nameLocation":"1589:7:10","nodeType":"VariableDeclaration","scope":2490,"src":"1581:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2484,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:10"},"returnParameters":{"id":2489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2488,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2490,"src":"1621:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2487,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:10"},"scope":2513,"src":"1547:83:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2491,"nodeType":"StructuredDocumentation","src":"1636:667:10","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":2500,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:10","nodeType":"FunctionDefinition","parameters":{"id":2496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2493,"mutability":"mutable","name":"spender","nameLocation":"2333:7:10","nodeType":"VariableDeclaration","scope":2500,"src":"2325:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2492,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2495,"mutability":"mutable","name":"value","nameLocation":"2350:5:10","nodeType":"VariableDeclaration","scope":2500,"src":"2342:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2494,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:10"},"returnParameters":{"id":2499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2500,"src":"2375:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2497,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:10"},"scope":2513,"src":"2308:73:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2501,"nodeType":"StructuredDocumentation","src":"2387:297:10","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":2512,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:10","nodeType":"FunctionDefinition","parameters":{"id":2508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2503,"mutability":"mutable","name":"from","nameLocation":"2719:4:10","nodeType":"VariableDeclaration","scope":2512,"src":"2711:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2502,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2505,"mutability":"mutable","name":"to","nameLocation":"2733:2:10","nodeType":"VariableDeclaration","scope":2512,"src":"2725:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2504,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2507,"mutability":"mutable","name":"value","nameLocation":"2745:5:10","nodeType":"VariableDeclaration","scope":2512,"src":"2737:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2506,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:10"},"returnParameters":{"id":2511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2510,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2512,"src":"2770:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2509,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:10"},"scope":2513,"src":"2689:87:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2514,"src":"203:2575:10","usedErrors":[],"usedEvents":[2447,2456]}],"src":"106:2673:10"},"id":10},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","exportedSymbols":{"ECDSA":[4254],"EIP712":[4481],"ERC20":[2435],"ERC20Permit":[2667],"IERC20Permit":[2729],"Nonces":[3255]},"id":2668,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2515,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"122:24:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"./IERC20Permit.sol","id":2517,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2668,"sourceUnit":2730,"src":"148:48:11","symbolAliases":[{"foreign":{"id":2516,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2729,"src":"156:12:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":2519,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2668,"sourceUnit":2436,"src":"197:35:11","symbolAliases":[{"foreign":{"id":2518,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"205:5:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":2521,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2668,"sourceUnit":4255,"src":"233:60:11","symbolAliases":[{"foreign":{"id":2520,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4254,"src":"241:5:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../../../utils/cryptography/EIP712.sol","id":2523,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2668,"sourceUnit":4482,"src":"294:62:11","symbolAliases":[{"foreign":{"id":2522,"name":"EIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4481,"src":"302:6:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","file":"../../../utils/Nonces.sol","id":2525,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2668,"sourceUnit":3256,"src":"357:49:11","symbolAliases":[{"foreign":{"id":2524,"name":"Nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3255,"src":"365:6:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2527,"name":"ERC20","nameLocations":["929:5:11"],"nodeType":"IdentifierPath","referencedDeclaration":2435,"src":"929:5:11"},"id":2528,"nodeType":"InheritanceSpecifier","src":"929:5:11"},{"baseName":{"id":2529,"name":"IERC20Permit","nameLocations":["936:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":2729,"src":"936:12:11"},"id":2530,"nodeType":"InheritanceSpecifier","src":"936:12:11"},{"baseName":{"id":2531,"name":"EIP712","nameLocations":["950:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":4481,"src":"950:6:11"},"id":2532,"nodeType":"InheritanceSpecifier","src":"950:6:11"},{"baseName":{"id":2533,"name":"Nonces","nameLocations":["958:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":3255,"src":"958:6:11"},"id":2534,"nodeType":"InheritanceSpecifier","src":"958:6:11"}],"canonicalName":"ERC20Permit","contractDependencies":[],"contractKind":"contract","documentation":{"id":2526,"nodeType":"StructuredDocumentation","src":"408:487:11","text":" @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":true,"id":2667,"linearizedBaseContracts":[2667,3255,4481,551,2729,2435,593,2693,2513,3187],"name":"ERC20Permit","nameLocation":"914:11:11","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2539,"mutability":"constant","name":"PERMIT_TYPEHASH","nameLocation":"996:15:11","nodeType":"VariableDeclaration","scope":2667,"src":"971:146:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2535,"name":"bytes32","nodeType":"ElementaryTypeName","src":"971:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":2537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1032:84:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":2536,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1022:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1022:95:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"documentation":{"id":2540,"nodeType":"StructuredDocumentation","src":"1124:52:11","text":" @dev Permit deadline has expired."},"errorSelector":"62791302","id":2544,"name":"ERC2612ExpiredSignature","nameLocation":"1187:23:11","nodeType":"ErrorDefinition","parameters":{"id":2543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2542,"mutability":"mutable","name":"deadline","nameLocation":"1219:8:11","nodeType":"VariableDeclaration","scope":2544,"src":"1211:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2541,"name":"uint256","nodeType":"ElementaryTypeName","src":"1211:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:18:11"},"src":"1181:48:11"},{"documentation":{"id":2545,"nodeType":"StructuredDocumentation","src":"1235:45:11","text":" @dev Mismatched signature."},"errorSelector":"4b800e46","id":2551,"name":"ERC2612InvalidSigner","nameLocation":"1291:20:11","nodeType":"ErrorDefinition","parameters":{"id":2550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2547,"mutability":"mutable","name":"signer","nameLocation":"1320:6:11","nodeType":"VariableDeclaration","scope":2551,"src":"1312:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2546,"name":"address","nodeType":"ElementaryTypeName","src":"1312:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2549,"mutability":"mutable","name":"owner","nameLocation":"1336:5:11","nodeType":"VariableDeclaration","scope":2551,"src":"1328:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2548,"name":"address","nodeType":"ElementaryTypeName","src":"1328:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1311:31:11"},"src":"1285:58:11"},{"body":{"id":2561,"nodeType":"Block","src":"1624:2:11","statements":[]},"documentation":{"id":2552,"nodeType":"StructuredDocumentation","src":"1349:220:11","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC20 token name."},"id":2562,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":2557,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2554,"src":"1613:4:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":2558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1619:3:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":2559,"kind":"baseConstructorSpecifier","modifierName":{"id":2556,"name":"EIP712","nameLocations":["1606:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":4481,"src":"1606:6:11"},"nodeType":"ModifierInvocation","src":"1606:17:11"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2554,"mutability":"mutable","name":"name","nameLocation":"1600:4:11","nodeType":"VariableDeclaration","scope":2562,"src":"1586:18:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2553,"name":"string","nodeType":"ElementaryTypeName","src":"1586:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1585:20:11"},"returnParameters":{"id":2560,"nodeType":"ParameterList","parameters":[],"src":"1624:0:11"},"scope":2667,"src":"1574:52:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2714],"body":{"id":2638,"nodeType":"Block","src":"1869:483:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2580,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1883:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1889:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"1883:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2582,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2571,"src":"1901:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1883:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2589,"nodeType":"IfStatement","src":"1879:97:11","trueBody":{"id":2588,"nodeType":"Block","src":"1911:65:11","statements":[{"errorCall":{"arguments":[{"id":2585,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2571,"src":"1956:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2584,"name":"ERC2612ExpiredSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"1932:23:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1932:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2587,"nodeType":"RevertStatement","src":"1925:40:11"}]}},{"assignments":[2591],"declarations":[{"constant":false,"id":2591,"mutability":"mutable","name":"structHash","nameLocation":"1994:10:11","nodeType":"VariableDeclaration","scope":2638,"src":"1986:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2590,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1986:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2605,"initialValue":{"arguments":[{"arguments":[{"id":2595,"name":"PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2539,"src":"2028:15:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2596,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2565,"src":"2045:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2597,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"2052:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2598,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2569,"src":"2061:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2600,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2565,"src":"2078:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2599,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3229,"src":"2068:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":2601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2068:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2602,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2571,"src":"2086:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2593,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2017:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2021:6:11","memberName":"encode","nodeType":"MemberAccess","src":"2017:10:11","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2017:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2592,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2007:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2007:89:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1986:110:11"},{"assignments":[2607],"declarations":[{"constant":false,"id":2607,"mutability":"mutable","name":"hash","nameLocation":"2115:4:11","nodeType":"VariableDeclaration","scope":2638,"src":"2107:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2606,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2107:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2611,"initialValue":{"arguments":[{"id":2609,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2591,"src":"2139:10:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2608,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4414,"src":"2122:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":2610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2122:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2107:43:11"},{"assignments":[2613],"declarations":[{"constant":false,"id":2613,"mutability":"mutable","name":"signer","nameLocation":"2169:6:11","nodeType":"VariableDeclaration","scope":2638,"src":"2161:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2612,"name":"address","nodeType":"ElementaryTypeName","src":"2161:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2621,"initialValue":{"arguments":[{"id":2616,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"2192:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2617,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"2198:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2618,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2575,"src":"2201:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2619,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2577,"src":"2204:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2614,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4254,"src":"2178:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$4254_$","typeString":"type(library ECDSA)"}},"id":2615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2184:7:11","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":4204,"src":"2178:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":2620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2178:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2161:45:11"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2622,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"2220:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2623,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2565,"src":"2230:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2220:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2631,"nodeType":"IfStatement","src":"2216:88:11","trueBody":{"id":2630,"nodeType":"Block","src":"2237:67:11","statements":[{"errorCall":{"arguments":[{"id":2626,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"2279:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2627,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2565,"src":"2287:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2625,"name":"ERC2612InvalidSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"2258:20:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":2628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2258:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2629,"nodeType":"RevertStatement","src":"2251:42:11"}]}},{"expression":{"arguments":[{"id":2633,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2565,"src":"2323:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2634,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"2330:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2569,"src":"2339:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2632,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2326,2386],"referencedDeclaration":2326,"src":"2314:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2314:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2637,"nodeType":"ExpressionStatement","src":"2314:31:11"}]},"documentation":{"id":2563,"nodeType":"StructuredDocumentation","src":"1632:43:11","text":" @inheritdoc IERC20Permit"},"functionSelector":"d505accf","id":2639,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1689:6:11","nodeType":"FunctionDefinition","parameters":{"id":2578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2565,"mutability":"mutable","name":"owner","nameLocation":"1713:5:11","nodeType":"VariableDeclaration","scope":2639,"src":"1705:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2564,"name":"address","nodeType":"ElementaryTypeName","src":"1705:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2567,"mutability":"mutable","name":"spender","nameLocation":"1736:7:11","nodeType":"VariableDeclaration","scope":2639,"src":"1728:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2566,"name":"address","nodeType":"ElementaryTypeName","src":"1728:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2569,"mutability":"mutable","name":"value","nameLocation":"1761:5:11","nodeType":"VariableDeclaration","scope":2639,"src":"1753:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2568,"name":"uint256","nodeType":"ElementaryTypeName","src":"1753:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2571,"mutability":"mutable","name":"deadline","nameLocation":"1784:8:11","nodeType":"VariableDeclaration","scope":2639,"src":"1776:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2570,"name":"uint256","nodeType":"ElementaryTypeName","src":"1776:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2573,"mutability":"mutable","name":"v","nameLocation":"1808:1:11","nodeType":"VariableDeclaration","scope":2639,"src":"1802:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2572,"name":"uint8","nodeType":"ElementaryTypeName","src":"1802:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2575,"mutability":"mutable","name":"r","nameLocation":"1827:1:11","nodeType":"VariableDeclaration","scope":2639,"src":"1819:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2574,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1819:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2577,"mutability":"mutable","name":"s","nameLocation":"1846:1:11","nodeType":"VariableDeclaration","scope":2639,"src":"1838:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2576,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1838:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1695:158:11"},"returnParameters":{"id":2579,"nodeType":"ParameterList","parameters":[],"src":"1869:0:11"},"scope":2667,"src":"1680:672:11","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2722,3214],"body":{"id":2655,"nodeType":"Block","src":"2506:43:11","statements":[{"expression":{"arguments":[{"id":2652,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"2536:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2650,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2523:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Permit_$2667_$","typeString":"type(contract super ERC20Permit)"}},"id":2651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2529:6:11","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":3214,"src":"2523:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2523:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2649,"id":2654,"nodeType":"Return","src":"2516:26:11"}]},"documentation":{"id":2640,"nodeType":"StructuredDocumentation","src":"2358:43:11","text":" @inheritdoc IERC20Permit"},"functionSelector":"7ecebe00","id":2656,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"2415:6:11","nodeType":"FunctionDefinition","overrides":{"id":2646,"nodeType":"OverrideSpecifier","overrides":[{"id":2644,"name":"IERC20Permit","nameLocations":["2466:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":2729,"src":"2466:12:11"},{"id":2645,"name":"Nonces","nameLocations":["2480:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":3255,"src":"2480:6:11"}],"src":"2457:30:11"},"parameters":{"id":2643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2642,"mutability":"mutable","name":"owner","nameLocation":"2430:5:11","nodeType":"VariableDeclaration","scope":2656,"src":"2422:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2641,"name":"address","nodeType":"ElementaryTypeName","src":"2422:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2421:15:11"},"returnParameters":{"id":2649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2648,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2656,"src":"2497:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2647,"name":"uint256","nodeType":"ElementaryTypeName","src":"2497:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2496:9:11"},"scope":2667,"src":"2406:143:11","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2728],"body":{"id":2665,"nodeType":"Block","src":"2724:44:11","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2662,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"2741:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2741:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2661,"id":2664,"nodeType":"Return","src":"2734:27:11"}]},"documentation":{"id":2657,"nodeType":"StructuredDocumentation","src":"2555:43:11","text":" @inheritdoc IERC20Permit"},"functionSelector":"3644e515","id":2666,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2665:16:11","nodeType":"FunctionDefinition","parameters":{"id":2658,"nodeType":"ParameterList","parameters":[],"src":"2681:2:11"},"returnParameters":{"id":2661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2660,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2666,"src":"2715:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2659,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2715:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2714:9:11"},"scope":2667,"src":"2656:112:11","stateMutability":"view","virtual":true,"visibility":"external"}],"scope":2668,"src":"896:1874:11","usedErrors":[563,568,573,582,587,592,2544,2551,3197,3338,3340,3917,3922,3927],"usedEvents":[531,2447,2456]}],"src":"122:2649:11"},"id":11},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[2513],"IERC20Metadata":[2693]},"id":2694,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2669,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:12"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":2671,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2694,"sourceUnit":2514,"src":"151:37:12","symbolAliases":[{"foreign":{"id":2670,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"159:6:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2673,"name":"IERC20","nameLocations":["305:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":2513,"src":"305:6:12"},"id":2674,"nodeType":"InheritanceSpecifier","src":"305:6:12"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":2672,"nodeType":"StructuredDocumentation","src":"190:86:12","text":" @dev Interface for the optional metadata functions from the ERC20 standard."},"fullyImplemented":false,"id":2693,"linearizedBaseContracts":[2693,2513],"name":"IERC20Metadata","nameLocation":"287:14:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2675,"nodeType":"StructuredDocumentation","src":"318:54:12","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":2680,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:12","nodeType":"FunctionDefinition","parameters":{"id":2676,"nodeType":"ParameterList","parameters":[],"src":"390:2:12"},"returnParameters":{"id":2679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2678,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2680,"src":"416:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2677,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:12"},"scope":2693,"src":"377:54:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2681,"nodeType":"StructuredDocumentation","src":"437:56:12","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":2686,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:12","nodeType":"FunctionDefinition","parameters":{"id":2682,"nodeType":"ParameterList","parameters":[],"src":"513:2:12"},"returnParameters":{"id":2685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2684,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2686,"src":"539:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2683,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:12"},"scope":2693,"src":"498:56:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2687,"nodeType":"StructuredDocumentation","src":"560:65:12","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":2692,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:12","nodeType":"FunctionDefinition","parameters":{"id":2688,"nodeType":"ParameterList","parameters":[],"src":"647:2:12"},"returnParameters":{"id":2691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2690,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2692,"src":"673:5:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2689,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:12"},"scope":2693,"src":"630:50:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2694,"src":"277:405:12","usedErrors":[],"usedEvents":[2447,2456]}],"src":"125:558:12"},"id":12},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[2729]},"id":2730,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2695,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":2696,"nodeType":"StructuredDocumentation","src":"149:1963:13","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":2729,"linearizedBaseContracts":[2729],"name":"IERC20Permit","nameLocation":"2123:12:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2697,"nodeType":"StructuredDocumentation","src":"2142:850:13","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":2714,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3006:6:13","nodeType":"FunctionDefinition","parameters":{"id":2712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2699,"mutability":"mutable","name":"owner","nameLocation":"3030:5:13","nodeType":"VariableDeclaration","scope":2714,"src":"3022:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2698,"name":"address","nodeType":"ElementaryTypeName","src":"3022:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2701,"mutability":"mutable","name":"spender","nameLocation":"3053:7:13","nodeType":"VariableDeclaration","scope":2714,"src":"3045:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2700,"name":"address","nodeType":"ElementaryTypeName","src":"3045:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2703,"mutability":"mutable","name":"value","nameLocation":"3078:5:13","nodeType":"VariableDeclaration","scope":2714,"src":"3070:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2702,"name":"uint256","nodeType":"ElementaryTypeName","src":"3070:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2705,"mutability":"mutable","name":"deadline","nameLocation":"3101:8:13","nodeType":"VariableDeclaration","scope":2714,"src":"3093:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2704,"name":"uint256","nodeType":"ElementaryTypeName","src":"3093:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2707,"mutability":"mutable","name":"v","nameLocation":"3125:1:13","nodeType":"VariableDeclaration","scope":2714,"src":"3119:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2706,"name":"uint8","nodeType":"ElementaryTypeName","src":"3119:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2709,"mutability":"mutable","name":"r","nameLocation":"3144:1:13","nodeType":"VariableDeclaration","scope":2714,"src":"3136:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2708,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3136:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2711,"mutability":"mutable","name":"s","nameLocation":"3163:1:13","nodeType":"VariableDeclaration","scope":2714,"src":"3155:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2710,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3155:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3012:158:13"},"returnParameters":{"id":2713,"nodeType":"ParameterList","parameters":[],"src":"3179:0:13"},"scope":2729,"src":"2997:183:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2715,"nodeType":"StructuredDocumentation","src":"3186:294:13","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":2722,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3494:6:13","nodeType":"FunctionDefinition","parameters":{"id":2718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2717,"mutability":"mutable","name":"owner","nameLocation":"3509:5:13","nodeType":"VariableDeclaration","scope":2722,"src":"3501:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2716,"name":"address","nodeType":"ElementaryTypeName","src":"3501:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3500:15:13"},"returnParameters":{"id":2721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2720,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2722,"src":"3539:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2719,"name":"uint256","nodeType":"ElementaryTypeName","src":"3539:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3538:9:13"},"scope":2729,"src":"3485:63:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2723,"nodeType":"StructuredDocumentation","src":"3554:128:13","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":2728,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3749:16:13","nodeType":"FunctionDefinition","parameters":{"id":2724,"nodeType":"ParameterList","parameters":[],"src":"3765:2:13"},"returnParameters":{"id":2727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2726,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2728,"src":"3791:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2725,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3791:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3790:9:13"},"scope":2729,"src":"3740:60:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2730,"src":"2113:1689:13","usedErrors":[],"usedEvents":[]}],"src":"123:3680:13"},"id":13},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[2982]},"id":2983,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2731,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":2732,"nodeType":"StructuredDocumentation","src":"127:67:14","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2982,"linearizedBaseContracts":[2982],"name":"Address","nameLocation":"203:7:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2733,"nodeType":"StructuredDocumentation","src":"217:94:14","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cd786059","id":2737,"name":"AddressInsufficientBalance","nameLocation":"322:26:14","nodeType":"ErrorDefinition","parameters":{"id":2736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2735,"mutability":"mutable","name":"account","nameLocation":"357:7:14","nodeType":"VariableDeclaration","scope":2737,"src":"349:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2734,"name":"address","nodeType":"ElementaryTypeName","src":"349:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"348:17:14"},"src":"316:50:14"},{"documentation":{"id":2738,"nodeType":"StructuredDocumentation","src":"372:75:14","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":2742,"name":"AddressEmptyCode","nameLocation":"458:16:14","nodeType":"ErrorDefinition","parameters":{"id":2741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2740,"mutability":"mutable","name":"target","nameLocation":"483:6:14","nodeType":"VariableDeclaration","scope":2742,"src":"475:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2739,"name":"address","nodeType":"ElementaryTypeName","src":"475:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"474:16:14"},"src":"452:39:14"},{"documentation":{"id":2743,"nodeType":"StructuredDocumentation","src":"497:89:14","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"1425ea42","id":2745,"name":"FailedInnerCall","nameLocation":"597:15:14","nodeType":"ErrorDefinition","parameters":{"id":2744,"nodeType":"ParameterList","parameters":[],"src":"612:2:14"},"src":"591:24:14"},{"body":{"id":2785,"nodeType":"Block","src":"1602:260:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2755,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1624:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2982","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2982","typeString":"library Address"}],"id":2754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1616:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2753,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:14","typeDescriptions":{}}},"id":2756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1616:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1630:7:14","memberName":"balance","nodeType":"MemberAccess","src":"1616:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2758,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"1640:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1616:30:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2768,"nodeType":"IfStatement","src":"1612:109:14","trueBody":{"id":2767,"nodeType":"Block","src":"1648:73:14","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2763,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1704:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2982","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2982","typeString":"library Address"}],"id":2762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1696:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2761,"name":"address","nodeType":"ElementaryTypeName","src":"1696:7:14","typeDescriptions":{}}},"id":2764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1696:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2760,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"1669:26:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1669:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2766,"nodeType":"RevertStatement","src":"1662:48:14"}]}},{"assignments":[2770,null],"declarations":[{"constant":false,"id":2770,"mutability":"mutable","name":"success","nameLocation":"1737:7:14","nodeType":"VariableDeclaration","scope":2785,"src":"1732:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2769,"name":"bool","nodeType":"ElementaryTypeName","src":"1732:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2777,"initialValue":{"arguments":[{"hexValue":"","id":2775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1780:2:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":2771,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2748,"src":"1750:9:14","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1760:4:14","memberName":"call","nodeType":"MemberAccess","src":"1750:14:14","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2773,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"1772:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1750:29:14","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1750:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1731:52:14"},{"condition":{"id":2779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1797:8:14","subExpression":{"id":2778,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2770,"src":"1798:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2784,"nodeType":"IfStatement","src":"1793:63:14","trueBody":{"id":2783,"nodeType":"Block","src":"1807:49:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2780,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2745,"src":"1828:15:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1828:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2782,"nodeType":"RevertStatement","src":"1821:24:14"}]}}]},"documentation":{"id":2746,"nodeType":"StructuredDocumentation","src":"621:905:14","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":2786,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1540:9:14","nodeType":"FunctionDefinition","parameters":{"id":2751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2748,"mutability":"mutable","name":"recipient","nameLocation":"1566:9:14","nodeType":"VariableDeclaration","scope":2786,"src":"1550:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2747,"name":"address","nodeType":"ElementaryTypeName","src":"1550:15:14","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2750,"mutability":"mutable","name":"amount","nameLocation":"1585:6:14","nodeType":"VariableDeclaration","scope":2786,"src":"1577:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2749,"name":"uint256","nodeType":"ElementaryTypeName","src":"1577:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:43:14"},"returnParameters":{"id":2752,"nodeType":"ParameterList","parameters":[],"src":"1602:0:14"},"scope":2982,"src":"1531:331:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2802,"nodeType":"Block","src":"2794:62:14","statements":[{"expression":{"arguments":[{"id":2797,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"2833:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2798,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2791,"src":"2841:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2847:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2796,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"2811:21:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":2800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2811:38:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2795,"id":2801,"nodeType":"Return","src":"2804:45:14"}]},"documentation":{"id":2787,"nodeType":"StructuredDocumentation","src":"1868:832:14","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":2803,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2714:12:14","nodeType":"FunctionDefinition","parameters":{"id":2792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2789,"mutability":"mutable","name":"target","nameLocation":"2735:6:14","nodeType":"VariableDeclaration","scope":2803,"src":"2727:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2788,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2791,"mutability":"mutable","name":"data","nameLocation":"2756:4:14","nodeType":"VariableDeclaration","scope":2803,"src":"2743:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2790,"name":"bytes","nodeType":"ElementaryTypeName","src":"2743:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2726:35:14"},"returnParameters":{"id":2795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2794,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2803,"src":"2780:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2793,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2779:14:14"},"scope":2982,"src":"2705:151:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2848,"nodeType":"Block","src":"3293:279:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2817,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3315:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2982","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2982","typeString":"library Address"}],"id":2816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3307:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2815,"name":"address","nodeType":"ElementaryTypeName","src":"3307:7:14","typeDescriptions":{}}},"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3307:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3321:7:14","memberName":"balance","nodeType":"MemberAccess","src":"3307:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2820,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"3331:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3307:29:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2830,"nodeType":"IfStatement","src":"3303:108:14","trueBody":{"id":2829,"nodeType":"Block","src":"3338:73:14","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2825,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3394:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2982","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2982","typeString":"library Address"}],"id":2824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3386:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2823,"name":"address","nodeType":"ElementaryTypeName","src":"3386:7:14","typeDescriptions":{}}},"id":2826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2822,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"3359:26:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3359:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2828,"nodeType":"RevertStatement","src":"3352:48:14"}]}},{"assignments":[2832,2834],"declarations":[{"constant":false,"id":2832,"mutability":"mutable","name":"success","nameLocation":"3426:7:14","nodeType":"VariableDeclaration","scope":2848,"src":"3421:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2831,"name":"bool","nodeType":"ElementaryTypeName","src":"3421:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2834,"mutability":"mutable","name":"returndata","nameLocation":"3448:10:14","nodeType":"VariableDeclaration","scope":2848,"src":"3435:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2833,"name":"bytes","nodeType":"ElementaryTypeName","src":"3435:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2841,"initialValue":{"arguments":[{"id":2839,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"3488:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2835,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2806,"src":"3462:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3469:4:14","memberName":"call","nodeType":"MemberAccess","src":"3462:11:14","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2837,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"3481:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3462:25:14","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3462:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3420:73:14"},{"expression":{"arguments":[{"id":2843,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2806,"src":"3537:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2844,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2832,"src":"3545:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2845,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"3554:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2842,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"3510:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":2846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3510:55:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2814,"id":2847,"nodeType":"Return","src":"3503:62:14"}]},"documentation":{"id":2804,"nodeType":"StructuredDocumentation","src":"2862:313:14","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":2849,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"3189:21:14","nodeType":"FunctionDefinition","parameters":{"id":2811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2806,"mutability":"mutable","name":"target","nameLocation":"3219:6:14","nodeType":"VariableDeclaration","scope":2849,"src":"3211:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2805,"name":"address","nodeType":"ElementaryTypeName","src":"3211:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2808,"mutability":"mutable","name":"data","nameLocation":"3240:4:14","nodeType":"VariableDeclaration","scope":2849,"src":"3227:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2807,"name":"bytes","nodeType":"ElementaryTypeName","src":"3227:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2810,"mutability":"mutable","name":"value","nameLocation":"3254:5:14","nodeType":"VariableDeclaration","scope":2849,"src":"3246:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2809,"name":"uint256","nodeType":"ElementaryTypeName","src":"3246:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3210:50:14"},"returnParameters":{"id":2814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2813,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2849,"src":"3279:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2812,"name":"bytes","nodeType":"ElementaryTypeName","src":"3279:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3278:14:14"},"scope":2982,"src":"3180:392:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2874,"nodeType":"Block","src":"3811:154:14","statements":[{"assignments":[2860,2862],"declarations":[{"constant":false,"id":2860,"mutability":"mutable","name":"success","nameLocation":"3827:7:14","nodeType":"VariableDeclaration","scope":2874,"src":"3822:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2859,"name":"bool","nodeType":"ElementaryTypeName","src":"3822:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2862,"mutability":"mutable","name":"returndata","nameLocation":"3849:10:14","nodeType":"VariableDeclaration","scope":2874,"src":"3836:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2861,"name":"bytes","nodeType":"ElementaryTypeName","src":"3836:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2867,"initialValue":{"arguments":[{"id":2865,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"3881:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2863,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2852,"src":"3863:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3870:10:14","memberName":"staticcall","nodeType":"MemberAccess","src":"3863:17:14","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":2866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3863:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3821:65:14"},{"expression":{"arguments":[{"id":2869,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2852,"src":"3930:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2870,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2860,"src":"3938:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2871,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"3947:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2868,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"3903:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":2872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3903:55:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2858,"id":2873,"nodeType":"Return","src":"3896:62:14"}]},"documentation":{"id":2850,"nodeType":"StructuredDocumentation","src":"3578:128:14","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":2875,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3720:18:14","nodeType":"FunctionDefinition","parameters":{"id":2855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2852,"mutability":"mutable","name":"target","nameLocation":"3747:6:14","nodeType":"VariableDeclaration","scope":2875,"src":"3739:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2851,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2854,"mutability":"mutable","name":"data","nameLocation":"3768:4:14","nodeType":"VariableDeclaration","scope":2875,"src":"3755:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2853,"name":"bytes","nodeType":"ElementaryTypeName","src":"3755:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3738:35:14"},"returnParameters":{"id":2858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2857,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2875,"src":"3797:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2856,"name":"bytes","nodeType":"ElementaryTypeName","src":"3797:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3796:14:14"},"scope":2982,"src":"3711:254:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2900,"nodeType":"Block","src":"4203:156:14","statements":[{"assignments":[2886,2888],"declarations":[{"constant":false,"id":2886,"mutability":"mutable","name":"success","nameLocation":"4219:7:14","nodeType":"VariableDeclaration","scope":2900,"src":"4214:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2885,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2888,"mutability":"mutable","name":"returndata","nameLocation":"4241:10:14","nodeType":"VariableDeclaration","scope":2900,"src":"4228:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2887,"name":"bytes","nodeType":"ElementaryTypeName","src":"4228:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2893,"initialValue":{"arguments":[{"id":2891,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"4275:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2889,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"4255:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4262:12:14","memberName":"delegatecall","nodeType":"MemberAccess","src":"4255:19:14","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":2892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4255:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4213:67:14"},{"expression":{"arguments":[{"id":2895,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"4324:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2896,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2886,"src":"4332:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2897,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"4341:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2894,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"4297:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":2898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:55:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2884,"id":2899,"nodeType":"Return","src":"4290:62:14"}]},"documentation":{"id":2876,"nodeType":"StructuredDocumentation","src":"3971:130:14","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":2901,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"4115:20:14","nodeType":"FunctionDefinition","parameters":{"id":2881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2878,"mutability":"mutable","name":"target","nameLocation":"4144:6:14","nodeType":"VariableDeclaration","scope":2901,"src":"4136:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2877,"name":"address","nodeType":"ElementaryTypeName","src":"4136:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2880,"mutability":"mutable","name":"data","nameLocation":"4165:4:14","nodeType":"VariableDeclaration","scope":2901,"src":"4152:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2879,"name":"bytes","nodeType":"ElementaryTypeName","src":"4152:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4135:35:14"},"returnParameters":{"id":2884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2883,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2901,"src":"4189:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2882,"name":"bytes","nodeType":"ElementaryTypeName","src":"4189:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4188:14:14"},"scope":2982,"src":"4106:253:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2940,"nodeType":"Block","src":"4783:424:14","statements":[{"condition":{"id":2914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4797:8:14","subExpression":{"id":2913,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2906,"src":"4798:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2938,"nodeType":"Block","src":"4857:344:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2920,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2908,"src":"5045:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5056:6:14","memberName":"length","nodeType":"MemberAccess","src":"5045:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5066:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5045:22:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2924,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2904,"src":"5071:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5078:4:14","memberName":"code","nodeType":"MemberAccess","src":"5071:11:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5083:6:14","memberName":"length","nodeType":"MemberAccess","src":"5071:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5093:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5071:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5045:49:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2935,"nodeType":"IfStatement","src":"5041:119:14","trueBody":{"id":2934,"nodeType":"Block","src":"5096:64:14","statements":[{"errorCall":{"arguments":[{"id":2931,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2904,"src":"5138:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2930,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2742,"src":"5121:16:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5121:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2933,"nodeType":"RevertStatement","src":"5114:31:14"}]}},{"expression":{"id":2936,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2908,"src":"5180:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2912,"id":2937,"nodeType":"Return","src":"5173:17:14"}]},"id":2939,"nodeType":"IfStatement","src":"4793:408:14","trueBody":{"id":2919,"nodeType":"Block","src":"4807:44:14","statements":[{"expression":{"arguments":[{"id":2916,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2908,"src":"4829:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2915,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2981,"src":"4821:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":2917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4821:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2918,"nodeType":"ExpressionStatement","src":"4821:19:14"}]}}]},"documentation":{"id":2902,"nodeType":"StructuredDocumentation","src":"4365:255:14","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."},"id":2941,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4634:26:14","nodeType":"FunctionDefinition","parameters":{"id":2909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2904,"mutability":"mutable","name":"target","nameLocation":"4678:6:14","nodeType":"VariableDeclaration","scope":2941,"src":"4670:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2903,"name":"address","nodeType":"ElementaryTypeName","src":"4670:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2906,"mutability":"mutable","name":"success","nameLocation":"4699:7:14","nodeType":"VariableDeclaration","scope":2941,"src":"4694:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2905,"name":"bool","nodeType":"ElementaryTypeName","src":"4694:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2908,"mutability":"mutable","name":"returndata","nameLocation":"4729:10:14","nodeType":"VariableDeclaration","scope":2941,"src":"4716:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2907,"name":"bytes","nodeType":"ElementaryTypeName","src":"4716:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4660:85:14"},"returnParameters":{"id":2912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2911,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2941,"src":"4769:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2910,"name":"bytes","nodeType":"ElementaryTypeName","src":"4769:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4768:14:14"},"scope":2982,"src":"4625:582:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2962,"nodeType":"Block","src":"5509:122:14","statements":[{"condition":{"id":2952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5523:8:14","subExpression":{"id":2951,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2944,"src":"5524:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2960,"nodeType":"Block","src":"5583:42:14","statements":[{"expression":{"id":2958,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2946,"src":"5604:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2950,"id":2959,"nodeType":"Return","src":"5597:17:14"}]},"id":2961,"nodeType":"IfStatement","src":"5519:106:14","trueBody":{"id":2957,"nodeType":"Block","src":"5533:44:14","statements":[{"expression":{"arguments":[{"id":2954,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2946,"src":"5555:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2953,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2981,"src":"5547:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":2955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5547:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2956,"nodeType":"ExpressionStatement","src":"5547:19:14"}]}}]},"documentation":{"id":2942,"nodeType":"StructuredDocumentation","src":"5213:189:14","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."},"id":2963,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5416:16:14","nodeType":"FunctionDefinition","parameters":{"id":2947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2944,"mutability":"mutable","name":"success","nameLocation":"5438:7:14","nodeType":"VariableDeclaration","scope":2963,"src":"5433:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2943,"name":"bool","nodeType":"ElementaryTypeName","src":"5433:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2946,"mutability":"mutable","name":"returndata","nameLocation":"5460:10:14","nodeType":"VariableDeclaration","scope":2963,"src":"5447:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2945,"name":"bytes","nodeType":"ElementaryTypeName","src":"5447:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5432:39:14"},"returnParameters":{"id":2950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2949,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2963,"src":"5495:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2948,"name":"bytes","nodeType":"ElementaryTypeName","src":"5495:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5494:14:14"},"scope":2982,"src":"5407:224:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2980,"nodeType":"Block","src":"5798:461:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2969,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"5874:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5885:6:14","memberName":"length","nodeType":"MemberAccess","src":"5874:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5894:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5874:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2978,"nodeType":"Block","src":"6204:49:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2975,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2745,"src":"6225:15:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6225:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2977,"nodeType":"RevertStatement","src":"6218:24:14"}]},"id":2979,"nodeType":"IfStatement","src":"5870:383:14","trueBody":{"id":2974,"nodeType":"Block","src":"5897:301:14","statements":[{"AST":{"nodeType":"YulBlock","src":"6055:133:14","statements":[{"nodeType":"YulVariableDeclaration","src":"6073:40:14","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"6102:10:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6096:5:14"},"nodeType":"YulFunctionCall","src":"6096:17:14"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"6077:15:14","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6141:2:14","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"6145:10:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6137:3:14"},"nodeType":"YulFunctionCall","src":"6137:19:14"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"6158:15:14"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6130:6:14"},"nodeType":"YulFunctionCall","src":"6130:44:14"},"nodeType":"YulExpressionStatement","src":"6130:44:14"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2966,"isOffset":false,"isSlot":false,"src":"6102:10:14","valueSize":1},{"declaration":2966,"isOffset":false,"isSlot":false,"src":"6145:10:14","valueSize":1}],"id":2973,"nodeType":"InlineAssembly","src":"6046:142:14"}]}}]},"documentation":{"id":2964,"nodeType":"StructuredDocumentation","src":"5637:101:14","text":" @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."},"id":2981,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5752:7:14","nodeType":"FunctionDefinition","parameters":{"id":2967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2966,"mutability":"mutable","name":"returndata","nameLocation":"5773:10:14","nodeType":"VariableDeclaration","scope":2981,"src":"5760:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2965,"name":"bytes","nodeType":"ElementaryTypeName","src":"5760:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5759:25:14"},"returnParameters":{"id":2968,"nodeType":"ParameterList","parameters":[],"src":"5798:0:14"},"scope":2982,"src":"5743:516:14","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2983,"src":"195:6066:14","usedErrors":[2737,2742,2745],"usedEvents":[]}],"src":"101:6161:14"},"id":14},"@openzeppelin/contracts/utils/Arrays.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","exportedSymbols":{"Arrays":[3165],"Math":[5645],"StorageSlot":[3651]},"id":3166,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2984,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"100:24:15"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":2986,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3166,"sourceUnit":3652,"src":"126:46:15","symbolAliases":[{"foreign":{"id":2985,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3651,"src":"134:11:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2988,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3166,"sourceUnit":5646,"src":"173:37:15","symbolAliases":[{"foreign":{"id":2987,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5645,"src":"181:4:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Arrays","contractDependencies":[],"contractKind":"library","documentation":{"id":2989,"nodeType":"StructuredDocumentation","src":"212:63:15","text":" @dev Collection of functions related to array types."},"fullyImplemented":true,"id":3165,"linearizedBaseContracts":[3165],"name":"Arrays","nameLocation":"284:6:15","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2992,"libraryName":{"id":2990,"name":"StorageSlot","nameLocations":["303:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":3651,"src":"303:11:15"},"nodeType":"UsingForDirective","src":"297:30:15","typeName":{"id":2991,"name":"bytes32","nodeType":"ElementaryTypeName","src":"319:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":3074,"nodeType":"Block","src":"843:834:15","statements":[{"assignments":[3004],"declarations":[{"constant":false,"id":3004,"mutability":"mutable","name":"low","nameLocation":"861:3:15","nodeType":"VariableDeclaration","scope":3074,"src":"853:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3003,"name":"uint256","nodeType":"ElementaryTypeName","src":"853:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3006,"initialValue":{"hexValue":"30","id":3005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"867:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"853:15:15"},{"assignments":[3008],"declarations":[{"constant":false,"id":3008,"mutability":"mutable","name":"high","nameLocation":"886:4:15","nodeType":"VariableDeclaration","scope":3074,"src":"878:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3007,"name":"uint256","nodeType":"ElementaryTypeName","src":"878:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3011,"initialValue":{"expression":{"id":3009,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2996,"src":"893:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":3010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"899:6:15","memberName":"length","nodeType":"MemberAccess","src":"893:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"878:27:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3012,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3008,"src":"920:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"928:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"920:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3018,"nodeType":"IfStatement","src":"916:48:15","trueBody":{"id":3017,"nodeType":"Block","src":"931:33:15","statements":[{"expression":{"hexValue":"30","id":3015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3002,"id":3016,"nodeType":"Return","src":"945:8:15"}]}},{"body":{"id":3050,"nodeType":"Block","src":"993:423:15","statements":[{"assignments":[3023],"declarations":[{"constant":false,"id":3023,"mutability":"mutable","name":"mid","nameLocation":"1015:3:15","nodeType":"VariableDeclaration","scope":3050,"src":"1007:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3022,"name":"uint256","nodeType":"ElementaryTypeName","src":"1007:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3029,"initialValue":{"arguments":[{"id":3026,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"1034:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3027,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3008,"src":"1039:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3024,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5645,"src":"1021:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5645_$","typeString":"type(library Math)"}},"id":3025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1026:7:15","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4819,"src":"1021:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1021:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1007:37:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3031,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2996,"src":"1282:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":3032,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"1289:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3030,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3096,3117,3138],"referencedDeclaration":3138,"src":"1269:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$3556_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":3033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1269:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3556_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":3034,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1294:5:15","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3555,"src":"1269:30:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3035,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2998,"src":"1302:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1269:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3048,"nodeType":"Block","src":"1360:46:15","statements":[{"expression":{"id":3046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3042,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"1378:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3043,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"1384:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1390:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1384:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1378:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3047,"nodeType":"ExpressionStatement","src":"1378:13:15"}]},"id":3049,"nodeType":"IfStatement","src":"1265:141:15","trueBody":{"id":3041,"nodeType":"Block","src":"1311:43:15","statements":[{"expression":{"id":3039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3037,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3008,"src":"1329:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3038,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"1336:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3040,"nodeType":"ExpressionStatement","src":"1329:10:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3019,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"981:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3020,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3008,"src":"987:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"981:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3051,"nodeType":"WhileStatement","src":"974:442:15"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3052,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"1533:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1539:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1533:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3056,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2996,"src":"1557:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3057,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"1564:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1570:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1564:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3055,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3096,3117,3138],"referencedDeclaration":3138,"src":"1544:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$3556_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":3060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1544:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3556_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":3061,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1573:5:15","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3555,"src":"1544:34:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3062,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2998,"src":"1582:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1544:45:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1533:56:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3072,"nodeType":"Block","src":"1636:35:15","statements":[{"expression":{"id":3070,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"1657:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3002,"id":3071,"nodeType":"Return","src":"1650:10:15"}]},"id":3073,"nodeType":"IfStatement","src":"1529:142:15","trueBody":{"id":3069,"nodeType":"Block","src":"1591:39:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3065,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"1612:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1618:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1612:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3002,"id":3068,"nodeType":"Return","src":"1605:14:15"}]}}]},"documentation":{"id":2993,"nodeType":"StructuredDocumentation","src":"333:407:15","text":" @dev Searches a sorted `array` and returns the first index that contains\n a value greater or equal to `element`. If no such index exists (i.e. all\n values in the array are strictly less than `element`), the array length is\n returned. Time complexity O(log n).\n `array` is expected to be sorted in ascending order, and to contain no\n repeated elements."},"id":3075,"implemented":true,"kind":"function","modifiers":[],"name":"findUpperBound","nameLocation":"754:14:15","nodeType":"FunctionDefinition","parameters":{"id":2999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2996,"mutability":"mutable","name":"array","nameLocation":"787:5:15","nodeType":"VariableDeclaration","scope":3075,"src":"769:23:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2994,"name":"uint256","nodeType":"ElementaryTypeName","src":"769:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2995,"nodeType":"ArrayTypeName","src":"769:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2998,"mutability":"mutable","name":"element","nameLocation":"802:7:15","nodeType":"VariableDeclaration","scope":3075,"src":"794:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2997,"name":"uint256","nodeType":"ElementaryTypeName","src":"794:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"768:42:15"},"returnParameters":{"id":3002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3001,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3075,"src":"834:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3000,"name":"uint256","nodeType":"ElementaryTypeName","src":"834:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"833:9:15"},"scope":3165,"src":"745:932:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3095,"nodeType":"Block","src":"1993:459:15","statements":[{"assignments":[3088],"declarations":[{"constant":false,"id":3088,"mutability":"mutable","name":"slot","nameLocation":"2011:4:15","nodeType":"VariableDeclaration","scope":3095,"src":"2003:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3087,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2003:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3089,"nodeType":"VariableDeclarationStatement","src":"2003:12:15"},{"AST":{"nodeType":"YulBlock","src":"2316:92:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2337:1:15","type":"","value":"0"},{"name":"arr.slot","nodeType":"YulIdentifier","src":"2340:8:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2330:6:15"},"nodeType":"YulFunctionCall","src":"2330:19:15"},"nodeType":"YulExpressionStatement","src":"2330:19:15"},{"nodeType":"YulAssignment","src":"2362:36:15","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2384:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2387:4:15","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2374:9:15"},"nodeType":"YulFunctionCall","src":"2374:18:15"},{"name":"pos","nodeType":"YulIdentifier","src":"2394:3:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2370:3:15"},"nodeType":"YulFunctionCall","src":"2370:28:15"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"2362:4:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3079,"isOffset":false,"isSlot":true,"src":"2340:8:15","suffix":"slot","valueSize":1},{"declaration":3081,"isOffset":false,"isSlot":false,"src":"2394:3:15","valueSize":1},{"declaration":3088,"isOffset":false,"isSlot":false,"src":"2362:4:15","valueSize":1}],"id":3090,"nodeType":"InlineAssembly","src":"2307:101:15"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3091,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"2424:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2429:14:15","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":3573,"src":"2424:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$3547_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2424:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3547_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"functionReturnParameters":3086,"id":3094,"nodeType":"Return","src":"2417:28:15"}]},"documentation":{"id":3076,"nodeType":"StructuredDocumentation","src":"1683:191:15","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3096,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"1888:12:15","nodeType":"FunctionDefinition","parameters":{"id":3082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3079,"mutability":"mutable","name":"arr","nameLocation":"1919:3:15","nodeType":"VariableDeclaration","scope":3096,"src":"1901:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3077,"name":"address","nodeType":"ElementaryTypeName","src":"1901:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3078,"nodeType":"ArrayTypeName","src":"1901:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3081,"mutability":"mutable","name":"pos","nameLocation":"1932:3:15","nodeType":"VariableDeclaration","scope":3096,"src":"1924:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3080,"name":"uint256","nodeType":"ElementaryTypeName","src":"1924:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1900:36:15"},"returnParameters":{"id":3086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3085,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3096,"src":"1960:31:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3547_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":3084,"nodeType":"UserDefinedTypeName","pathNode":{"id":3083,"name":"StorageSlot.AddressSlot","nameLocations":["1960:11:15","1972:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":3547,"src":"1960:23:15"},"referencedDeclaration":3547,"src":"1960:23:15","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3547_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:33:15"},"scope":3165,"src":"1879:573:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3116,"nodeType":"Block","src":"2768:459:15","statements":[{"assignments":[3109],"declarations":[{"constant":false,"id":3109,"mutability":"mutable","name":"slot","nameLocation":"2786:4:15","nodeType":"VariableDeclaration","scope":3116,"src":"2778:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3108,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2778:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3110,"nodeType":"VariableDeclarationStatement","src":"2778:12:15"},{"AST":{"nodeType":"YulBlock","src":"3091:92:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3112:1:15","type":"","value":"0"},{"name":"arr.slot","nodeType":"YulIdentifier","src":"3115:8:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3105:6:15"},"nodeType":"YulFunctionCall","src":"3105:19:15"},"nodeType":"YulExpressionStatement","src":"3105:19:15"},{"nodeType":"YulAssignment","src":"3137:36:15","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3159:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3162:4:15","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3149:9:15"},"nodeType":"YulFunctionCall","src":"3149:18:15"},{"name":"pos","nodeType":"YulIdentifier","src":"3169:3:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3145:3:15"},"nodeType":"YulFunctionCall","src":"3145:28:15"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"3137:4:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3100,"isOffset":false,"isSlot":true,"src":"3115:8:15","suffix":"slot","valueSize":1},{"declaration":3102,"isOffset":false,"isSlot":false,"src":"3169:3:15","valueSize":1},{"declaration":3109,"isOffset":false,"isSlot":false,"src":"3137:4:15","valueSize":1}],"id":3111,"nodeType":"InlineAssembly","src":"3082:101:15"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3112,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3109,"src":"3199:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3204:14:15","memberName":"getBytes32Slot","nodeType":"MemberAccess","referencedDeclaration":3595,"src":"3199:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Bytes32Slot_$3553_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Bytes32Slot storage pointer)"}},"id":3114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3199:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3553_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot storage pointer"}},"functionReturnParameters":3107,"id":3115,"nodeType":"Return","src":"3192:28:15"}]},"documentation":{"id":3097,"nodeType":"StructuredDocumentation","src":"2458:191:15","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3117,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"2663:12:15","nodeType":"FunctionDefinition","parameters":{"id":3103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3100,"mutability":"mutable","name":"arr","nameLocation":"2694:3:15","nodeType":"VariableDeclaration","scope":3117,"src":"2676:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3098,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2676:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3099,"nodeType":"ArrayTypeName","src":"2676:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3102,"mutability":"mutable","name":"pos","nameLocation":"2707:3:15","nodeType":"VariableDeclaration","scope":3117,"src":"2699:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3101,"name":"uint256","nodeType":"ElementaryTypeName","src":"2699:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2675:36:15"},"returnParameters":{"id":3107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3106,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3117,"src":"2735:31:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3553_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":3105,"nodeType":"UserDefinedTypeName","pathNode":{"id":3104,"name":"StorageSlot.Bytes32Slot","nameLocations":["2735:11:15","2747:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":3553,"src":"2735:23:15"},"referencedDeclaration":3553,"src":"2735:23:15","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3553_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2734:33:15"},"scope":3165,"src":"2654:573:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3137,"nodeType":"Block","src":"3543:459:15","statements":[{"assignments":[3130],"declarations":[{"constant":false,"id":3130,"mutability":"mutable","name":"slot","nameLocation":"3561:4:15","nodeType":"VariableDeclaration","scope":3137,"src":"3553:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3129,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3553:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3131,"nodeType":"VariableDeclarationStatement","src":"3553:12:15"},{"AST":{"nodeType":"YulBlock","src":"3866:92:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3887:1:15","type":"","value":"0"},{"name":"arr.slot","nodeType":"YulIdentifier","src":"3890:8:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3880:6:15"},"nodeType":"YulFunctionCall","src":"3880:19:15"},"nodeType":"YulExpressionStatement","src":"3880:19:15"},{"nodeType":"YulAssignment","src":"3912:36:15","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3934:1:15","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3937:4:15","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3924:9:15"},"nodeType":"YulFunctionCall","src":"3924:18:15"},{"name":"pos","nodeType":"YulIdentifier","src":"3944:3:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3920:3:15"},"nodeType":"YulFunctionCall","src":"3920:28:15"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"3912:4:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3121,"isOffset":false,"isSlot":true,"src":"3890:8:15","suffix":"slot","valueSize":1},{"declaration":3123,"isOffset":false,"isSlot":false,"src":"3944:3:15","valueSize":1},{"declaration":3130,"isOffset":false,"isSlot":false,"src":"3912:4:15","valueSize":1}],"id":3132,"nodeType":"InlineAssembly","src":"3857:101:15"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3133,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3130,"src":"3974:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3979:14:15","memberName":"getUint256Slot","nodeType":"MemberAccess","referencedDeclaration":3606,"src":"3974:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Uint256Slot_$3556_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":3135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3974:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3556_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"functionReturnParameters":3128,"id":3136,"nodeType":"Return","src":"3967:28:15"}]},"documentation":{"id":3118,"nodeType":"StructuredDocumentation","src":"3233:191:15","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3138,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"3438:12:15","nodeType":"FunctionDefinition","parameters":{"id":3124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3121,"mutability":"mutable","name":"arr","nameLocation":"3469:3:15","nodeType":"VariableDeclaration","scope":3138,"src":"3451:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3119,"name":"uint256","nodeType":"ElementaryTypeName","src":"3451:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3120,"nodeType":"ArrayTypeName","src":"3451:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3123,"mutability":"mutable","name":"pos","nameLocation":"3482:3:15","nodeType":"VariableDeclaration","scope":3138,"src":"3474:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3122,"name":"uint256","nodeType":"ElementaryTypeName","src":"3474:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3450:36:15"},"returnParameters":{"id":3128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3127,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3138,"src":"3510:31:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3556_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":3126,"nodeType":"UserDefinedTypeName","pathNode":{"id":3125,"name":"StorageSlot.Uint256Slot","nameLocations":["3510:11:15","3522:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":3556,"src":"3510:23:15"},"referencedDeclaration":3556,"src":"3510:23:15","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3556_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"3509:33:15"},"scope":3165,"src":"3429:573:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3150,"nodeType":"Block","src":"4303:98:15","statements":[{"AST":{"nodeType":"YulBlock","src":"4322:73:15","statements":[{"nodeType":"YulAssignment","src":"4336:49:15","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nodeType":"YulIdentifier","src":"4357:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"4362:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4353:3:15"},"nodeType":"YulFunctionCall","src":"4353:14:15"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4373:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"4378:4:15","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4369:3:15"},"nodeType":"YulFunctionCall","src":"4369:14:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4349:3:15"},"nodeType":"YulFunctionCall","src":"4349:35:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4343:5:15"},"nodeType":"YulFunctionCall","src":"4343:42:15"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"4336:3:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3142,"isOffset":false,"isSlot":false,"src":"4357:3:15","valueSize":1},{"declaration":3144,"isOffset":false,"isSlot":false,"src":"4373:3:15","valueSize":1},{"declaration":3147,"isOffset":false,"isSlot":false,"src":"4336:3:15","valueSize":1}],"id":3149,"nodeType":"InlineAssembly","src":"4313:82:15"}]},"documentation":{"id":3139,"nodeType":"StructuredDocumentation","src":"4008:191:15","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3151,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"4213:18:15","nodeType":"FunctionDefinition","parameters":{"id":3145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3142,"mutability":"mutable","name":"arr","nameLocation":"4249:3:15","nodeType":"VariableDeclaration","scope":3151,"src":"4232:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3140,"name":"uint256","nodeType":"ElementaryTypeName","src":"4232:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3141,"nodeType":"ArrayTypeName","src":"4232:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3144,"mutability":"mutable","name":"pos","nameLocation":"4262:3:15","nodeType":"VariableDeclaration","scope":3151,"src":"4254:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3143,"name":"uint256","nodeType":"ElementaryTypeName","src":"4254:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4231:35:15"},"returnParameters":{"id":3148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3147,"mutability":"mutable","name":"res","nameLocation":"4298:3:15","nodeType":"VariableDeclaration","scope":3151,"src":"4290:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3146,"name":"uint256","nodeType":"ElementaryTypeName","src":"4290:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4289:13:15"},"scope":3165,"src":"4204:197:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3163,"nodeType":"Block","src":"4702:98:15","statements":[{"AST":{"nodeType":"YulBlock","src":"4721:73:15","statements":[{"nodeType":"YulAssignment","src":"4735:49:15","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nodeType":"YulIdentifier","src":"4756:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"4761:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4752:3:15"},"nodeType":"YulFunctionCall","src":"4752:14:15"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4772:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"4777:4:15","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4768:3:15"},"nodeType":"YulFunctionCall","src":"4768:14:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4748:3:15"},"nodeType":"YulFunctionCall","src":"4748:35:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4742:5:15"},"nodeType":"YulFunctionCall","src":"4742:42:15"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"4735:3:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3155,"isOffset":false,"isSlot":false,"src":"4756:3:15","valueSize":1},{"declaration":3157,"isOffset":false,"isSlot":false,"src":"4772:3:15","valueSize":1},{"declaration":3160,"isOffset":false,"isSlot":false,"src":"4735:3:15","valueSize":1}],"id":3162,"nodeType":"InlineAssembly","src":"4712:82:15"}]},"documentation":{"id":3152,"nodeType":"StructuredDocumentation","src":"4407:191:15","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3164,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"4612:18:15","nodeType":"FunctionDefinition","parameters":{"id":3158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3155,"mutability":"mutable","name":"arr","nameLocation":"4648:3:15","nodeType":"VariableDeclaration","scope":3164,"src":"4631:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3153,"name":"address","nodeType":"ElementaryTypeName","src":"4631:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3154,"nodeType":"ArrayTypeName","src":"4631:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3157,"mutability":"mutable","name":"pos","nameLocation":"4661:3:15","nodeType":"VariableDeclaration","scope":3164,"src":"4653:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3156,"name":"uint256","nodeType":"ElementaryTypeName","src":"4653:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4630:35:15"},"returnParameters":{"id":3161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3160,"mutability":"mutable","name":"res","nameLocation":"4697:3:15","nodeType":"VariableDeclaration","scope":3164,"src":"4689:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3159,"name":"address","nodeType":"ElementaryTypeName","src":"4689:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4688:13:15"},"scope":3165,"src":"4603:197:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3166,"src":"276:4526:15","usedErrors":[],"usedEvents":[]}],"src":"100:4703:15"},"id":15},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[3187]},"id":3188,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3167,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:16"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":3168,"nodeType":"StructuredDocumentation","src":"127:496:16","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":3187,"linearizedBaseContracts":[3187],"name":"Context","nameLocation":"642:7:16","nodeType":"ContractDefinition","nodes":[{"body":{"id":3176,"nodeType":"Block","src":"718:34:16","statements":[{"expression":{"expression":{"id":3173,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:16","memberName":"sender","nodeType":"MemberAccess","src":"735:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3172,"id":3175,"nodeType":"Return","src":"728:17:16"}]},"id":3177,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:16","nodeType":"FunctionDefinition","parameters":{"id":3169,"nodeType":"ParameterList","parameters":[],"src":"675:2:16"},"returnParameters":{"id":3172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3171,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3177,"src":"709:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3170,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:16"},"scope":3187,"src":"656:96:16","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3185,"nodeType":"Block","src":"825:32:16","statements":[{"expression":{"expression":{"id":3182,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:16","memberName":"data","nodeType":"MemberAccess","src":"842:8:16","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":3181,"id":3184,"nodeType":"Return","src":"835:15:16"}]},"id":3186,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:16","nodeType":"FunctionDefinition","parameters":{"id":3178,"nodeType":"ParameterList","parameters":[],"src":"775:2:16"},"returnParameters":{"id":3181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3180,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3186,"src":"809:14:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3179,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:16"},"scope":3187,"src":"758:99:16","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":3188,"src":"624:235:16","usedErrors":[],"usedEvents":[]}],"src":"101:759:16"},"id":16},"@openzeppelin/contracts/utils/Nonces.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","exportedSymbols":{"Nonces":[3255]},"id":3256,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3189,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:17"},{"abstract":true,"baseContracts":[],"canonicalName":"Nonces","contractDependencies":[],"contractKind":"contract","documentation":{"id":3190,"nodeType":"StructuredDocumentation","src":"125:83:17","text":" @dev Provides tracking nonces for addresses. Nonces will only increment."},"fullyImplemented":true,"id":3255,"linearizedBaseContracts":[3255],"name":"Nonces","nameLocation":"227:6:17","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3191,"nodeType":"StructuredDocumentation","src":"240:90:17","text":" @dev The nonce used for an `account` is not the expected current nonce."},"errorSelector":"752d88c0","id":3197,"name":"InvalidAccountNonce","nameLocation":"341:19:17","nodeType":"ErrorDefinition","parameters":{"id":3196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3193,"mutability":"mutable","name":"account","nameLocation":"369:7:17","nodeType":"VariableDeclaration","scope":3197,"src":"361:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3192,"name":"address","nodeType":"ElementaryTypeName","src":"361:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3195,"mutability":"mutable","name":"currentNonce","nameLocation":"386:12:17","nodeType":"VariableDeclaration","scope":3197,"src":"378:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3194,"name":"uint256","nodeType":"ElementaryTypeName","src":"378:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"360:39:17"},"src":"335:65:17"},{"constant":false,"id":3201,"mutability":"mutable","name":"_nonces","nameLocation":"450:7:17","nodeType":"VariableDeclaration","scope":3255,"src":"406:51:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":3200,"keyName":"account","keyNameLocation":"422:7:17","keyType":{"id":3198,"name":"address","nodeType":"ElementaryTypeName","src":"414:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"406:35:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3199,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"body":{"id":3213,"nodeType":"Block","src":"607:38:17","statements":[{"expression":{"baseExpression":{"id":3209,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"624:7:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3211,"indexExpression":{"id":3210,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3204,"src":"632:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"624:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3208,"id":3212,"nodeType":"Return","src":"617:21:17"}]},"documentation":{"id":3202,"nodeType":"StructuredDocumentation","src":"464:69:17","text":" @dev Returns the next unused nonce for an address."},"functionSelector":"7ecebe00","id":3214,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"547:6:17","nodeType":"FunctionDefinition","parameters":{"id":3205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3204,"mutability":"mutable","name":"owner","nameLocation":"562:5:17","nodeType":"VariableDeclaration","scope":3214,"src":"554:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3203,"name":"address","nodeType":"ElementaryTypeName","src":"554:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"553:15:17"},"returnParameters":{"id":3208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3207,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3214,"src":"598:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3206,"name":"uint256","nodeType":"ElementaryTypeName","src":"598:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"597:9:17"},"scope":3255,"src":"538:107:17","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3228,"nodeType":"Block","src":"828:326:17","statements":[{"id":3227,"nodeType":"UncheckedBlock","src":"1031:117:17","statements":[{"expression":{"id":3225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1121:16:17","subExpression":{"baseExpression":{"id":3222,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"1121:7:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3224,"indexExpression":{"id":3223,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3217,"src":"1129:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1121:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3221,"id":3226,"nodeType":"Return","src":"1114:23:17"}]}]},"documentation":{"id":3215,"nodeType":"StructuredDocumentation","src":"651:103:17","text":" @dev Consumes a nonce.\n Returns the current value and increments nonce."},"id":3229,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"768:9:17","nodeType":"FunctionDefinition","parameters":{"id":3218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3217,"mutability":"mutable","name":"owner","nameLocation":"786:5:17","nodeType":"VariableDeclaration","scope":3229,"src":"778:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3216,"name":"address","nodeType":"ElementaryTypeName","src":"778:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"777:15:17"},"returnParameters":{"id":3221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3220,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3229,"src":"819:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3219,"name":"uint256","nodeType":"ElementaryTypeName","src":"819:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"818:9:17"},"scope":3255,"src":"759:395:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3253,"nodeType":"Block","src":"1338:149:17","statements":[{"assignments":[3238],"declarations":[{"constant":false,"id":3238,"mutability":"mutable","name":"current","nameLocation":"1356:7:17","nodeType":"VariableDeclaration","scope":3253,"src":"1348:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3237,"name":"uint256","nodeType":"ElementaryTypeName","src":"1348:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3242,"initialValue":{"arguments":[{"id":3240,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3232,"src":"1376:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3239,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3229,"src":"1366:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":3241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1366:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1348:34:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3243,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3234,"src":"1396:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3244,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"1405:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1396:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3252,"nodeType":"IfStatement","src":"1392:89:17","trueBody":{"id":3251,"nodeType":"Block","src":"1414:67:17","statements":[{"errorCall":{"arguments":[{"id":3247,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3232,"src":"1455:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3248,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"1462:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3246,"name":"InvalidAccountNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"1435:19:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":3249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1435:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3250,"nodeType":"RevertStatement","src":"1428:42:17"}]}}]},"documentation":{"id":3230,"nodeType":"StructuredDocumentation","src":"1160:100:17","text":" @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`."},"id":3254,"implemented":true,"kind":"function","modifiers":[],"name":"_useCheckedNonce","nameLocation":"1274:16:17","nodeType":"FunctionDefinition","parameters":{"id":3235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3232,"mutability":"mutable","name":"owner","nameLocation":"1299:5:17","nodeType":"VariableDeclaration","scope":3254,"src":"1291:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3231,"name":"address","nodeType":"ElementaryTypeName","src":"1291:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3234,"mutability":"mutable","name":"nonce","nameLocation":"1314:5:17","nodeType":"VariableDeclaration","scope":3254,"src":"1306:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3233,"name":"uint256","nodeType":"ElementaryTypeName","src":"1306:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1290:30:17"},"returnParameters":{"id":3236,"nodeType":"ParameterList","parameters":[],"src":"1338:0:17"},"scope":3255,"src":"1265:222:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":3256,"src":"209:1280:17","usedErrors":[3197],"usedEvents":[]}],"src":"99:1391:17"},"id":17},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[3324]},"id":3325,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3257,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:18"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":3258,"nodeType":"StructuredDocumentation","src":"135:750:18","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":3324,"linearizedBaseContracts":[3324],"name":"ReentrancyGuard","nameLocation":"904:15:18","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":3261,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1699:11:18","nodeType":"VariableDeclaration","scope":3324,"src":"1674:40:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3259,"name":"uint256","nodeType":"ElementaryTypeName","src":"1674:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":3260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1713:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":3264,"mutability":"constant","name":"ENTERED","nameLocation":"1745:7:18","nodeType":"VariableDeclaration","scope":3324,"src":"1720:36:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3262,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":3263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1755:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":3266,"mutability":"mutable","name":"_status","nameLocation":"1779:7:18","nodeType":"VariableDeclaration","scope":3324,"src":"1763:23:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3265,"name":"uint256","nodeType":"ElementaryTypeName","src":"1763:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":3267,"nodeType":"StructuredDocumentation","src":"1793:52:18","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":3269,"name":"ReentrancyGuardReentrantCall","nameLocation":"1856:28:18","nodeType":"ErrorDefinition","parameters":{"id":3268,"nodeType":"ParameterList","parameters":[],"src":"1884:2:18"},"src":"1850:37:18"},{"body":{"id":3276,"nodeType":"Block","src":"1907:38:18","statements":[{"expression":{"id":3274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3272,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"1917:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3273,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3261,"src":"1927:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1917:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3275,"nodeType":"ExpressionStatement","src":"1917:21:18"}]},"id":3277,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3270,"nodeType":"ParameterList","parameters":[],"src":"1904:2:18"},"returnParameters":{"id":3271,"nodeType":"ParameterList","parameters":[],"src":"1907:0:18"},"scope":3324,"src":"1893:52:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3287,"nodeType":"Block","src":"2346:79:18","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3280,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3304,"src":"2356:19:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2356:21:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3282,"nodeType":"ExpressionStatement","src":"2356:21:18"},{"id":3283,"nodeType":"PlaceholderStatement","src":"2387:1:18"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3284,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3312,"src":"2398:18:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2398:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3286,"nodeType":"ExpressionStatement","src":"2398:20:18"}]},"documentation":{"id":3278,"nodeType":"StructuredDocumentation","src":"1951:366:18","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":3288,"name":"nonReentrant","nameLocation":"2331:12:18","nodeType":"ModifierDefinition","parameters":{"id":3279,"nodeType":"ParameterList","parameters":[],"src":"2343:2:18"},"src":"2322:103:18","virtual":false,"visibility":"internal"},{"body":{"id":3303,"nodeType":"Block","src":"2470:268:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3291,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"2558:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3292,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"2569:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2558:18:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3298,"nodeType":"IfStatement","src":"2554:86:18","trueBody":{"id":3297,"nodeType":"Block","src":"2578:62:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3294,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"2599:28:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2599:30:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3296,"nodeType":"RevertStatement","src":"2592:37:18"}]}},{"expression":{"id":3301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3299,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"2714:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3300,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"2724:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2714:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3302,"nodeType":"ExpressionStatement","src":"2714:17:18"}]},"id":3304,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2440:19:18","nodeType":"FunctionDefinition","parameters":{"id":3289,"nodeType":"ParameterList","parameters":[],"src":"2459:2:18"},"returnParameters":{"id":3290,"nodeType":"ParameterList","parameters":[],"src":"2470:0:18"},"scope":3324,"src":"2431:307:18","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3311,"nodeType":"Block","src":"2782:170:18","statements":[{"expression":{"id":3309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3307,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"2924:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3308,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3261,"src":"2934:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2924:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3310,"nodeType":"ExpressionStatement","src":"2924:21:18"}]},"id":3312,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2753:18:18","nodeType":"FunctionDefinition","parameters":{"id":3305,"nodeType":"ParameterList","parameters":[],"src":"2771:2:18"},"returnParameters":{"id":3306,"nodeType":"ParameterList","parameters":[],"src":"2782:0:18"},"scope":3324,"src":"2744:208:18","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3322,"nodeType":"Block","src":"3195:42:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3318,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"3212:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3319,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"3223:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3212:18:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3317,"id":3321,"nodeType":"Return","src":"3205:25:18"}]},"documentation":{"id":3313,"nodeType":"StructuredDocumentation","src":"2958:168:18","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":3323,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3140:23:18","nodeType":"FunctionDefinition","parameters":{"id":3314,"nodeType":"ParameterList","parameters":[],"src":"3163:2:18"},"returnParameters":{"id":3317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3316,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3323,"src":"3189:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3315,"name":"bool","nodeType":"ElementaryTypeName","src":"3189:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3188:6:18"},"scope":3324,"src":"3131:106:18","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3325,"src":"886:2353:18","usedErrors":[3269],"usedEvents":[]}],"src":"109:3131:18"},"id":18},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[3330],"ShortStrings":[3541],"StorageSlot":[3651]},"id":3542,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3326,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:19"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":3328,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3542,"sourceUnit":3652,"src":"132:46:19","symbolAliases":[{"foreign":{"id":3327,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3651,"src":"140:11:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"ShortString","id":3330,"name":"ShortString","nameLocation":"353:11:19","nodeType":"UserDefinedValueTypeDefinition","src":"348:28:19","underlyingType":{"id":3329,"name":"bytes32","nodeType":"ElementaryTypeName","src":"368:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":3331,"nodeType":"StructuredDocumentation","src":"378:876:19","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":3541,"linearizedBaseContracts":[3541],"name":"ShortStrings","nameLocation":"1263:12:19","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":3334,"mutability":"constant","name":"FALLBACK_SENTINEL","nameLocation":"1370:17:19","nodeType":"VariableDeclaration","scope":3541,"src":"1345:111:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3332,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1345:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":3333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1390:66:19","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":3338,"name":"StringTooLong","nameLocation":"1469:13:19","nodeType":"ErrorDefinition","parameters":{"id":3337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3336,"mutability":"mutable","name":"str","nameLocation":"1490:3:19","nodeType":"VariableDeclaration","scope":3338,"src":"1483:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3335,"name":"string","nodeType":"ElementaryTypeName","src":"1483:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1482:12:19"},"src":"1463:32:19"},{"errorSelector":"b3512b0c","id":3340,"name":"InvalidShortString","nameLocation":"1506:18:19","nodeType":"ErrorDefinition","parameters":{"id":3339,"nodeType":"ParameterList","parameters":[],"src":"1524:2:19"},"src":"1500:27:19"},{"body":{"id":3383,"nodeType":"Block","src":"1786:208:19","statements":[{"assignments":[3350],"declarations":[{"constant":false,"id":3350,"mutability":"mutable","name":"bstr","nameLocation":"1809:4:19","nodeType":"VariableDeclaration","scope":3383,"src":"1796:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3349,"name":"bytes","nodeType":"ElementaryTypeName","src":"1796:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3355,"initialValue":{"arguments":[{"id":3353,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"1822:3:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1816:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3351,"name":"bytes","nodeType":"ElementaryTypeName","src":"1816:5:19","typeDescriptions":{}}},"id":3354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1816:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1796:30:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3356,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"1840:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1845:6:19","memberName":"length","nodeType":"MemberAccess","src":"1840:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":3358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1854:2:19","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1840:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3365,"nodeType":"IfStatement","src":"1836:72:19","trueBody":{"id":3364,"nodeType":"Block","src":"1858:50:19","statements":[{"errorCall":{"arguments":[{"id":3361,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"1893:3:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3360,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3338,"src":"1879:13:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1879:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3363,"nodeType":"RevertStatement","src":"1872:25:19"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3374,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"1965:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1957:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3372,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1957:7:19","typeDescriptions":{}}},"id":3375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1957:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1949:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3370,"name":"uint256","nodeType":"ElementaryTypeName","src":"1949:7:19","typeDescriptions":{}}},"id":3376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1949:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":3377,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"1974:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1979:6:19","memberName":"length","nodeType":"MemberAccess","src":"1974:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1949:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1941:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3368,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1941:7:19","typeDescriptions":{}}},"id":3380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1941:45:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3366,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3330,"src":"1924:11:19","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$3330_$","typeString":"type(ShortString)"}},"id":3367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1936:4:19","memberName":"wrap","nodeType":"MemberAccess","src":"1924:16:19","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$3330_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":3381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1924:63:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3330","typeString":"ShortString"}},"functionReturnParameters":3348,"id":3382,"nodeType":"Return","src":"1917:70:19"}]},"documentation":{"id":3341,"nodeType":"StructuredDocumentation","src":"1533:170:19","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":3384,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1717:13:19","nodeType":"FunctionDefinition","parameters":{"id":3344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3343,"mutability":"mutable","name":"str","nameLocation":"1745:3:19","nodeType":"VariableDeclaration","scope":3384,"src":"1731:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3342,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1730:19:19"},"returnParameters":{"id":3348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3347,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3384,"src":"1773:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3330","typeString":"ShortString"},"typeName":{"id":3346,"nodeType":"UserDefinedTypeName","pathNode":{"id":3345,"name":"ShortString","nameLocations":["1773:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":3330,"src":"1773:11:19"},"referencedDeclaration":3330,"src":"1773:11:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3330","typeString":"ShortString"}},"visibility":"internal"}],"src":"1772:13:19"},"scope":3541,"src":"1708:286:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3409,"nodeType":"Block","src":"2152:331:19","statements":[{"assignments":[3394],"declarations":[{"constant":false,"id":3394,"mutability":"mutable","name":"len","nameLocation":"2170:3:19","nodeType":"VariableDeclaration","scope":3409,"src":"2162:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3393,"name":"uint256","nodeType":"ElementaryTypeName","src":"2162:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3398,"initialValue":{"arguments":[{"id":3396,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3388,"src":"2187:4:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3330","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3330","typeString":"ShortString"}],"id":3395,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"2176:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$3330_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":3397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2162:30:19"},{"assignments":[3400],"declarations":[{"constant":false,"id":3400,"mutability":"mutable","name":"str","nameLocation":"2294:3:19","nodeType":"VariableDeclaration","scope":3409,"src":"2280:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3399,"name":"string","nodeType":"ElementaryTypeName","src":"2280:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3405,"initialValue":{"arguments":[{"hexValue":"3332","id":3403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2311:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":3402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2300:10:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":3401,"name":"string","nodeType":"ElementaryTypeName","src":"2304:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":3404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2280:34:19"},{"AST":{"nodeType":"YulBlock","src":"2376:81:19","statements":[{"expression":{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2397:3:19"},{"name":"len","nodeType":"YulIdentifier","src":"2402:3:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2390:6:19"},"nodeType":"YulFunctionCall","src":"2390:16:19"},"nodeType":"YulExpressionStatement","src":"2390:16:19"},{"expression":{"arguments":[{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2430:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"2435:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2426:3:19"},"nodeType":"YulFunctionCall","src":"2426:14:19"},{"name":"sstr","nodeType":"YulIdentifier","src":"2442:4:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2419:6:19"},"nodeType":"YulFunctionCall","src":"2419:28:19"},"nodeType":"YulExpressionStatement","src":"2419:28:19"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3394,"isOffset":false,"isSlot":false,"src":"2402:3:19","valueSize":1},{"declaration":3388,"isOffset":false,"isSlot":false,"src":"2442:4:19","valueSize":1},{"declaration":3400,"isOffset":false,"isSlot":false,"src":"2397:3:19","valueSize":1},{"declaration":3400,"isOffset":false,"isSlot":false,"src":"2430:3:19","valueSize":1}],"id":3406,"nodeType":"InlineAssembly","src":"2367:90:19"},{"expression":{"id":3407,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3400,"src":"2473:3:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3392,"id":3408,"nodeType":"Return","src":"2466:10:19"}]},"documentation":{"id":3385,"nodeType":"StructuredDocumentation","src":"2000:73:19","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":3410,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2087:8:19","nodeType":"FunctionDefinition","parameters":{"id":3389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3388,"mutability":"mutable","name":"sstr","nameLocation":"2108:4:19","nodeType":"VariableDeclaration","scope":3410,"src":"2096:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3330","typeString":"ShortString"},"typeName":{"id":3387,"nodeType":"UserDefinedTypeName","pathNode":{"id":3386,"name":"ShortString","nameLocations":["2096:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":3330,"src":"2096:11:19"},"referencedDeclaration":3330,"src":"2096:11:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3330","typeString":"ShortString"}},"visibility":"internal"}],"src":"2095:18:19"},"returnParameters":{"id":3392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3410,"src":"2137:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3390,"name":"string","nodeType":"ElementaryTypeName","src":"2137:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2136:15:19"},"scope":3541,"src":"2078:405:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3441,"nodeType":"Block","src":"2625:175:19","statements":[{"assignments":[3420],"declarations":[{"constant":false,"id":3420,"mutability":"mutable","name":"result","nameLocation":"2643:6:19","nodeType":"VariableDeclaration","scope":3441,"src":"2635:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3419,"name":"uint256","nodeType":"ElementaryTypeName","src":"2635:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3430,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3425,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3414,"src":"2679:4:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3330","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3330","typeString":"ShortString"}],"expression":{"id":3423,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3330,"src":"2660:11:19","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$3330_$","typeString":"type(ShortString)"}},"id":3424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2672:6:19","memberName":"unwrap","nodeType":"MemberAccess","src":"2660:18:19","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$3330_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":3426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2660:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2652:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3421,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:19","typeDescriptions":{}}},"id":3427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2652:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":3428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2688:4:19","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2652:40:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2635:57:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3431,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"2706:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":3432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2715:2:19","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2706:11:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3438,"nodeType":"IfStatement","src":"2702:69:19","trueBody":{"id":3437,"nodeType":"Block","src":"2719:52:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3434,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3340,"src":"2740:18:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2740:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3436,"nodeType":"RevertStatement","src":"2733:27:19"}]}},{"expression":{"id":3439,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"2787:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3418,"id":3440,"nodeType":"Return","src":"2780:13:19"}]},"documentation":{"id":3411,"nodeType":"StructuredDocumentation","src":"2489:61:19","text":" @dev Return the length of a `ShortString`."},"id":3442,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2564:10:19","nodeType":"FunctionDefinition","parameters":{"id":3415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3414,"mutability":"mutable","name":"sstr","nameLocation":"2587:4:19","nodeType":"VariableDeclaration","scope":3442,"src":"2575:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3330","typeString":"ShortString"},"typeName":{"id":3413,"nodeType":"UserDefinedTypeName","pathNode":{"id":3412,"name":"ShortString","nameLocations":["2575:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":3330,"src":"2575:11:19"},"referencedDeclaration":3330,"src":"2575:11:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3330","typeString":"ShortString"}},"visibility":"internal"}],"src":"2574:18:19"},"returnParameters":{"id":3418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3417,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3442,"src":"2616:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3416,"name":"uint256","nodeType":"ElementaryTypeName","src":"2616:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2615:9:19"},"scope":3541,"src":"2555:245:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3481,"nodeType":"Block","src":"3023:231:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3455,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3445,"src":"3043:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3454,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3037:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3453,"name":"bytes","nodeType":"ElementaryTypeName","src":"3037:5:19","typeDescriptions":{}}},"id":3456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3037:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3050:6:19","memberName":"length","nodeType":"MemberAccess","src":"3037:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":3458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3059:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3037:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3479,"nodeType":"Block","src":"3121:127:19","statements":[{"expression":{"id":3472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":3468,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3447,"src":"3161:5:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":3465,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3651,"src":"3135:11:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$3651_$","typeString":"type(library StorageSlot)"}},"id":3467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3147:13:19","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":3628,"src":"3135:25:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$3559_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":3469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3135:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3559_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":3470,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3168:5:19","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3558,"src":"3135:38:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3471,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3445,"src":"3176:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3135:46:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":3473,"nodeType":"ExpressionStatement","src":"3135:46:19"},{"expression":{"arguments":[{"id":3476,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"3219:17:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3474,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3330,"src":"3202:11:19","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$3330_$","typeString":"type(ShortString)"}},"id":3475,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3214:4:19","memberName":"wrap","nodeType":"MemberAccess","src":"3202:16:19","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$3330_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":3477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3202:35:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3330","typeString":"ShortString"}},"functionReturnParameters":3452,"id":3478,"nodeType":"Return","src":"3195:42:19"}]},"id":3480,"nodeType":"IfStatement","src":"3033:215:19","trueBody":{"id":3464,"nodeType":"Block","src":"3063:52:19","statements":[{"expression":{"arguments":[{"id":3461,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3445,"src":"3098:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3460,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3384,"src":"3084:13:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$3330_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":3462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3084:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3330","typeString":"ShortString"}},"functionReturnParameters":3452,"id":3463,"nodeType":"Return","src":"3077:27:19"}]}}]},"documentation":{"id":3443,"nodeType":"StructuredDocumentation","src":"2806:103:19","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":3482,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2923:25:19","nodeType":"FunctionDefinition","parameters":{"id":3448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3445,"mutability":"mutable","name":"value","nameLocation":"2963:5:19","nodeType":"VariableDeclaration","scope":3482,"src":"2949:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3444,"name":"string","nodeType":"ElementaryTypeName","src":"2949:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3447,"mutability":"mutable","name":"store","nameLocation":"2985:5:19","nodeType":"VariableDeclaration","scope":3482,"src":"2970:20:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3446,"name":"string","nodeType":"ElementaryTypeName","src":"2970:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2948:43:19"},"returnParameters":{"id":3452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3451,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3482,"src":"3010:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3330","typeString":"ShortString"},"typeName":{"id":3450,"nodeType":"UserDefinedTypeName","pathNode":{"id":3449,"name":"ShortString","nameLocations":["3010:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":3330,"src":"3010:11:19"},"referencedDeclaration":3330,"src":"3010:11:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3330","typeString":"ShortString"}},"visibility":"internal"}],"src":"3009:13:19"},"scope":3541,"src":"2914:340:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3508,"nodeType":"Block","src":"3494:158:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"3527:5:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3330","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3330","typeString":"ShortString"}],"expression":{"id":3493,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3330,"src":"3508:11:19","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$3330_$","typeString":"type(ShortString)"}},"id":3494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3520:6:19","memberName":"unwrap","nodeType":"MemberAccess","src":"3508:18:19","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$3330_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":3496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3508:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3497,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"3537:17:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3508:46:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3506,"nodeType":"Block","src":"3609:37:19","statements":[{"expression":{"id":3504,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3488,"src":"3630:5:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":3492,"id":3505,"nodeType":"Return","src":"3623:12:19"}]},"id":3507,"nodeType":"IfStatement","src":"3504:142:19","trueBody":{"id":3503,"nodeType":"Block","src":"3556:47:19","statements":[{"expression":{"arguments":[{"id":3500,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"3586:5:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3330","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3330","typeString":"ShortString"}],"id":3499,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3410,"src":"3577:8:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$3330_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":3501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3577:15:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3492,"id":3502,"nodeType":"Return","src":"3570:22:19"}]}}]},"documentation":{"id":3483,"nodeType":"StructuredDocumentation","src":"3260:120:19","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."},"id":3509,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3394:20:19","nodeType":"FunctionDefinition","parameters":{"id":3489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3486,"mutability":"mutable","name":"value","nameLocation":"3427:5:19","nodeType":"VariableDeclaration","scope":3509,"src":"3415:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3330","typeString":"ShortString"},"typeName":{"id":3485,"nodeType":"UserDefinedTypeName","pathNode":{"id":3484,"name":"ShortString","nameLocations":["3415:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":3330,"src":"3415:11:19"},"referencedDeclaration":3330,"src":"3415:11:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3330","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":3488,"mutability":"mutable","name":"store","nameLocation":"3449:5:19","nodeType":"VariableDeclaration","scope":3509,"src":"3434:20:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3487,"name":"string","nodeType":"ElementaryTypeName","src":"3434:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3414:41:19"},"returnParameters":{"id":3492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3491,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3509,"src":"3479:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3490,"name":"string","nodeType":"ElementaryTypeName","src":"3479:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3478:15:19"},"scope":3541,"src":"3385:267:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3539,"nodeType":"Block","src":"4132:174:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3522,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3513,"src":"4165:5:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3330","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3330","typeString":"ShortString"}],"expression":{"id":3520,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3330,"src":"4146:11:19","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$3330_$","typeString":"type(ShortString)"}},"id":3521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4158:6:19","memberName":"unwrap","nodeType":"MemberAccess","src":"4146:18:19","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$3330_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":3523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4146:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3524,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"4175:17:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4146:46:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3537,"nodeType":"Block","src":"4249:51:19","statements":[{"expression":{"expression":{"arguments":[{"id":3533,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3515,"src":"4276:5:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":3532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4270:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3531,"name":"bytes","nodeType":"ElementaryTypeName","src":"4270:5:19","typeDescriptions":{}}},"id":3534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4270:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":3535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4283:6:19","memberName":"length","nodeType":"MemberAccess","src":"4270:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3519,"id":3536,"nodeType":"Return","src":"4263:26:19"}]},"id":3538,"nodeType":"IfStatement","src":"4142:158:19","trueBody":{"id":3530,"nodeType":"Block","src":"4194:49:19","statements":[{"expression":{"arguments":[{"id":3527,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3513,"src":"4226:5:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3330","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3330","typeString":"ShortString"}],"id":3526,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"4215:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$3330_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":3528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4215:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3519,"id":3529,"nodeType":"Return","src":"4208:24:19"}]}}]},"documentation":{"id":3510,"nodeType":"StructuredDocumentation","src":"3658:364:19","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":3540,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4036:22:19","nodeType":"FunctionDefinition","parameters":{"id":3516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3513,"mutability":"mutable","name":"value","nameLocation":"4071:5:19","nodeType":"VariableDeclaration","scope":3540,"src":"4059:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3330","typeString":"ShortString"},"typeName":{"id":3512,"nodeType":"UserDefinedTypeName","pathNode":{"id":3511,"name":"ShortString","nameLocations":["4059:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":3330,"src":"4059:11:19"},"referencedDeclaration":3330,"src":"4059:11:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3330","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":3515,"mutability":"mutable","name":"store","nameLocation":"4093:5:19","nodeType":"VariableDeclaration","scope":3540,"src":"4078:20:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3514,"name":"string","nodeType":"ElementaryTypeName","src":"4078:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4058:41:19"},"returnParameters":{"id":3519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3518,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3540,"src":"4123:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3517,"name":"uint256","nodeType":"ElementaryTypeName","src":"4123:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4122:9:19"},"scope":3541,"src":"4027:279:19","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3542,"src":"1255:3053:19","usedErrors":[3338,3340],"usedEvents":[]}],"src":"106:4203:19"},"id":19},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[3651]},"id":3652,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3543,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":3544,"nodeType":"StructuredDocumentation","src":"219:1025:20","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"},"fullyImplemented":true,"id":3651,"linearizedBaseContracts":[3651],"name":"StorageSlot","nameLocation":"1253:11:20","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":3547,"members":[{"constant":false,"id":3546,"mutability":"mutable","name":"value","nameLocation":"1308:5:20","nodeType":"VariableDeclaration","scope":3547,"src":"1300:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3545,"name":"address","nodeType":"ElementaryTypeName","src":"1300:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1278:11:20","nodeType":"StructDefinition","scope":3651,"src":"1271:49:20","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":3550,"members":[{"constant":false,"id":3549,"mutability":"mutable","name":"value","nameLocation":"1360:5:20","nodeType":"VariableDeclaration","scope":3550,"src":"1355:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3548,"name":"bool","nodeType":"ElementaryTypeName","src":"1355:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1333:11:20","nodeType":"StructDefinition","scope":3651,"src":"1326:46:20","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":3553,"members":[{"constant":false,"id":3552,"mutability":"mutable","name":"value","nameLocation":"1415:5:20","nodeType":"VariableDeclaration","scope":3553,"src":"1407:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3551,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1407:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1385:11:20","nodeType":"StructDefinition","scope":3651,"src":"1378:49:20","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":3556,"members":[{"constant":false,"id":3555,"mutability":"mutable","name":"value","nameLocation":"1470:5:20","nodeType":"VariableDeclaration","scope":3556,"src":"1462:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3554,"name":"uint256","nodeType":"ElementaryTypeName","src":"1462:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1440:11:20","nodeType":"StructDefinition","scope":3651,"src":"1433:49:20","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":3559,"members":[{"constant":false,"id":3558,"mutability":"mutable","name":"value","nameLocation":"1523:5:20","nodeType":"VariableDeclaration","scope":3559,"src":"1516:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3557,"name":"string","nodeType":"ElementaryTypeName","src":"1516:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1495:10:20","nodeType":"StructDefinition","scope":3651,"src":"1488:47:20","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":3562,"members":[{"constant":false,"id":3561,"mutability":"mutable","name":"value","nameLocation":"1574:5:20","nodeType":"VariableDeclaration","scope":3562,"src":"1568:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3560,"name":"bytes","nodeType":"ElementaryTypeName","src":"1568:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1548:9:20","nodeType":"StructDefinition","scope":3651,"src":"1541:45:20","visibility":"public"},{"body":{"id":3572,"nodeType":"Block","src":"1768:106:20","statements":[{"AST":{"nodeType":"YulBlock","src":"1830:38:20","statements":[{"nodeType":"YulAssignment","src":"1844:14:20","value":{"name":"slot","nodeType":"YulIdentifier","src":"1854:4:20"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"1844:6:20"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3569,"isOffset":false,"isSlot":true,"src":"1844:6:20","suffix":"slot","valueSize":1},{"declaration":3565,"isOffset":false,"isSlot":false,"src":"1854:4:20","valueSize":1}],"id":3571,"nodeType":"InlineAssembly","src":"1821:47:20"}]},"documentation":{"id":3563,"nodeType":"StructuredDocumentation","src":"1592:87:20","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":3573,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1693:14:20","nodeType":"FunctionDefinition","parameters":{"id":3566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3565,"mutability":"mutable","name":"slot","nameLocation":"1716:4:20","nodeType":"VariableDeclaration","scope":3573,"src":"1708:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3564,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1708:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1707:14:20"},"returnParameters":{"id":3570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3569,"mutability":"mutable","name":"r","nameLocation":"1765:1:20","nodeType":"VariableDeclaration","scope":3573,"src":"1745:21:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3547_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":3568,"nodeType":"UserDefinedTypeName","pathNode":{"id":3567,"name":"AddressSlot","nameLocations":["1745:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":3547,"src":"1745:11:20"},"referencedDeclaration":3547,"src":"1745:11:20","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3547_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1744:23:20"},"scope":3651,"src":"1684:190:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3583,"nodeType":"Block","src":"2056:106:20","statements":[{"AST":{"nodeType":"YulBlock","src":"2118:38:20","statements":[{"nodeType":"YulAssignment","src":"2132:14:20","value":{"name":"slot","nodeType":"YulIdentifier","src":"2142:4:20"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2132:6:20"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3580,"isOffset":false,"isSlot":true,"src":"2132:6:20","suffix":"slot","valueSize":1},{"declaration":3576,"isOffset":false,"isSlot":false,"src":"2142:4:20","valueSize":1}],"id":3582,"nodeType":"InlineAssembly","src":"2109:47:20"}]},"documentation":{"id":3574,"nodeType":"StructuredDocumentation","src":"1880:87:20","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":3584,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"1981:14:20","nodeType":"FunctionDefinition","parameters":{"id":3577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3576,"mutability":"mutable","name":"slot","nameLocation":"2004:4:20","nodeType":"VariableDeclaration","scope":3584,"src":"1996:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3575,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1996:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1995:14:20"},"returnParameters":{"id":3581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3580,"mutability":"mutable","name":"r","nameLocation":"2053:1:20","nodeType":"VariableDeclaration","scope":3584,"src":"2033:21:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$3550_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":3579,"nodeType":"UserDefinedTypeName","pathNode":{"id":3578,"name":"BooleanSlot","nameLocations":["2033:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":3550,"src":"2033:11:20"},"referencedDeclaration":3550,"src":"2033:11:20","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$3550_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2032:23:20"},"scope":3651,"src":"1972:190:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3594,"nodeType":"Block","src":"2344:106:20","statements":[{"AST":{"nodeType":"YulBlock","src":"2406:38:20","statements":[{"nodeType":"YulAssignment","src":"2420:14:20","value":{"name":"slot","nodeType":"YulIdentifier","src":"2430:4:20"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2420:6:20"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3591,"isOffset":false,"isSlot":true,"src":"2420:6:20","suffix":"slot","valueSize":1},{"declaration":3587,"isOffset":false,"isSlot":false,"src":"2430:4:20","valueSize":1}],"id":3593,"nodeType":"InlineAssembly","src":"2397:47:20"}]},"documentation":{"id":3585,"nodeType":"StructuredDocumentation","src":"2168:87:20","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":3595,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2269:14:20","nodeType":"FunctionDefinition","parameters":{"id":3588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3587,"mutability":"mutable","name":"slot","nameLocation":"2292:4:20","nodeType":"VariableDeclaration","scope":3595,"src":"2284:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3586,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2284:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2283:14:20"},"returnParameters":{"id":3592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3591,"mutability":"mutable","name":"r","nameLocation":"2341:1:20","nodeType":"VariableDeclaration","scope":3595,"src":"2321:21:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3553_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":3590,"nodeType":"UserDefinedTypeName","pathNode":{"id":3589,"name":"Bytes32Slot","nameLocations":["2321:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":3553,"src":"2321:11:20"},"referencedDeclaration":3553,"src":"2321:11:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3553_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2320:23:20"},"scope":3651,"src":"2260:190:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3605,"nodeType":"Block","src":"2632:106:20","statements":[{"AST":{"nodeType":"YulBlock","src":"2694:38:20","statements":[{"nodeType":"YulAssignment","src":"2708:14:20","value":{"name":"slot","nodeType":"YulIdentifier","src":"2718:4:20"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2708:6:20"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3602,"isOffset":false,"isSlot":true,"src":"2708:6:20","suffix":"slot","valueSize":1},{"declaration":3598,"isOffset":false,"isSlot":false,"src":"2718:4:20","valueSize":1}],"id":3604,"nodeType":"InlineAssembly","src":"2685:47:20"}]},"documentation":{"id":3596,"nodeType":"StructuredDocumentation","src":"2456:87:20","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":3606,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2557:14:20","nodeType":"FunctionDefinition","parameters":{"id":3599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3598,"mutability":"mutable","name":"slot","nameLocation":"2580:4:20","nodeType":"VariableDeclaration","scope":3606,"src":"2572:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3597,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2572:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2571:14:20"},"returnParameters":{"id":3603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3602,"mutability":"mutable","name":"r","nameLocation":"2629:1:20","nodeType":"VariableDeclaration","scope":3606,"src":"2609:21:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3556_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":3601,"nodeType":"UserDefinedTypeName","pathNode":{"id":3600,"name":"Uint256Slot","nameLocations":["2609:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":3556,"src":"2609:11:20"},"referencedDeclaration":3556,"src":"2609:11:20","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3556_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2608:23:20"},"scope":3651,"src":"2548:190:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3616,"nodeType":"Block","src":"2917:106:20","statements":[{"AST":{"nodeType":"YulBlock","src":"2979:38:20","statements":[{"nodeType":"YulAssignment","src":"2993:14:20","value":{"name":"slot","nodeType":"YulIdentifier","src":"3003:4:20"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2993:6:20"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3613,"isOffset":false,"isSlot":true,"src":"2993:6:20","suffix":"slot","valueSize":1},{"declaration":3609,"isOffset":false,"isSlot":false,"src":"3003:4:20","valueSize":1}],"id":3615,"nodeType":"InlineAssembly","src":"2970:47:20"}]},"documentation":{"id":3607,"nodeType":"StructuredDocumentation","src":"2744:86:20","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":3617,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"2844:13:20","nodeType":"FunctionDefinition","parameters":{"id":3610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3609,"mutability":"mutable","name":"slot","nameLocation":"2866:4:20","nodeType":"VariableDeclaration","scope":3617,"src":"2858:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3608,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2858:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2857:14:20"},"returnParameters":{"id":3614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3613,"mutability":"mutable","name":"r","nameLocation":"2914:1:20","nodeType":"VariableDeclaration","scope":3617,"src":"2895:20:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3559_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":3612,"nodeType":"UserDefinedTypeName","pathNode":{"id":3611,"name":"StringSlot","nameLocations":["2895:10:20"],"nodeType":"IdentifierPath","referencedDeclaration":3559,"src":"2895:10:20"},"referencedDeclaration":3559,"src":"2895:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3559_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"2894:22:20"},"scope":3651,"src":"2835:188:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3627,"nodeType":"Block","src":"3225:112:20","statements":[{"AST":{"nodeType":"YulBlock","src":"3287:44:20","statements":[{"nodeType":"YulAssignment","src":"3301:20:20","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3311:10:20"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3301:6:20"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3624,"isOffset":false,"isSlot":true,"src":"3301:6:20","suffix":"slot","valueSize":1},{"declaration":3620,"isOffset":false,"isSlot":true,"src":"3311:10:20","suffix":"slot","valueSize":1}],"id":3626,"nodeType":"InlineAssembly","src":"3278:53:20"}]},"documentation":{"id":3618,"nodeType":"StructuredDocumentation","src":"3029:101:20","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":3628,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3144:13:20","nodeType":"FunctionDefinition","parameters":{"id":3621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3620,"mutability":"mutable","name":"store","nameLocation":"3173:5:20","nodeType":"VariableDeclaration","scope":3628,"src":"3158:20:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3619,"name":"string","nodeType":"ElementaryTypeName","src":"3158:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3157:22:20"},"returnParameters":{"id":3625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3624,"mutability":"mutable","name":"r","nameLocation":"3222:1:20","nodeType":"VariableDeclaration","scope":3628,"src":"3203:20:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3559_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":3623,"nodeType":"UserDefinedTypeName","pathNode":{"id":3622,"name":"StringSlot","nameLocations":["3203:10:20"],"nodeType":"IdentifierPath","referencedDeclaration":3559,"src":"3203:10:20"},"referencedDeclaration":3559,"src":"3203:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3559_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3202:22:20"},"scope":3651,"src":"3135:202:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3638,"nodeType":"Block","src":"3513:106:20","statements":[{"AST":{"nodeType":"YulBlock","src":"3575:38:20","statements":[{"nodeType":"YulAssignment","src":"3589:14:20","value":{"name":"slot","nodeType":"YulIdentifier","src":"3599:4:20"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3589:6:20"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3635,"isOffset":false,"isSlot":true,"src":"3589:6:20","suffix":"slot","valueSize":1},{"declaration":3631,"isOffset":false,"isSlot":false,"src":"3599:4:20","valueSize":1}],"id":3637,"nodeType":"InlineAssembly","src":"3566:47:20"}]},"documentation":{"id":3629,"nodeType":"StructuredDocumentation","src":"3343:85:20","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":3639,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3442:12:20","nodeType":"FunctionDefinition","parameters":{"id":3632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3631,"mutability":"mutable","name":"slot","nameLocation":"3463:4:20","nodeType":"VariableDeclaration","scope":3639,"src":"3455:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3630,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3455:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3454:14:20"},"returnParameters":{"id":3636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3635,"mutability":"mutable","name":"r","nameLocation":"3510:1:20","nodeType":"VariableDeclaration","scope":3639,"src":"3492:19:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3562_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":3634,"nodeType":"UserDefinedTypeName","pathNode":{"id":3633,"name":"BytesSlot","nameLocations":["3492:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":3562,"src":"3492:9:20"},"referencedDeclaration":3562,"src":"3492:9:20","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3562_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3491:21:20"},"scope":3651,"src":"3433:186:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3649,"nodeType":"Block","src":"3816:112:20","statements":[{"AST":{"nodeType":"YulBlock","src":"3878:44:20","statements":[{"nodeType":"YulAssignment","src":"3892:20:20","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3902:10:20"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3892:6:20"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3646,"isOffset":false,"isSlot":true,"src":"3892:6:20","suffix":"slot","valueSize":1},{"declaration":3642,"isOffset":false,"isSlot":true,"src":"3902:10:20","suffix":"slot","valueSize":1}],"id":3648,"nodeType":"InlineAssembly","src":"3869:53:20"}]},"documentation":{"id":3640,"nodeType":"StructuredDocumentation","src":"3625:99:20","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":3650,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3738:12:20","nodeType":"FunctionDefinition","parameters":{"id":3643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3642,"mutability":"mutable","name":"store","nameLocation":"3765:5:20","nodeType":"VariableDeclaration","scope":3650,"src":"3751:19:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3641,"name":"bytes","nodeType":"ElementaryTypeName","src":"3751:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3750:21:20"},"returnParameters":{"id":3647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3646,"mutability":"mutable","name":"r","nameLocation":"3813:1:20","nodeType":"VariableDeclaration","scope":3650,"src":"3795:19:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3562_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":3645,"nodeType":"UserDefinedTypeName","pathNode":{"id":3644,"name":"BytesSlot","nameLocations":["3795:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":3562,"src":"3795:9:20"},"referencedDeclaration":3562,"src":"3795:9:20","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3562_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3794:21:20"},"scope":3651,"src":"3729:199:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3652,"src":"1245:2685:20","usedErrors":[],"usedEvents":[]}],"src":"193:3738:20"},"id":20},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[5645],"SignedMath":[5750],"Strings":[3906]},"id":3907,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3653,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:21"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":3655,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3907,"sourceUnit":5646,"src":"127:37:21","symbolAliases":[{"foreign":{"id":3654,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5645,"src":"135:4:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":3657,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3907,"sourceUnit":5751,"src":"165:49:21","symbolAliases":[{"foreign":{"id":3656,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5750,"src":"173:10:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":3658,"nodeType":"StructuredDocumentation","src":"216:34:21","text":" @dev String operations."},"fullyImplemented":true,"id":3906,"linearizedBaseContracts":[3906],"name":"Strings","nameLocation":"259:7:21","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":3661,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"298:10:21","nodeType":"VariableDeclaration","scope":3906,"src":"273:56:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":3659,"name":"bytes16","nodeType":"ElementaryTypeName","src":"273:7:21","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":3660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"311:18:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":3664,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"358:14:21","nodeType":"VariableDeclaration","scope":3906,"src":"335:42:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3662,"name":"uint8","nodeType":"ElementaryTypeName","src":"335:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":3663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"375:2:21","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":3665,"nodeType":"StructuredDocumentation","src":"384:81:21","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":3671,"name":"StringsInsufficientHexLength","nameLocation":"476:28:21","nodeType":"ErrorDefinition","parameters":{"id":3670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3667,"mutability":"mutable","name":"value","nameLocation":"513:5:21","nodeType":"VariableDeclaration","scope":3671,"src":"505:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3666,"name":"uint256","nodeType":"ElementaryTypeName","src":"505:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3669,"mutability":"mutable","name":"length","nameLocation":"528:6:21","nodeType":"VariableDeclaration","scope":3671,"src":"520:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3668,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"504:31:21"},"src":"470:66:21"},{"body":{"id":3718,"nodeType":"Block","src":"708:627:21","statements":[{"id":3717,"nodeType":"UncheckedBlock","src":"718:611:21","statements":[{"assignments":[3680],"declarations":[{"constant":false,"id":3680,"mutability":"mutable","name":"length","nameLocation":"750:6:21","nodeType":"VariableDeclaration","scope":3717,"src":"742:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3679,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3687,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3683,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3674,"src":"770:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3681,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5645,"src":"759:4:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5645_$","typeString":"type(library Math)"}},"id":3682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"764:5:21","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":5465,"src":"759:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"759:17:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"779:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"759:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"742:38:21"},{"assignments":[3689],"declarations":[{"constant":false,"id":3689,"mutability":"mutable","name":"buffer","nameLocation":"808:6:21","nodeType":"VariableDeclaration","scope":3717,"src":"794:20:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3688,"name":"string","nodeType":"ElementaryTypeName","src":"794:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3694,"initialValue":{"arguments":[{"id":3692,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3680,"src":"828:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"817:10:21","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":3690,"name":"string","nodeType":"ElementaryTypeName","src":"821:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":3693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"817:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"794:41:21"},{"assignments":[3696],"declarations":[{"constant":false,"id":3696,"mutability":"mutable","name":"ptr","nameLocation":"857:3:21","nodeType":"VariableDeclaration","scope":3717,"src":"849:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3695,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3697,"nodeType":"VariableDeclarationStatement","src":"849:11:21"},{"AST":{"nodeType":"YulBlock","src":"930:67:21","statements":[{"nodeType":"YulAssignment","src":"948:35:21","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"959:6:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"971:2:21","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"975:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"967:3:21"},"nodeType":"YulFunctionCall","src":"967:15:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"955:3:21"},"nodeType":"YulFunctionCall","src":"955:28:21"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"948:3:21"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3689,"isOffset":false,"isSlot":false,"src":"959:6:21","valueSize":1},{"declaration":3680,"isOffset":false,"isSlot":false,"src":"975:6:21","valueSize":1},{"declaration":3696,"isOffset":false,"isSlot":false,"src":"948:3:21","valueSize":1}],"id":3698,"nodeType":"InlineAssembly","src":"921:76:21"},{"body":{"id":3713,"nodeType":"Block","src":"1023:269:21","statements":[{"expression":{"id":3701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1041:5:21","subExpression":{"id":3700,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"1041:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3702,"nodeType":"ExpressionStatement","src":"1041:5:21"},{"AST":{"nodeType":"YulBlock","src":"1124:86:21","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1154:3:21"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"1175:2:21","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1164:3:21"},"nodeType":"YulFunctionCall","src":"1164:14:21"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1180:10:21"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1159:4:21"},"nodeType":"YulFunctionCall","src":"1159:32:21"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1146:7:21"},"nodeType":"YulFunctionCall","src":"1146:46:21"},"nodeType":"YulExpressionStatement","src":"1146:46:21"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3661,"isOffset":false,"isSlot":false,"src":"1180:10:21","valueSize":1},{"declaration":3696,"isOffset":false,"isSlot":false,"src":"1154:3:21","valueSize":1},{"declaration":3674,"isOffset":false,"isSlot":false,"src":"1168:5:21","valueSize":1}],"id":3703,"nodeType":"InlineAssembly","src":"1115:95:21"},{"expression":{"id":3706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3704,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3674,"src":"1227:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":3705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1236:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1227:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3707,"nodeType":"ExpressionStatement","src":"1227:11:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3708,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3674,"src":"1260:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1269:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1260:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3712,"nodeType":"IfStatement","src":"1256:21:21","trueBody":{"id":3711,"nodeType":"Break","src":"1272:5:21"}}]},"condition":{"hexValue":"74727565","id":3699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1017:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":3714,"nodeType":"WhileStatement","src":"1010:282:21"},{"expression":{"id":3715,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3689,"src":"1312:6:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3678,"id":3716,"nodeType":"Return","src":"1305:13:21"}]}]},"documentation":{"id":3672,"nodeType":"StructuredDocumentation","src":"542:90:21","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":3719,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"646:8:21","nodeType":"FunctionDefinition","parameters":{"id":3675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3674,"mutability":"mutable","name":"value","nameLocation":"663:5:21","nodeType":"VariableDeclaration","scope":3719,"src":"655:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3673,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"654:15:21"},"returnParameters":{"id":3678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3677,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3719,"src":"693:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3676,"name":"string","nodeType":"ElementaryTypeName","src":"693:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"692:15:21"},"scope":3906,"src":"637:698:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3744,"nodeType":"Block","src":"1511:92:21","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3730,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"1542:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1550:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1542:9:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":3734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1560:2:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":3735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1542:20:21","trueExpression":{"hexValue":"2d","id":3733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1554:3:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":3739,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"1588:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":3737,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5750,"src":"1573:10:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$5750_$","typeString":"type(library SignedMath)"}},"id":3738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1584:3:21","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":5749,"src":"1573:14:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":3740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1573:21:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3736,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3719,"src":"1564:8:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1564:31:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":3728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1528:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3727,"name":"string","nodeType":"ElementaryTypeName","src":"1528:6:21","typeDescriptions":{}}},"id":3729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1535:6:21","memberName":"concat","nodeType":"MemberAccess","src":"1528:13:21","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":3742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1528:68:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3726,"id":3743,"nodeType":"Return","src":"1521:75:21"}]},"documentation":{"id":3720,"nodeType":"StructuredDocumentation","src":"1341:89:21","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":3745,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1444:14:21","nodeType":"FunctionDefinition","parameters":{"id":3723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3722,"mutability":"mutable","name":"value","nameLocation":"1466:5:21","nodeType":"VariableDeclaration","scope":3745,"src":"1459:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3721,"name":"int256","nodeType":"ElementaryTypeName","src":"1459:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1458:14:21"},"returnParameters":{"id":3726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3725,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3745,"src":"1496:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3724,"name":"string","nodeType":"ElementaryTypeName","src":"1496:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1495:15:21"},"scope":3906,"src":"1435:168:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3764,"nodeType":"Block","src":"1782:100:21","statements":[{"id":3763,"nodeType":"UncheckedBlock","src":"1792:84:21","statements":[{"expression":{"arguments":[{"id":3754,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"1835:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3757,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"1854:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3755,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5645,"src":"1842:4:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5645_$","typeString":"type(library Math)"}},"id":3756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1847:6:21","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":5587,"src":"1842:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1842:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1863:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1842:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3753,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3765,3848,3868],"referencedDeclaration":3848,"src":"1823:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1823:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3752,"id":3762,"nodeType":"Return","src":"1816:49:21"}]}]},"documentation":{"id":3746,"nodeType":"StructuredDocumentation","src":"1609:94:21","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":3765,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1717:11:21","nodeType":"FunctionDefinition","parameters":{"id":3749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3748,"mutability":"mutable","name":"value","nameLocation":"1737:5:21","nodeType":"VariableDeclaration","scope":3765,"src":"1729:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3747,"name":"uint256","nodeType":"ElementaryTypeName","src":"1729:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1728:15:21"},"returnParameters":{"id":3752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3751,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3765,"src":"1767:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3750,"name":"string","nodeType":"ElementaryTypeName","src":"1767:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1766:15:21"},"scope":3906,"src":"1708:174:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3847,"nodeType":"Block","src":"2095:435:21","statements":[{"assignments":[3776],"declarations":[{"constant":false,"id":3776,"mutability":"mutable","name":"localValue","nameLocation":"2113:10:21","nodeType":"VariableDeclaration","scope":3847,"src":"2105:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3775,"name":"uint256","nodeType":"ElementaryTypeName","src":"2105:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3778,"initialValue":{"id":3777,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3768,"src":"2126:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2105:26:21"},{"assignments":[3780],"declarations":[{"constant":false,"id":3780,"mutability":"mutable","name":"buffer","nameLocation":"2154:6:21","nodeType":"VariableDeclaration","scope":3847,"src":"2141:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3779,"name":"bytes","nodeType":"ElementaryTypeName","src":"2141:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3789,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2173:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3784,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3770,"src":"2177:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2173:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":3786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2186:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2173:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2163:9:21","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3781,"name":"bytes","nodeType":"ElementaryTypeName","src":"2167:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2163:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2141:47:21"},{"expression":{"id":3794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3790,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3780,"src":"2198:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3792,"indexExpression":{"hexValue":"30","id":3791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2205:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2198:9:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2210:3:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2198:15:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3795,"nodeType":"ExpressionStatement","src":"2198:15:21"},{"expression":{"id":3800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3796,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3780,"src":"2223:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3798,"indexExpression":{"hexValue":"31","id":3797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2230:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2223:9:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":3799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2235:3:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2223:15:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3801,"nodeType":"ExpressionStatement","src":"2223:15:21"},{"body":{"id":3830,"nodeType":"Block","src":"2293:95:21","statements":[{"expression":{"id":3824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3816,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3780,"src":"2307:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3818,"indexExpression":{"id":3817,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3803,"src":"2314:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2307:9:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3819,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3661,"src":"2319:10:21","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":3823,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3820,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3776,"src":"2330:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":3821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2343:3:21","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2330:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2319:28:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2307:40:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3825,"nodeType":"ExpressionStatement","src":"2307:40:21"},{"expression":{"id":3828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3826,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3776,"src":"2361:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2376:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2361:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3829,"nodeType":"ExpressionStatement","src":"2361:16:21"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3810,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3803,"src":"2281:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2285:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2281:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3831,"initializationExpression":{"assignments":[3803],"declarations":[{"constant":false,"id":3803,"mutability":"mutable","name":"i","nameLocation":"2261:1:21","nodeType":"VariableDeclaration","scope":3831,"src":"2253:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3802,"name":"uint256","nodeType":"ElementaryTypeName","src":"2253:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3809,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2265:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3805,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3770,"src":"2269:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2265:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2278:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2265:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2253:26:21"},"loopExpression":{"expression":{"id":3814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2288:3:21","subExpression":{"id":3813,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3803,"src":"2290:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3815,"nodeType":"ExpressionStatement","src":"2288:3:21"},"nodeType":"ForStatement","src":"2248:140:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3832,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3776,"src":"2401:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2415:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2401:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3841,"nodeType":"IfStatement","src":"2397:96:21","trueBody":{"id":3840,"nodeType":"Block","src":"2418:75:21","statements":[{"errorCall":{"arguments":[{"id":3836,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3768,"src":"2468:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3837,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3770,"src":"2475:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3835,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"2439:28:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":3838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2439:43:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3839,"nodeType":"RevertStatement","src":"2432:50:21"}]}},{"expression":{"arguments":[{"id":3844,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3780,"src":"2516:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3843,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3842,"name":"string","nodeType":"ElementaryTypeName","src":"2509:6:21","typeDescriptions":{}}},"id":3845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3774,"id":3846,"nodeType":"Return","src":"2502:21:21"}]},"documentation":{"id":3766,"nodeType":"StructuredDocumentation","src":"1888:112:21","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":3848,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2014:11:21","nodeType":"FunctionDefinition","parameters":{"id":3771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3768,"mutability":"mutable","name":"value","nameLocation":"2034:5:21","nodeType":"VariableDeclaration","scope":3848,"src":"2026:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3767,"name":"uint256","nodeType":"ElementaryTypeName","src":"2026:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3770,"mutability":"mutable","name":"length","nameLocation":"2049:6:21","nodeType":"VariableDeclaration","scope":3848,"src":"2041:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3769,"name":"uint256","nodeType":"ElementaryTypeName","src":"2041:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2025:31:21"},"returnParameters":{"id":3774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3773,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3848,"src":"2080:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3772,"name":"string","nodeType":"ElementaryTypeName","src":"2080:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2079:15:21"},"scope":3906,"src":"2005:525:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3867,"nodeType":"Block","src":"2762:75:21","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":3861,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"2807:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2799:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3859,"name":"uint160","nodeType":"ElementaryTypeName","src":"2799:7:21","typeDescriptions":{}}},"id":3862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2799:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2791:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3857,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:21","typeDescriptions":{}}},"id":3863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2791:22:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3864,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3664,"src":"2815:14:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3856,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3765,3848,3868],"referencedDeclaration":3848,"src":"2779:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2779:51:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3855,"id":3866,"nodeType":"Return","src":"2772:58:21"}]},"documentation":{"id":3849,"nodeType":"StructuredDocumentation","src":"2536:148:21","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":3868,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2698:11:21","nodeType":"FunctionDefinition","parameters":{"id":3852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3851,"mutability":"mutable","name":"addr","nameLocation":"2718:4:21","nodeType":"VariableDeclaration","scope":3868,"src":"2710:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3850,"name":"address","nodeType":"ElementaryTypeName","src":"2710:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2709:14:21"},"returnParameters":{"id":3855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3854,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3868,"src":"2747:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3853,"name":"string","nodeType":"ElementaryTypeName","src":"2747:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2746:15:21"},"scope":3906,"src":"2689:148:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3904,"nodeType":"Block","src":"2992:104:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3880,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3871,"src":"3015:1:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3009:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3878,"name":"bytes","nodeType":"ElementaryTypeName","src":"3009:5:21","typeDescriptions":{}}},"id":3881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3009:8:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3018:6:21","memberName":"length","nodeType":"MemberAccess","src":"3009:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3885,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3873,"src":"3034:1:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3028:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3883,"name":"bytes","nodeType":"ElementaryTypeName","src":"3028:5:21","typeDescriptions":{}}},"id":3886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3028:8:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3037:6:21","memberName":"length","nodeType":"MemberAccess","src":"3028:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3009:34:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3892,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3871,"src":"3063:1:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3057:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3890,"name":"bytes","nodeType":"ElementaryTypeName","src":"3057:5:21","typeDescriptions":{}}},"id":3893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:8:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3889,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3047:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3047:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":3898,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3873,"src":"3086:1:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3897,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3080:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3896,"name":"bytes","nodeType":"ElementaryTypeName","src":"3080:5:21","typeDescriptions":{}}},"id":3899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3080:8:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3895,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3070:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3070:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3047:42:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3009:80:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3877,"id":3903,"nodeType":"Return","src":"3002:87:21"}]},"documentation":{"id":3869,"nodeType":"StructuredDocumentation","src":"2843:66:21","text":" @dev Returns true if the two strings are equal."},"id":3905,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2923:5:21","nodeType":"FunctionDefinition","parameters":{"id":3874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3871,"mutability":"mutable","name":"a","nameLocation":"2943:1:21","nodeType":"VariableDeclaration","scope":3905,"src":"2929:15:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3870,"name":"string","nodeType":"ElementaryTypeName","src":"2929:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3873,"mutability":"mutable","name":"b","nameLocation":"2960:1:21","nodeType":"VariableDeclaration","scope":3905,"src":"2946:15:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3872,"name":"string","nodeType":"ElementaryTypeName","src":"2946:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2928:34:21"},"returnParameters":{"id":3877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3876,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3905,"src":"2986:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3875,"name":"bool","nodeType":"ElementaryTypeName","src":"2986:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2985:6:21"},"scope":3906,"src":"2914:182:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3907,"src":"251:2847:21","usedErrors":[3671],"usedEvents":[]}],"src":"101:2998:21"},"id":21},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[4254]},"id":4255,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3908,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:22"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":3909,"nodeType":"StructuredDocumentation","src":"138:205:22","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":4254,"linearizedBaseContracts":[4254],"name":"ECDSA","nameLocation":"352:5:22","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":3914,"members":[{"id":3910,"name":"NoError","nameLocation":"392:7:22","nodeType":"EnumValue","src":"392:7:22"},{"id":3911,"name":"InvalidSignature","nameLocation":"409:16:22","nodeType":"EnumValue","src":"409:16:22"},{"id":3912,"name":"InvalidSignatureLength","nameLocation":"435:22:22","nodeType":"EnumValue","src":"435:22:22"},{"id":3913,"name":"InvalidSignatureS","nameLocation":"467:17:22","nodeType":"EnumValue","src":"467:17:22"}],"name":"RecoverError","nameLocation":"369:12:22","nodeType":"EnumDefinition","src":"364:126:22"},{"documentation":{"id":3915,"nodeType":"StructuredDocumentation","src":"496:63:22","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":3917,"name":"ECDSAInvalidSignature","nameLocation":"570:21:22","nodeType":"ErrorDefinition","parameters":{"id":3916,"nodeType":"ParameterList","parameters":[],"src":"591:2:22"},"src":"564:30:22"},{"documentation":{"id":3918,"nodeType":"StructuredDocumentation","src":"600:60:22","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":3922,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:22","nodeType":"ErrorDefinition","parameters":{"id":3921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3920,"mutability":"mutable","name":"length","nameLocation":"707:6:22","nodeType":"VariableDeclaration","scope":3922,"src":"699:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3919,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:22"},"src":"665:50:22"},{"documentation":{"id":3923,"nodeType":"StructuredDocumentation","src":"721:85:22","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":3927,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:22","nodeType":"ErrorDefinition","parameters":{"id":3926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3925,"mutability":"mutable","name":"s","nameLocation":"848:1:22","nodeType":"VariableDeclaration","scope":3927,"src":"840:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3924,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:22"},"src":"811:40:22"},{"body":{"id":3979,"nodeType":"Block","src":"2242:653:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3942,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3932,"src":"2256:9:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2266:6:22","memberName":"length","nodeType":"MemberAccess","src":"2256:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":3944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2276:2:22","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2256:22:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3977,"nodeType":"Block","src":"2781:108:22","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2811:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2803:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3964,"name":"address","nodeType":"ElementaryTypeName","src":"2803:7:22","typeDescriptions":{}}},"id":3967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2803:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3968,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3914,"src":"2815:12:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3914_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2828:22:22","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3912,"src":"2815:35:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3914","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":3972,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3932,"src":"2860:9:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2870:6:22","memberName":"length","nodeType":"MemberAccess","src":"2860:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3971,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2852:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3970,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2852:7:22","typeDescriptions":{}}},"id":3974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2852:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3975,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2802:76:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3914_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3941,"id":3976,"nodeType":"Return","src":"2795:83:22"}]},"id":3978,"nodeType":"IfStatement","src":"2252:637:22","trueBody":{"id":3963,"nodeType":"Block","src":"2280:495:22","statements":[{"assignments":[3947],"declarations":[{"constant":false,"id":3947,"mutability":"mutable","name":"r","nameLocation":"2302:1:22","nodeType":"VariableDeclaration","scope":3963,"src":"2294:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3946,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2294:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3948,"nodeType":"VariableDeclarationStatement","src":"2294:9:22"},{"assignments":[3950],"declarations":[{"constant":false,"id":3950,"mutability":"mutable","name":"s","nameLocation":"2325:1:22","nodeType":"VariableDeclaration","scope":3963,"src":"2317:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3949,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2317:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3951,"nodeType":"VariableDeclarationStatement","src":"2317:9:22"},{"assignments":[3953],"declarations":[{"constant":false,"id":3953,"mutability":"mutable","name":"v","nameLocation":"2346:1:22","nodeType":"VariableDeclaration","scope":3963,"src":"2340:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3952,"name":"uint8","nodeType":"ElementaryTypeName","src":"2340:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3954,"nodeType":"VariableDeclarationStatement","src":"2340:7:22"},{"AST":{"nodeType":"YulBlock","src":"2548:171:22","statements":[{"nodeType":"YulAssignment","src":"2566:32:22","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2581:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2592:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2577:3:22"},"nodeType":"YulFunctionCall","src":"2577:20:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2571:5:22"},"nodeType":"YulFunctionCall","src":"2571:27:22"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2566:1:22"}]},{"nodeType":"YulAssignment","src":"2615:32:22","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2630:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2641:4:22","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2626:3:22"},"nodeType":"YulFunctionCall","src":"2626:20:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2620:5:22"},"nodeType":"YulFunctionCall","src":"2620:27:22"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2615:1:22"}]},{"nodeType":"YulAssignment","src":"2664:41:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2674:1:22","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2687:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2698:4:22","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2683:3:22"},"nodeType":"YulFunctionCall","src":"2683:20:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2677:5:22"},"nodeType":"YulFunctionCall","src":"2677:27:22"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2669:4:22"},"nodeType":"YulFunctionCall","src":"2669:36:22"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2664:1:22"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3947,"isOffset":false,"isSlot":false,"src":"2566:1:22","valueSize":1},{"declaration":3950,"isOffset":false,"isSlot":false,"src":"2615:1:22","valueSize":1},{"declaration":3932,"isOffset":false,"isSlot":false,"src":"2581:9:22","valueSize":1},{"declaration":3932,"isOffset":false,"isSlot":false,"src":"2630:9:22","valueSize":1},{"declaration":3932,"isOffset":false,"isSlot":false,"src":"2687:9:22","valueSize":1},{"declaration":3953,"isOffset":false,"isSlot":false,"src":"2664:1:22","valueSize":1}],"id":3955,"nodeType":"InlineAssembly","src":"2539:180:22"},{"expression":{"arguments":[{"id":3957,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3930,"src":"2750:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3958,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3953,"src":"2756:1:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3959,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"2759:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3960,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3950,"src":"2762:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3956,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3980,4060,4168],"referencedDeclaration":4168,"src":"2739:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3914_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2739:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3914_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3941,"id":3962,"nodeType":"Return","src":"2732:32:22"}]}}]},"documentation":{"id":3928,"nodeType":"StructuredDocumentation","src":"857:1267:22","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":3980,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:22","nodeType":"FunctionDefinition","parameters":{"id":3933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3930,"mutability":"mutable","name":"hash","nameLocation":"2157:4:22","nodeType":"VariableDeclaration","scope":3980,"src":"2149:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3929,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2149:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3932,"mutability":"mutable","name":"signature","nameLocation":"2176:9:22","nodeType":"VariableDeclaration","scope":3980,"src":"2163:22:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3931,"name":"bytes","nodeType":"ElementaryTypeName","src":"2163:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:38:22"},"returnParameters":{"id":3941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3935,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3980,"src":"2210:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3934,"name":"address","nodeType":"ElementaryTypeName","src":"2210:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3938,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3980,"src":"2219:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3914","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3937,"nodeType":"UserDefinedTypeName","pathNode":{"id":3936,"name":"RecoverError","nameLocations":["2219:12:22"],"nodeType":"IdentifierPath","referencedDeclaration":3914,"src":"2219:12:22"},"referencedDeclaration":3914,"src":"2219:12:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3914","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3940,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3980,"src":"2233:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3939,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2233:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2209:32:22"},"scope":4254,"src":"2129:766:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4009,"nodeType":"Block","src":"3789:168:22","statements":[{"assignments":[3991,3994,3996],"declarations":[{"constant":false,"id":3991,"mutability":"mutable","name":"recovered","nameLocation":"3808:9:22","nodeType":"VariableDeclaration","scope":4009,"src":"3800:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3990,"name":"address","nodeType":"ElementaryTypeName","src":"3800:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3994,"mutability":"mutable","name":"error","nameLocation":"3832:5:22","nodeType":"VariableDeclaration","scope":4009,"src":"3819:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3914","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3993,"nodeType":"UserDefinedTypeName","pathNode":{"id":3992,"name":"RecoverError","nameLocations":["3819:12:22"],"nodeType":"IdentifierPath","referencedDeclaration":3914,"src":"3819:12:22"},"referencedDeclaration":3914,"src":"3819:12:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3914","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3996,"mutability":"mutable","name":"errorArg","nameLocation":"3847:8:22","nodeType":"VariableDeclaration","scope":4009,"src":"3839:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3995,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3839:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4001,"initialValue":{"arguments":[{"id":3998,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3983,"src":"3870:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3999,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"3876:9:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3997,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3980,4060,4168],"referencedDeclaration":3980,"src":"3859:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$3914_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":4000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3859:27:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3914_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3799:87:22"},{"expression":{"arguments":[{"id":4003,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3994,"src":"3908:5:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3914","typeString":"enum ECDSA.RecoverError"}},{"id":4004,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3996,"src":"3915:8:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3914","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4002,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4253,"src":"3896:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3914_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":4005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3896:28:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4006,"nodeType":"ExpressionStatement","src":"3896:28:22"},{"expression":{"id":4007,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3991,"src":"3941:9:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3989,"id":4008,"nodeType":"Return","src":"3934:16:22"}]},"documentation":{"id":3981,"nodeType":"StructuredDocumentation","src":"2901:796:22","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":4010,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3711:7:22","nodeType":"FunctionDefinition","parameters":{"id":3986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3983,"mutability":"mutable","name":"hash","nameLocation":"3727:4:22","nodeType":"VariableDeclaration","scope":4010,"src":"3719:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3982,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3719:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3985,"mutability":"mutable","name":"signature","nameLocation":"3746:9:22","nodeType":"VariableDeclaration","scope":4010,"src":"3733:22:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3984,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3718:38:22"},"returnParameters":{"id":3989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3988,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4010,"src":"3780:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3987,"name":"address","nodeType":"ElementaryTypeName","src":"3780:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3779:9:22"},"scope":4254,"src":"3702:255:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4059,"nodeType":"Block","src":"4285:342:22","statements":[{"id":4058,"nodeType":"UncheckedBlock","src":"4295:326:22","statements":[{"assignments":[4028],"declarations":[{"constant":false,"id":4028,"mutability":"mutable","name":"s","nameLocation":"4327:1:22","nodeType":"VariableDeclaration","scope":4058,"src":"4319:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4027,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4319:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4035,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4029,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4017,"src":"4331:2:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":4032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4344:66:22","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":4031,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4336:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4030,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4336:7:22","typeDescriptions":{}}},"id":4033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4336:75:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4331:80:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4319:92:22"},{"assignments":[4037],"declarations":[{"constant":false,"id":4037,"mutability":"mutable","name":"v","nameLocation":"4528:1:22","nodeType":"VariableDeclaration","scope":4058,"src":"4522:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4036,"name":"uint8","nodeType":"ElementaryTypeName","src":"4522:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4050,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4042,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4017,"src":"4547:2:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4539:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4040,"name":"uint256","nodeType":"ElementaryTypeName","src":"4539:7:22","typeDescriptions":{}}},"id":4043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4539:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":4044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4554:3:22","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4539:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4046,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4538:20:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":4047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4561:2:22","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4538:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4039,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4532:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4038,"name":"uint8","nodeType":"ElementaryTypeName","src":"4532:5:22","typeDescriptions":{}}},"id":4049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4532:32:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4522:42:22"},{"expression":{"arguments":[{"id":4052,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4013,"src":"4596:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4053,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"4602:1:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4054,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4015,"src":"4605:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4055,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4028,"src":"4608:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4051,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3980,4060,4168],"referencedDeclaration":4168,"src":"4585:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3914_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":4056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4585:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3914_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":4026,"id":4057,"nodeType":"Return","src":"4578:32:22"}]}]},"documentation":{"id":4011,"nodeType":"StructuredDocumentation","src":"3963:205:22","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]"},"id":4060,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4182:10:22","nodeType":"FunctionDefinition","parameters":{"id":4018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4013,"mutability":"mutable","name":"hash","nameLocation":"4201:4:22","nodeType":"VariableDeclaration","scope":4060,"src":"4193:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4012,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4193:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4015,"mutability":"mutable","name":"r","nameLocation":"4215:1:22","nodeType":"VariableDeclaration","scope":4060,"src":"4207:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4014,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4207:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4017,"mutability":"mutable","name":"vs","nameLocation":"4226:2:22","nodeType":"VariableDeclaration","scope":4060,"src":"4218:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4016,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4218:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4192:37:22"},"returnParameters":{"id":4026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4020,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4060,"src":"4253:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4019,"name":"address","nodeType":"ElementaryTypeName","src":"4253:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4023,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4060,"src":"4262:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3914","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4022,"nodeType":"UserDefinedTypeName","pathNode":{"id":4021,"name":"RecoverError","nameLocations":["4262:12:22"],"nodeType":"IdentifierPath","referencedDeclaration":3914,"src":"4262:12:22"},"referencedDeclaration":3914,"src":"4262:12:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3914","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4025,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4060,"src":"4276:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4024,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4276:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4252:32:22"},"scope":4254,"src":"4173:454:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4092,"nodeType":"Block","src":"4840:164:22","statements":[{"assignments":[4073,4076,4078],"declarations":[{"constant":false,"id":4073,"mutability":"mutable","name":"recovered","nameLocation":"4859:9:22","nodeType":"VariableDeclaration","scope":4092,"src":"4851:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4072,"name":"address","nodeType":"ElementaryTypeName","src":"4851:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4076,"mutability":"mutable","name":"error","nameLocation":"4883:5:22","nodeType":"VariableDeclaration","scope":4092,"src":"4870:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3914","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4075,"nodeType":"UserDefinedTypeName","pathNode":{"id":4074,"name":"RecoverError","nameLocations":["4870:12:22"],"nodeType":"IdentifierPath","referencedDeclaration":3914,"src":"4870:12:22"},"referencedDeclaration":3914,"src":"4870:12:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3914","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4078,"mutability":"mutable","name":"errorArg","nameLocation":"4898:8:22","nodeType":"VariableDeclaration","scope":4092,"src":"4890:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4077,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4890:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4084,"initialValue":{"arguments":[{"id":4080,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"4921:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4081,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4065,"src":"4927:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4082,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"4930:2:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4079,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3980,4060,4168],"referencedDeclaration":4060,"src":"4910:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3914_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":4083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4910:23:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3914_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4850:83:22"},{"expression":{"arguments":[{"id":4086,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4076,"src":"4955:5:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3914","typeString":"enum ECDSA.RecoverError"}},{"id":4087,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4078,"src":"4962:8:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3914","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4085,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4253,"src":"4943:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3914_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":4088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4943:28:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4089,"nodeType":"ExpressionStatement","src":"4943:28:22"},{"expression":{"id":4090,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4073,"src":"4988:9:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4071,"id":4091,"nodeType":"Return","src":"4981:16:22"}]},"documentation":{"id":4061,"nodeType":"StructuredDocumentation","src":"4633:116:22","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":4093,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4763:7:22","nodeType":"FunctionDefinition","parameters":{"id":4068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4063,"mutability":"mutable","name":"hash","nameLocation":"4779:4:22","nodeType":"VariableDeclaration","scope":4093,"src":"4771:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4062,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4771:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4065,"mutability":"mutable","name":"r","nameLocation":"4793:1:22","nodeType":"VariableDeclaration","scope":4093,"src":"4785:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4064,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4785:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4067,"mutability":"mutable","name":"vs","nameLocation":"4804:2:22","nodeType":"VariableDeclaration","scope":4093,"src":"4796:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4066,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4796:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4770:37:22"},"returnParameters":{"id":4071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4070,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4093,"src":"4831:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4069,"name":"address","nodeType":"ElementaryTypeName","src":"4831:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4830:9:22"},"scope":4254,"src":"4754:250:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4167,"nodeType":"Block","src":"5298:1372:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4114,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4102,"src":"6194:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4113,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6186:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4112,"name":"uint256","nodeType":"ElementaryTypeName","src":"6186:7:22","typeDescriptions":{}}},"id":4115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6186:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":4116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6199:66:22","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6186:79:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4128,"nodeType":"IfStatement","src":"6182:164:22","trueBody":{"id":4127,"nodeType":"Block","src":"6267:79:22","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":4120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6297:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6289:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4118,"name":"address","nodeType":"ElementaryTypeName","src":"6289:7:22","typeDescriptions":{}}},"id":4121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6289:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4122,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3914,"src":"6301:12:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3914_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6314:17:22","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3913,"src":"6301:30:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3914","typeString":"enum ECDSA.RecoverError"}},{"id":4124,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4102,"src":"6333:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4125,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6288:47:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3914_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":4111,"id":4126,"nodeType":"Return","src":"6281:54:22"}]}},{"assignments":[4130],"declarations":[{"constant":false,"id":4130,"mutability":"mutable","name":"signer","nameLocation":"6448:6:22","nodeType":"VariableDeclaration","scope":4167,"src":"6440:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4129,"name":"address","nodeType":"ElementaryTypeName","src":"6440:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4137,"initialValue":{"arguments":[{"id":4132,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4096,"src":"6467:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4133,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4098,"src":"6473:1:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4134,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4100,"src":"6476:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4135,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4102,"src":"6479:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4131,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6457:9:22","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":4136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6457:24:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6440:41:22"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4138,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4130,"src":"6495:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6513:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6505:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4139,"name":"address","nodeType":"ElementaryTypeName","src":"6505:7:22","typeDescriptions":{}}},"id":4142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6505:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6495:20:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4157,"nodeType":"IfStatement","src":"6491:113:22","trueBody":{"id":4156,"nodeType":"Block","src":"6517:87:22","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":4146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6547:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6539:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4144,"name":"address","nodeType":"ElementaryTypeName","src":"6539:7:22","typeDescriptions":{}}},"id":4147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6539:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4148,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3914,"src":"6551:12:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3914_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4149,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6564:16:22","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3911,"src":"6551:29:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3914","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":4152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6590:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4151,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6582:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4150,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6582:7:22","typeDescriptions":{}}},"id":4153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6582:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4154,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6538:55:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3914_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":4111,"id":4155,"nodeType":"Return","src":"6531:62:22"}]}},{"expression":{"components":[{"id":4158,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4130,"src":"6622:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4159,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3914,"src":"6630:12:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3914_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6643:7:22","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3910,"src":"6630:20:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3914","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":4163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6660:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6652:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4161,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6652:7:22","typeDescriptions":{}}},"id":4164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6652:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4165,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6621:42:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3914_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":4111,"id":4166,"nodeType":"Return","src":"6614:49:22"}]},"documentation":{"id":4094,"nodeType":"StructuredDocumentation","src":"5010:125:22","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":4168,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5149:10:22","nodeType":"FunctionDefinition","parameters":{"id":4103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4096,"mutability":"mutable","name":"hash","nameLocation":"5177:4:22","nodeType":"VariableDeclaration","scope":4168,"src":"5169:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4095,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5169:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4098,"mutability":"mutable","name":"v","nameLocation":"5197:1:22","nodeType":"VariableDeclaration","scope":4168,"src":"5191:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4097,"name":"uint8","nodeType":"ElementaryTypeName","src":"5191:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4100,"mutability":"mutable","name":"r","nameLocation":"5216:1:22","nodeType":"VariableDeclaration","scope":4168,"src":"5208:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4099,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5208:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4102,"mutability":"mutable","name":"s","nameLocation":"5235:1:22","nodeType":"VariableDeclaration","scope":4168,"src":"5227:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4101,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5227:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5159:83:22"},"returnParameters":{"id":4111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4105,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4168,"src":"5266:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4104,"name":"address","nodeType":"ElementaryTypeName","src":"5266:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4108,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4168,"src":"5275:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3914","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4107,"nodeType":"UserDefinedTypeName","pathNode":{"id":4106,"name":"RecoverError","nameLocations":["5275:12:22"],"nodeType":"IdentifierPath","referencedDeclaration":3914,"src":"5275:12:22"},"referencedDeclaration":3914,"src":"5275:12:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3914","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4110,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4168,"src":"5289:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4109,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5289:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5265:32:22"},"scope":4254,"src":"5140:1530:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4203,"nodeType":"Block","src":"6897:166:22","statements":[{"assignments":[4183,4186,4188],"declarations":[{"constant":false,"id":4183,"mutability":"mutable","name":"recovered","nameLocation":"6916:9:22","nodeType":"VariableDeclaration","scope":4203,"src":"6908:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4182,"name":"address","nodeType":"ElementaryTypeName","src":"6908:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4186,"mutability":"mutable","name":"error","nameLocation":"6940:5:22","nodeType":"VariableDeclaration","scope":4203,"src":"6927:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3914","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4185,"nodeType":"UserDefinedTypeName","pathNode":{"id":4184,"name":"RecoverError","nameLocations":["6927:12:22"],"nodeType":"IdentifierPath","referencedDeclaration":3914,"src":"6927:12:22"},"referencedDeclaration":3914,"src":"6927:12:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3914","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4188,"mutability":"mutable","name":"errorArg","nameLocation":"6955:8:22","nodeType":"VariableDeclaration","scope":4203,"src":"6947:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4187,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6947:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4195,"initialValue":{"arguments":[{"id":4190,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4171,"src":"6978:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4191,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4173,"src":"6984:1:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4192,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4175,"src":"6987:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4193,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4177,"src":"6990:1:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4189,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3980,4060,4168],"referencedDeclaration":4168,"src":"6967:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3914_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":4194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6967:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3914_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6907:85:22"},{"expression":{"arguments":[{"id":4197,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4186,"src":"7014:5:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3914","typeString":"enum ECDSA.RecoverError"}},{"id":4198,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4188,"src":"7021:8:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3914","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4196,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4253,"src":"7002:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3914_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":4199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7002:28:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4200,"nodeType":"ExpressionStatement","src":"7002:28:22"},{"expression":{"id":4201,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4183,"src":"7047:9:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4181,"id":4202,"nodeType":"Return","src":"7040:16:22"}]},"documentation":{"id":4169,"nodeType":"StructuredDocumentation","src":"6676:122:22","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":4204,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6812:7:22","nodeType":"FunctionDefinition","parameters":{"id":4178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4171,"mutability":"mutable","name":"hash","nameLocation":"6828:4:22","nodeType":"VariableDeclaration","scope":4204,"src":"6820:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4170,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6820:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4173,"mutability":"mutable","name":"v","nameLocation":"6840:1:22","nodeType":"VariableDeclaration","scope":4204,"src":"6834:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4172,"name":"uint8","nodeType":"ElementaryTypeName","src":"6834:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4175,"mutability":"mutable","name":"r","nameLocation":"6851:1:22","nodeType":"VariableDeclaration","scope":4204,"src":"6843:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4174,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6843:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4177,"mutability":"mutable","name":"s","nameLocation":"6862:1:22","nodeType":"VariableDeclaration","scope":4204,"src":"6854:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4176,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6854:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6819:45:22"},"returnParameters":{"id":4181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4180,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4204,"src":"6888:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4179,"name":"address","nodeType":"ElementaryTypeName","src":"6888:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6887:9:22"},"scope":4254,"src":"6803:260:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4252,"nodeType":"Block","src":"7268:460:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3914","typeString":"enum ECDSA.RecoverError"},"id":4216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4213,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4208,"src":"7282:5:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3914","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4214,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3914,"src":"7291:12:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3914_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4215,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7304:7:22","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3910,"src":"7291:20:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3914","typeString":"enum ECDSA.RecoverError"}},"src":"7282:29:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3914","typeString":"enum ECDSA.RecoverError"},"id":4222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4219,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4208,"src":"7378:5:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3914","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4220,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3914,"src":"7387:12:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3914_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7400:16:22","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3911,"src":"7387:29:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3914","typeString":"enum ECDSA.RecoverError"}},"src":"7378:38:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3914","typeString":"enum ECDSA.RecoverError"},"id":4230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4227,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4208,"src":"7483:5:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3914","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4228,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3914,"src":"7492:12:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3914_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7505:22:22","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3912,"src":"7492:35:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3914","typeString":"enum ECDSA.RecoverError"}},"src":"7483:44:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3914","typeString":"enum ECDSA.RecoverError"},"id":4242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4239,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4208,"src":"7617:5:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3914","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4240,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3914,"src":"7626:12:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3914_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4241,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7639:17:22","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3913,"src":"7626:30:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3914","typeString":"enum ECDSA.RecoverError"}},"src":"7617:39:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4248,"nodeType":"IfStatement","src":"7613:109:22","trueBody":{"id":4247,"nodeType":"Block","src":"7658:64:22","statements":[{"errorCall":{"arguments":[{"id":4244,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4210,"src":"7702:8:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4243,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3927,"src":"7679:22:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":4245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7679:32:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4246,"nodeType":"RevertStatement","src":"7672:39:22"}]}},"id":4249,"nodeType":"IfStatement","src":"7479:243:22","trueBody":{"id":4238,"nodeType":"Block","src":"7529:78:22","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":4234,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4210,"src":"7586:8:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4233,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7578:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4232,"name":"uint256","nodeType":"ElementaryTypeName","src":"7578:7:22","typeDescriptions":{}}},"id":4235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7578:17:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4231,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3922,"src":"7550:27:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7550:46:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4237,"nodeType":"RevertStatement","src":"7543:53:22"}]}},"id":4250,"nodeType":"IfStatement","src":"7374:348:22","trueBody":{"id":4226,"nodeType":"Block","src":"7418:55:22","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4223,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3917,"src":"7439:21:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7439:23:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4225,"nodeType":"RevertStatement","src":"7432:30:22"}]}},"id":4251,"nodeType":"IfStatement","src":"7278:444:22","trueBody":{"id":4218,"nodeType":"Block","src":"7313:55:22","statements":[{"functionReturnParameters":4212,"id":4217,"nodeType":"Return","src":"7327:7:22"}]}}]},"documentation":{"id":4205,"nodeType":"StructuredDocumentation","src":"7069:122:22","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":4253,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7205:11:22","nodeType":"FunctionDefinition","parameters":{"id":4211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4208,"mutability":"mutable","name":"error","nameLocation":"7230:5:22","nodeType":"VariableDeclaration","scope":4253,"src":"7217:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3914","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4207,"nodeType":"UserDefinedTypeName","pathNode":{"id":4206,"name":"RecoverError","nameLocations":["7217:12:22"],"nodeType":"IdentifierPath","referencedDeclaration":3914,"src":"7217:12:22"},"referencedDeclaration":3914,"src":"7217:12:22","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3914","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4210,"mutability":"mutable","name":"errorArg","nameLocation":"7245:8:22","nodeType":"VariableDeclaration","scope":4253,"src":"7237:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4209,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7237:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7216:38:22"},"returnParameters":{"id":4212,"nodeType":"ParameterList","parameters":[],"src":"7268:0:22"},"scope":4254,"src":"7196:532:22","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":4255,"src":"344:7386:22","usedErrors":[3917,3922,3927],"usedEvents":[]}],"src":"112:7619:22"},"id":22},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"EIP712":[4481],"IERC5267":[551],"MessageHashUtils":[4555],"ShortString":[3330],"ShortStrings":[3541]},"id":4482,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4256,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:23"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"./MessageHashUtils.sol","id":4258,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4482,"sourceUnit":4556,"src":"139:56:23","symbolAliases":[{"foreign":{"id":4257,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4555,"src":"147:16:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":4261,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4482,"sourceUnit":3542,"src":"196:62:23","symbolAliases":[{"foreign":{"id":4259,"name":"ShortStrings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3541,"src":"204:12:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":4260,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3330,"src":"218:11:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":4263,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4482,"sourceUnit":552,"src":"259:55:23","symbolAliases":[{"foreign":{"id":4262,"name":"IERC5267","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"267:8:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4265,"name":"IERC5267","nameLocations":["1988:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":551,"src":"1988:8:23"},"id":4266,"nodeType":"InheritanceSpecifier","src":"1988:8:23"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":4264,"nodeType":"StructuredDocumentation","src":"316:1643:23","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"},"fullyImplemented":true,"id":4481,"linearizedBaseContracts":[4481,551],"name":"EIP712","nameLocation":"1978:6:23","nodeType":"ContractDefinition","nodes":[{"global":false,"id":4268,"libraryName":{"id":4267,"name":"ShortStrings","nameLocations":["2009:12:23"],"nodeType":"IdentifierPath","referencedDeclaration":3541,"src":"2009:12:23"},"nodeType":"UsingForDirective","src":"2003:25:23"},{"constant":true,"id":4273,"mutability":"constant","name":"TYPE_HASH","nameLocation":"2059:9:23","nodeType":"VariableDeclaration","scope":4481,"src":"2034:140:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4269,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2034:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":4271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2089:84:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":4270,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2079:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2079:95:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":4275,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2399:22:23","nodeType":"VariableDeclaration","scope":4481,"src":"2373:48:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4274,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2373:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":4277,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2453:14:23","nodeType":"VariableDeclaration","scope":4481,"src":"2427:40:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4276,"name":"uint256","nodeType":"ElementaryTypeName","src":"2427:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":4279,"mutability":"immutable","name":"_cachedThis","nameLocation":"2499:11:23","nodeType":"VariableDeclaration","scope":4481,"src":"2473:37:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4278,"name":"address","nodeType":"ElementaryTypeName","src":"2473:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":4281,"mutability":"immutable","name":"_hashedName","nameLocation":"2543:11:23","nodeType":"VariableDeclaration","scope":4481,"src":"2517:37:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4280,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2517:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":4283,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2586:14:23","nodeType":"VariableDeclaration","scope":4481,"src":"2560:40:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4282,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2560:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":4286,"mutability":"immutable","name":"_name","nameLocation":"2637:5:23","nodeType":"VariableDeclaration","scope":4481,"src":"2607:35:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3330","typeString":"ShortString"},"typeName":{"id":4285,"nodeType":"UserDefinedTypeName","pathNode":{"id":4284,"name":"ShortString","nameLocations":["2607:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":3330,"src":"2607:11:23"},"referencedDeclaration":3330,"src":"2607:11:23","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3330","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":4289,"mutability":"immutable","name":"_version","nameLocation":"2678:8:23","nodeType":"VariableDeclaration","scope":4481,"src":"2648:38:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3330","typeString":"ShortString"},"typeName":{"id":4288,"nodeType":"UserDefinedTypeName","pathNode":{"id":4287,"name":"ShortString","nameLocations":["2648:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":3330,"src":"2648:11:23"},"referencedDeclaration":3330,"src":"2648:11:23","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3330","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":4291,"mutability":"mutable","name":"_nameFallback","nameLocation":"2707:13:23","nodeType":"VariableDeclaration","scope":4481,"src":"2692:28:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":4290,"name":"string","nodeType":"ElementaryTypeName","src":"2692:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":4293,"mutability":"mutable","name":"_versionFallback","nameLocation":"2741:16:23","nodeType":"VariableDeclaration","scope":4481,"src":"2726:31:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":4292,"name":"string","nodeType":"ElementaryTypeName","src":"2726:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":4350,"nodeType":"Block","src":"3383:376:23","statements":[{"expression":{"id":4306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4301,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4286,"src":"3393:5:23","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3330","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4304,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4291,"src":"3432:13:23","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":4302,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4296,"src":"3401:4:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":4303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3406:25:23","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":3482,"src":"3401:30:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$3330_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":4305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3401:45:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3330","typeString":"ShortString"}},"src":"3393:53:23","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3330","typeString":"ShortString"}},"id":4307,"nodeType":"ExpressionStatement","src":"3393:53:23"},{"expression":{"id":4313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4308,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4289,"src":"3456:8:23","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3330","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4311,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4293,"src":"3501:16:23","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":4309,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4298,"src":"3467:7:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":4310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3475:25:23","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":3482,"src":"3467:33:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$3330_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":4312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3467:51:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3330","typeString":"ShortString"}},"src":"3456:62:23","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3330","typeString":"ShortString"}},"id":4314,"nodeType":"ExpressionStatement","src":"3456:62:23"},{"expression":{"id":4322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4315,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4281,"src":"3528:11:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":4319,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4296,"src":"3558:4:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4318,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3552:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4317,"name":"bytes","nodeType":"ElementaryTypeName","src":"3552:5:23","typeDescriptions":{}}},"id":4320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3552:11:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4316,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3542:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3542:22:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3528:36:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4323,"nodeType":"ExpressionStatement","src":"3528:36:23"},{"expression":{"id":4331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4324,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"3574:14:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":4328,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4298,"src":"3607:7:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3601:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4326,"name":"bytes","nodeType":"ElementaryTypeName","src":"3601:5:23","typeDescriptions":{}}},"id":4329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3601:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4325,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3591:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3591:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3574:42:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4332,"nodeType":"ExpressionStatement","src":"3574:42:23"},{"expression":{"id":4336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4333,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4277,"src":"3627:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4334,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3644:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3650:7:23","memberName":"chainid","nodeType":"MemberAccess","src":"3644:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3627:30:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4337,"nodeType":"ExpressionStatement","src":"3627:30:23"},{"expression":{"id":4341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4338,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4275,"src":"3667:22:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":4339,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4398,"src":"3692:21:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":4340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3692:23:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3667:48:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4342,"nodeType":"ExpressionStatement","src":"3667:48:23"},{"expression":{"id":4348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4343,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"3725:11:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4346,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3747:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4481","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4481","typeString":"contract EIP712"}],"id":4345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3739:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4344,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:23","typeDescriptions":{}}},"id":4347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3725:27:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4349,"nodeType":"ExpressionStatement","src":"3725:27:23"}]},"documentation":{"id":4294,"nodeType":"StructuredDocumentation","src":"2764:559:23","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":4351,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4296,"mutability":"mutable","name":"name","nameLocation":"3354:4:23","nodeType":"VariableDeclaration","scope":4351,"src":"3340:18:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4295,"name":"string","nodeType":"ElementaryTypeName","src":"3340:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4298,"mutability":"mutable","name":"version","nameLocation":"3374:7:23","nodeType":"VariableDeclaration","scope":4351,"src":"3360:21:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4297,"name":"string","nodeType":"ElementaryTypeName","src":"3360:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3339:43:23"},"returnParameters":{"id":4300,"nodeType":"ParameterList","parameters":[],"src":"3383:0:23"},"scope":4481,"src":"3328:431:23","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4376,"nodeType":"Block","src":"3907:200:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4359,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3929:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4481","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4481","typeString":"contract EIP712"}],"id":4358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3921:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4357,"name":"address","nodeType":"ElementaryTypeName","src":"3921:7:23","typeDescriptions":{}}},"id":4360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3921:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4361,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"3938:11:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3921:28:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4363,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3953:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3959:7:23","memberName":"chainid","nodeType":"MemberAccess","src":"3953:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4365,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4277,"src":"3970:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3953:31:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3921:63:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4374,"nodeType":"Block","src":"4046:55:23","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4371,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4398,"src":"4067:21:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":4372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4067:23:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4356,"id":4373,"nodeType":"Return","src":"4060:30:23"}]},"id":4375,"nodeType":"IfStatement","src":"3917:184:23","trueBody":{"id":4370,"nodeType":"Block","src":"3986:54:23","statements":[{"expression":{"id":4368,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4275,"src":"4007:22:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4356,"id":4369,"nodeType":"Return","src":"4000:29:23"}]}}]},"documentation":{"id":4352,"nodeType":"StructuredDocumentation","src":"3765:75:23","text":" @dev Returns the domain separator for the current chain."},"id":4377,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3854:18:23","nodeType":"FunctionDefinition","parameters":{"id":4353,"nodeType":"ParameterList","parameters":[],"src":"3872:2:23"},"returnParameters":{"id":4356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4355,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4377,"src":"3898:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4354,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3898:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3897:9:23"},"scope":4481,"src":"3845:262:23","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4397,"nodeType":"Block","src":"4177:115:23","statements":[{"expression":{"arguments":[{"arguments":[{"id":4385,"name":"TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4273,"src":"4215:9:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4386,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4281,"src":"4226:11:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4387,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"4239:14:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":4388,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4255:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4261:7:23","memberName":"chainid","nodeType":"MemberAccess","src":"4255:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4392,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4278:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4481","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4481","typeString":"contract EIP712"}],"id":4391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4270:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4390,"name":"address","nodeType":"ElementaryTypeName","src":"4270:7:23","typeDescriptions":{}}},"id":4393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4270:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4383,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4204:3:23","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4208:6:23","memberName":"encode","nodeType":"MemberAccess","src":"4204:10:23","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4204:80:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4382,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4194:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4194:91:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4381,"id":4396,"nodeType":"Return","src":"4187:98:23"}]},"id":4398,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"4122:21:23","nodeType":"FunctionDefinition","parameters":{"id":4378,"nodeType":"ParameterList","parameters":[],"src":"4143:2:23"},"returnParameters":{"id":4381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4380,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4398,"src":"4168:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4379,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4168:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4167:9:23"},"scope":4481,"src":"4113:179:23","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":4413,"nodeType":"Block","src":"5003:90:23","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":4408,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"5053:18:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":4409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5053:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4410,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4401,"src":"5075:10:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4406,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4555,"src":"5020:16:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$4555_$","typeString":"type(library MessageHashUtils)"}},"id":4407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5037:15:23","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":4554,"src":"5020:32:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":4411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5020:66:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4405,"id":4412,"nodeType":"Return","src":"5013:73:23"}]},"documentation":{"id":4399,"nodeType":"StructuredDocumentation","src":"4298:614:23","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":4414,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4926:16:23","nodeType":"FunctionDefinition","parameters":{"id":4402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4401,"mutability":"mutable","name":"structHash","nameLocation":"4951:10:23","nodeType":"VariableDeclaration","scope":4414,"src":"4943:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4400,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4943:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4942:20:23"},"returnParameters":{"id":4405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4404,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4414,"src":"4994:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4403,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4994:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4993:9:23"},"scope":4481,"src":"4917:176:23","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[550],"body":{"id":4455,"nodeType":"Block","src":"5472:229:23","statements":[{"expression":{"components":[{"hexValue":"0f","id":4433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5503:7:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":4434,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4468,"src":"5533:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":4435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5533:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":4436,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"5560:14:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":4437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5560:16:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":4438,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5590:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5596:7:23","memberName":"chainid","nodeType":"MemberAccess","src":"5590:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4442,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5625:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4481","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4481","typeString":"contract EIP712"}],"id":4441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5617:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4440,"name":"address","nodeType":"ElementaryTypeName","src":"5617:7:23","typeDescriptions":{}}},"id":4443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5617:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":4446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5652:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5644:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4444,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5644:7:23","typeDescriptions":{}}},"id":4447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5644:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":4451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5682:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4450,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5668:13:23","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":4448,"name":"uint256","nodeType":"ElementaryTypeName","src":"5672:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4449,"nodeType":"ArrayTypeName","src":"5672:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":4452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5668:16:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":4453,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5489:205:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":4432,"id":4454,"nodeType":"Return","src":"5482:212:23"}]},"documentation":{"id":4415,"nodeType":"StructuredDocumentation","src":"5099:40:23","text":" @dev See {IERC-5267}."},"functionSelector":"84b0196e","id":4456,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5153:12:23","nodeType":"FunctionDefinition","parameters":{"id":4416,"nodeType":"ParameterList","parameters":[],"src":"5165:2:23"},"returnParameters":{"id":4432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4418,"mutability":"mutable","name":"fields","nameLocation":"5249:6:23","nodeType":"VariableDeclaration","scope":4456,"src":"5242:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":4417,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5242:6:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":4420,"mutability":"mutable","name":"name","nameLocation":"5283:4:23","nodeType":"VariableDeclaration","scope":4456,"src":"5269:18:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4419,"name":"string","nodeType":"ElementaryTypeName","src":"5269:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4422,"mutability":"mutable","name":"version","nameLocation":"5315:7:23","nodeType":"VariableDeclaration","scope":4456,"src":"5301:21:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4421,"name":"string","nodeType":"ElementaryTypeName","src":"5301:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4424,"mutability":"mutable","name":"chainId","nameLocation":"5344:7:23","nodeType":"VariableDeclaration","scope":4456,"src":"5336:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4423,"name":"uint256","nodeType":"ElementaryTypeName","src":"5336:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4426,"mutability":"mutable","name":"verifyingContract","nameLocation":"5373:17:23","nodeType":"VariableDeclaration","scope":4456,"src":"5365:25:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4425,"name":"address","nodeType":"ElementaryTypeName","src":"5365:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4428,"mutability":"mutable","name":"salt","nameLocation":"5412:4:23","nodeType":"VariableDeclaration","scope":4456,"src":"5404:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4427,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5404:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4431,"mutability":"mutable","name":"extensions","nameLocation":"5447:10:23","nodeType":"VariableDeclaration","scope":4456,"src":"5430:27:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4429,"name":"uint256","nodeType":"ElementaryTypeName","src":"5430:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4430,"nodeType":"ArrayTypeName","src":"5430:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5228:239:23"},"scope":4481,"src":"5144:557:23","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":4467,"nodeType":"Block","src":"6082:65:23","statements":[{"expression":{"arguments":[{"id":4464,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4291,"src":"6126:13:23","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":4462,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4286,"src":"6099:5:23","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3330","typeString":"ShortString"}},"id":4463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6105:20:23","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":3509,"src":"6099:26:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$3330_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$3330_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":4465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6099:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4461,"id":4466,"nodeType":"Return","src":"6092:48:23"}]},"documentation":{"id":4457,"nodeType":"StructuredDocumentation","src":"5707:256:23","text":" @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":4468,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"6030:11:23","nodeType":"FunctionDefinition","parameters":{"id":4458,"nodeType":"ParameterList","parameters":[],"src":"6041:2:23"},"returnParameters":{"id":4461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4460,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4468,"src":"6067:13:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4459,"name":"string","nodeType":"ElementaryTypeName","src":"6067:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6066:15:23"},"scope":4481,"src":"6021:126:23","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4479,"nodeType":"Block","src":"6537:71:23","statements":[{"expression":{"arguments":[{"id":4476,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4293,"src":"6584:16:23","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":4474,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4289,"src":"6554:8:23","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$3330","typeString":"ShortString"}},"id":4475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6563:20:23","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":3509,"src":"6554:29:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$3330_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$3330_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":4477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6554:47:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4473,"id":4478,"nodeType":"Return","src":"6547:54:23"}]},"documentation":{"id":4469,"nodeType":"StructuredDocumentation","src":"6153:262:23","text":" @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":4480,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"6482:14:23","nodeType":"FunctionDefinition","parameters":{"id":4470,"nodeType":"ParameterList","parameters":[],"src":"6496:2:23"},"returnParameters":{"id":4473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4480,"src":"6522:13:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4471,"name":"string","nodeType":"ElementaryTypeName","src":"6522:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6521:15:23"},"scope":4481,"src":"6473:135:23","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":4482,"src":"1960:4650:23","usedErrors":[3338,3340],"usedEvents":[531]}],"src":"113:6498:23"},"id":23},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[4555],"Strings":[3906]},"id":4556,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4483,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:24"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":4485,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4556,"sourceUnit":3907,"src":"149:39:24","symbolAliases":[{"foreign":{"id":4484,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3906,"src":"157:7:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":4486,"nodeType":"StructuredDocumentation","src":"190:330:24","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":4555,"linearizedBaseContracts":[4555],"name":"MessageHashUtils","nameLocation":"529:16:24","nodeType":"ContractDefinition","nodes":[{"body":{"id":4495,"nodeType":"Block","src":"1314:368:24","statements":[{"AST":{"nodeType":"YulBlock","src":"1376:300:24","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1397:4:24","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nodeType":"YulLiteral","src":"1403:34:24","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1390:6:24"},"nodeType":"YulFunctionCall","src":"1390:48:24"},"nodeType":"YulExpressionStatement","src":"1390:48:24"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1499:4:24","type":"","value":"0x1c"},{"name":"messageHash","nodeType":"YulIdentifier","src":"1505:11:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1492:6:24"},"nodeType":"YulFunctionCall","src":"1492:25:24"},"nodeType":"YulExpressionStatement","src":"1492:25:24"},{"nodeType":"YulAssignment","src":"1571:31:24","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1591:4:24","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1597:4:24","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1581:9:24"},"nodeType":"YulFunctionCall","src":"1581:21:24"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"1571:6:24"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":4492,"isOffset":false,"isSlot":false,"src":"1571:6:24","valueSize":1},{"declaration":4489,"isOffset":false,"isSlot":false,"src":"1505:11:24","valueSize":1}],"id":4494,"nodeType":"InlineAssembly","src":"1367:309:24"}]},"documentation":{"id":4487,"nodeType":"StructuredDocumentation","src":"552:665:24","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":4496,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1231:22:24","nodeType":"FunctionDefinition","parameters":{"id":4490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4489,"mutability":"mutable","name":"messageHash","nameLocation":"1262:11:24","nodeType":"VariableDeclaration","scope":4496,"src":"1254:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4488,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1254:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1253:21:24"},"returnParameters":{"id":4493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4492,"mutability":"mutable","name":"digest","nameLocation":"1306:6:24","nodeType":"VariableDeclaration","scope":4496,"src":"1298:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4491,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1297:16:24"},"scope":4555,"src":"1222:460:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4521,"nodeType":"Block","src":"2234:143:24","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":4508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2286:32:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":4513,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"2343:7:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2351:6:24","memberName":"length","nodeType":"MemberAccess","src":"2343:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4511,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3906,"src":"2326:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$3906_$","typeString":"type(library Strings)"}},"id":4512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2334:8:24","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":3719,"src":"2326:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":4515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2326:32:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2320:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4509,"name":"bytes","nodeType":"ElementaryTypeName","src":"2320:5:24","typeDescriptions":{}}},"id":4516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2320:39:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4517,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"2361:7:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2273:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4505,"name":"bytes","nodeType":"ElementaryTypeName","src":"2273:5:24","typeDescriptions":{}}},"id":4507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2279:6:24","memberName":"concat","nodeType":"MemberAccess","src":"2273:12:24","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2273:96:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4504,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2263:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2263:107:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4503,"id":4520,"nodeType":"Return","src":"2244:126:24"}]},"documentation":{"id":4497,"nodeType":"StructuredDocumentation","src":"1688:455:24","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":4522,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2157:22:24","nodeType":"FunctionDefinition","parameters":{"id":4500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4499,"mutability":"mutable","name":"message","nameLocation":"2193:7:24","nodeType":"VariableDeclaration","scope":4522,"src":"2180:20:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4498,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2179:22:24"},"returnParameters":{"id":4503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4502,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4522,"src":"2225:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4501,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2225:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2224:9:24"},"scope":4555,"src":"2148:229:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4541,"nodeType":"Block","src":"2831:80:24","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":4535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2875:10:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":4536,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4525,"src":"2887:9:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4537,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4527,"src":"2898:4:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4533,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2858:3:24","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2862:12:24","memberName":"encodePacked","nodeType":"MemberAccess","src":"2858:16:24","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2858:45:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4532,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2848:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2848:56:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4531,"id":4540,"nodeType":"Return","src":"2841:63:24"}]},"documentation":{"id":4523,"nodeType":"StructuredDocumentation","src":"2383:332:24","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":4542,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2729:31:24","nodeType":"FunctionDefinition","parameters":{"id":4528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4525,"mutability":"mutable","name":"validator","nameLocation":"2769:9:24","nodeType":"VariableDeclaration","scope":4542,"src":"2761:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4524,"name":"address","nodeType":"ElementaryTypeName","src":"2761:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4527,"mutability":"mutable","name":"data","nameLocation":"2793:4:24","nodeType":"VariableDeclaration","scope":4542,"src":"2780:17:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4526,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2760:38:24"},"returnParameters":{"id":4531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4530,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4542,"src":"2822:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4529,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2822:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2821:9:24"},"scope":4555,"src":"2720:191:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4553,"nodeType":"Block","src":"3462:292:24","statements":[{"AST":{"nodeType":"YulBlock","src":"3524:224:24","statements":[{"nodeType":"YulVariableDeclaration","src":"3538:22:24","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3555:4:24","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3549:5:24"},"nodeType":"YulFunctionCall","src":"3549:11:24"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"3542:3:24","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3580:3:24"},{"hexValue":"1901","kind":"string","nodeType":"YulLiteral","src":"3585:10:24","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3573:6:24"},"nodeType":"YulFunctionCall","src":"3573:23:24"},"nodeType":"YulExpressionStatement","src":"3573:23:24"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3620:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"3625:4:24","type":"","value":"0x02"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3616:3:24"},"nodeType":"YulFunctionCall","src":"3616:14:24"},{"name":"domainSeparator","nodeType":"YulIdentifier","src":"3632:15:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3609:6:24"},"nodeType":"YulFunctionCall","src":"3609:39:24"},"nodeType":"YulExpressionStatement","src":"3609:39:24"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3672:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"3677:4:24","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3668:3:24"},"nodeType":"YulFunctionCall","src":"3668:14:24"},{"name":"structHash","nodeType":"YulIdentifier","src":"3684:10:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3661:6:24"},"nodeType":"YulFunctionCall","src":"3661:34:24"},"nodeType":"YulExpressionStatement","src":"3661:34:24"},{"nodeType":"YulAssignment","src":"3708:30:24","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3728:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"3733:4:24","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3718:9:24"},"nodeType":"YulFunctionCall","src":"3718:20:24"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"3708:6:24"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":4550,"isOffset":false,"isSlot":false,"src":"3708:6:24","valueSize":1},{"declaration":4545,"isOffset":false,"isSlot":false,"src":"3632:15:24","valueSize":1},{"declaration":4547,"isOffset":false,"isSlot":false,"src":"3684:10:24","valueSize":1}],"id":4552,"nodeType":"InlineAssembly","src":"3515:233:24"}]},"documentation":{"id":4543,"nodeType":"StructuredDocumentation","src":"2917:431:24","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":4554,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3362:15:24","nodeType":"FunctionDefinition","parameters":{"id":4548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4545,"mutability":"mutable","name":"domainSeparator","nameLocation":"3386:15:24","nodeType":"VariableDeclaration","scope":4554,"src":"3378:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4544,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3378:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4547,"mutability":"mutable","name":"structHash","nameLocation":"3411:10:24","nodeType":"VariableDeclaration","scope":4554,"src":"3403:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4546,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3403:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3377:45:24"},"returnParameters":{"id":4551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4550,"mutability":"mutable","name":"digest","nameLocation":"3454:6:24","nodeType":"VariableDeclaration","scope":4554,"src":"3446:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4549,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3446:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3445:16:24"},"scope":4555,"src":"3353:401:24","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4556,"src":"521:3235:24","usedErrors":[],"usedEvents":[]}],"src":"123:3634:24"},"id":24},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[4579],"IERC165":[4591]},"id":4580,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4557,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:25"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":4559,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4580,"sourceUnit":4592,"src":"140:38:25","symbolAliases":[{"foreign":{"id":4558,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4591,"src":"148:7:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4561,"name":"IERC165","nameLocations":["687:7:25"],"nodeType":"IdentifierPath","referencedDeclaration":4591,"src":"687:7:25"},"id":4562,"nodeType":"InheritanceSpecifier","src":"687:7:25"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":4560,"nodeType":"StructuredDocumentation","src":"180:478:25","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":4579,"linearizedBaseContracts":[4579,4591],"name":"ERC165","nameLocation":"677:6:25","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[4590],"body":{"id":4577,"nodeType":"Block","src":"844:64:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":4575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4570,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4565,"src":"861:11:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":4572,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4591,"src":"881:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$4591_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$4591_$","typeString":"type(contract IERC165)"}],"id":4571,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"876:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"876:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$4591","typeString":"type(contract IERC165)"}},"id":4574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"890:11:25","memberName":"interfaceId","nodeType":"MemberAccess","src":"876:25:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"861:40:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4569,"id":4576,"nodeType":"Return","src":"854:47:25"}]},"documentation":{"id":4563,"nodeType":"StructuredDocumentation","src":"701:56:25","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":4578,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"771:17:25","nodeType":"FunctionDefinition","parameters":{"id":4566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4565,"mutability":"mutable","name":"interfaceId","nameLocation":"796:11:25","nodeType":"VariableDeclaration","scope":4578,"src":"789:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4564,"name":"bytes4","nodeType":"ElementaryTypeName","src":"789:6:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"788:20:25"},"returnParameters":{"id":4569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4568,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4578,"src":"838:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4567,"name":"bool","nodeType":"ElementaryTypeName","src":"838:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"837:6:25"},"scope":4579,"src":"762:146:25","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":4580,"src":"659:251:25","usedErrors":[],"usedEvents":[]}],"src":"114:797:25"},"id":25},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[4591]},"id":4592,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4581,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:26"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":4582,"nodeType":"StructuredDocumentation","src":"141:279:26","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":4591,"linearizedBaseContracts":[4591],"name":"IERC165","nameLocation":"431:7:26","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4583,"nodeType":"StructuredDocumentation","src":"445:340:26","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":4590,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"799:17:26","nodeType":"FunctionDefinition","parameters":{"id":4586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4585,"mutability":"mutable","name":"interfaceId","nameLocation":"824:11:26","nodeType":"VariableDeclaration","scope":4590,"src":"817:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4584,"name":"bytes4","nodeType":"ElementaryTypeName","src":"817:6:26","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"816:20:26"},"returnParameters":{"id":4589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4588,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4590,"src":"860:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4587,"name":"bool","nodeType":"ElementaryTypeName","src":"860:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"859:6:26"},"scope":4591,"src":"790:76:26","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4592,"src":"421:447:26","usedErrors":[],"usedEvents":[]}],"src":"115:754:26"},"id":26},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[5645]},"id":5646,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4593,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:27"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":4594,"nodeType":"StructuredDocumentation","src":"129:73:27","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5645,"linearizedBaseContracts":[5645],"name":"Math","nameLocation":"211:4:27","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4595,"nodeType":"StructuredDocumentation","src":"222:50:27","text":" @dev Muldiv operation overflow."},"errorSelector":"227bc153","id":4597,"name":"MathOverflowedMulDiv","nameLocation":"283:20:27","nodeType":"ErrorDefinition","parameters":{"id":4596,"nodeType":"ParameterList","parameters":[],"src":"303:2:27"},"src":"277:29:27"},{"canonicalName":"Math.Rounding","id":4602,"members":[{"id":4598,"name":"Floor","nameLocation":"336:5:27","nodeType":"EnumValue","src":"336:5:27"},{"id":4599,"name":"Ceil","nameLocation":"379:4:27","nodeType":"EnumValue","src":"379:4:27"},{"id":4600,"name":"Trunc","nameLocation":"421:5:27","nodeType":"EnumValue","src":"421:5:27"},{"id":4601,"name":"Expand","nameLocation":"451:6:27","nodeType":"EnumValue","src":"451:6:27"}],"name":"Rounding","nameLocation":"317:8:27","nodeType":"EnumDefinition","src":"312:169:27"},{"body":{"id":4633,"nodeType":"Block","src":"661:140:27","statements":[{"id":4632,"nodeType":"UncheckedBlock","src":"671:124:27","statements":[{"assignments":[4615],"declarations":[{"constant":false,"id":4615,"mutability":"mutable","name":"c","nameLocation":"703:1:27","nodeType":"VariableDeclaration","scope":4632,"src":"695:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4614,"name":"uint256","nodeType":"ElementaryTypeName","src":"695:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4619,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4616,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4605,"src":"707:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4617,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4607,"src":"711:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"707:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"695:17:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4620,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4615,"src":"730:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4621,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4605,"src":"734:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"730:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4627,"nodeType":"IfStatement","src":"726:28:27","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"745:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"752:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4625,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"744:10:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4613,"id":4626,"nodeType":"Return","src":"737:17:27"}},{"expression":{"components":[{"hexValue":"74727565","id":4628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"776:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":4629,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4615,"src":"782:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4630,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"775:9:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4613,"id":4631,"nodeType":"Return","src":"768:16:27"}]}]},"documentation":{"id":4603,"nodeType":"StructuredDocumentation","src":"487:93:27","text":" @dev Returns the addition of two unsigned integers, with an overflow flag."},"id":4634,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"594:6:27","nodeType":"FunctionDefinition","parameters":{"id":4608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4605,"mutability":"mutable","name":"a","nameLocation":"609:1:27","nodeType":"VariableDeclaration","scope":4634,"src":"601:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4604,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4607,"mutability":"mutable","name":"b","nameLocation":"620:1:27","nodeType":"VariableDeclaration","scope":4634,"src":"612:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4606,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:27"},"returnParameters":{"id":4613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4610,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4634,"src":"646:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4609,"name":"bool","nodeType":"ElementaryTypeName","src":"646:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4612,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4634,"src":"652:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4611,"name":"uint256","nodeType":"ElementaryTypeName","src":"652:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:15:27"},"scope":5645,"src":"585:216:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4661,"nodeType":"Block","src":"984:113:27","statements":[{"id":4660,"nodeType":"UncheckedBlock","src":"994:97:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4646,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4639,"src":"1022:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4647,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"1026:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1022:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4653,"nodeType":"IfStatement","src":"1018:28:27","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1037:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4651,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1036:10:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4645,"id":4652,"nodeType":"Return","src":"1029:17:27"}},{"expression":{"components":[{"hexValue":"74727565","id":4654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1068:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4655,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"1074:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4656,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4639,"src":"1078:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1074:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4658,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1067:13:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4645,"id":4659,"nodeType":"Return","src":"1060:20:27"}]}]},"documentation":{"id":4635,"nodeType":"StructuredDocumentation","src":"807:96:27","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag."},"id":4662,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"917:6:27","nodeType":"FunctionDefinition","parameters":{"id":4640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4637,"mutability":"mutable","name":"a","nameLocation":"932:1:27","nodeType":"VariableDeclaration","scope":4662,"src":"924:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4636,"name":"uint256","nodeType":"ElementaryTypeName","src":"924:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4639,"mutability":"mutable","name":"b","nameLocation":"943:1:27","nodeType":"VariableDeclaration","scope":4662,"src":"935:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4638,"name":"uint256","nodeType":"ElementaryTypeName","src":"935:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"923:22:27"},"returnParameters":{"id":4645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4642,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4662,"src":"969:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4641,"name":"bool","nodeType":"ElementaryTypeName","src":"969:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4644,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4662,"src":"975:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4643,"name":"uint256","nodeType":"ElementaryTypeName","src":"975:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"968:15:27"},"scope":5645,"src":"908:189:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4703,"nodeType":"Block","src":"1283:417:27","statements":[{"id":4702,"nodeType":"UncheckedBlock","src":"1293:401:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4674,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4665,"src":"1551:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1556:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1551:6:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4681,"nodeType":"IfStatement","src":"1547:28:27","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":4677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1567:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":4678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1573:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4679,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1566:9:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4673,"id":4680,"nodeType":"Return","src":"1559:16:27"}},{"assignments":[4683],"declarations":[{"constant":false,"id":4683,"mutability":"mutable","name":"c","nameLocation":"1597:1:27","nodeType":"VariableDeclaration","scope":4702,"src":"1589:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4682,"name":"uint256","nodeType":"ElementaryTypeName","src":"1589:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4687,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4684,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4665,"src":"1601:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4685,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4667,"src":"1605:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1601:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1589:17:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4688,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4683,"src":"1624:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4689,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4665,"src":"1628:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4691,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4667,"src":"1633:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:10:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4697,"nodeType":"IfStatement","src":"1620:33:27","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1644:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1651:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4695,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1643:10:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4673,"id":4696,"nodeType":"Return","src":"1636:17:27"}},{"expression":{"components":[{"hexValue":"74727565","id":4698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1675:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":4699,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4683,"src":"1681:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4700,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1674:9:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4673,"id":4701,"nodeType":"Return","src":"1667:16:27"}]}]},"documentation":{"id":4663,"nodeType":"StructuredDocumentation","src":"1103:99:27","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag."},"id":4704,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1216:6:27","nodeType":"FunctionDefinition","parameters":{"id":4668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4665,"mutability":"mutable","name":"a","nameLocation":"1231:1:27","nodeType":"VariableDeclaration","scope":4704,"src":"1223:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4664,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4667,"mutability":"mutable","name":"b","nameLocation":"1242:1:27","nodeType":"VariableDeclaration","scope":4704,"src":"1234:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4666,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:22:27"},"returnParameters":{"id":4673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4670,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4704,"src":"1268:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4669,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4672,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4704,"src":"1274:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4671,"name":"uint256","nodeType":"ElementaryTypeName","src":"1274:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1267:15:27"},"scope":5645,"src":"1207:493:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4731,"nodeType":"Block","src":"1887:114:27","statements":[{"id":4730,"nodeType":"UncheckedBlock","src":"1897:98:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4716,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4709,"src":"1925:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1930:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1925:6:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4723,"nodeType":"IfStatement","src":"1921:29:27","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1941:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1948:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4721,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1940:10:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4715,"id":4722,"nodeType":"Return","src":"1933:17:27"}},{"expression":{"components":[{"hexValue":"74727565","id":4724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1972:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4725,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4707,"src":"1978:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4726,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4709,"src":"1982:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1978:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4728,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1971:13:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4715,"id":4729,"nodeType":"Return","src":"1964:20:27"}]}]},"documentation":{"id":4705,"nodeType":"StructuredDocumentation","src":"1706:100:27","text":" @dev Returns the division of two unsigned integers, with a division by zero flag."},"id":4732,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1820:6:27","nodeType":"FunctionDefinition","parameters":{"id":4710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4707,"mutability":"mutable","name":"a","nameLocation":"1835:1:27","nodeType":"VariableDeclaration","scope":4732,"src":"1827:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4706,"name":"uint256","nodeType":"ElementaryTypeName","src":"1827:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4709,"mutability":"mutable","name":"b","nameLocation":"1846:1:27","nodeType":"VariableDeclaration","scope":4732,"src":"1838:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4708,"name":"uint256","nodeType":"ElementaryTypeName","src":"1838:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1826:22:27"},"returnParameters":{"id":4715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4712,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4732,"src":"1872:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4711,"name":"bool","nodeType":"ElementaryTypeName","src":"1872:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4714,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4732,"src":"1878:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4713,"name":"uint256","nodeType":"ElementaryTypeName","src":"1878:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1871:15:27"},"scope":5645,"src":"1811:190:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4759,"nodeType":"Block","src":"2198:114:27","statements":[{"id":4758,"nodeType":"UncheckedBlock","src":"2208:98:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4744,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4737,"src":"2236:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2241:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2236:6:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4751,"nodeType":"IfStatement","src":"2232:29:27","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2252:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2259:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4749,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2251:10:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4743,"id":4750,"nodeType":"Return","src":"2244:17:27"}},{"expression":{"components":[{"hexValue":"74727565","id":4752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2283:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4753,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4735,"src":"2289:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4754,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4737,"src":"2293:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2289:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4756,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2282:13:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4743,"id":4757,"nodeType":"Return","src":"2275:20:27"}]}]},"documentation":{"id":4733,"nodeType":"StructuredDocumentation","src":"2007:110:27","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."},"id":4760,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2131:6:27","nodeType":"FunctionDefinition","parameters":{"id":4738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4735,"mutability":"mutable","name":"a","nameLocation":"2146:1:27","nodeType":"VariableDeclaration","scope":4760,"src":"2138:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4734,"name":"uint256","nodeType":"ElementaryTypeName","src":"2138:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4737,"mutability":"mutable","name":"b","nameLocation":"2157:1:27","nodeType":"VariableDeclaration","scope":4760,"src":"2149:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4736,"name":"uint256","nodeType":"ElementaryTypeName","src":"2149:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2137:22:27"},"returnParameters":{"id":4743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4740,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4760,"src":"2183:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4739,"name":"bool","nodeType":"ElementaryTypeName","src":"2183:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4742,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4760,"src":"2189:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4741,"name":"uint256","nodeType":"ElementaryTypeName","src":"2189:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2182:15:27"},"scope":5645,"src":"2122:190:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4777,"nodeType":"Block","src":"2449:37:27","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4770,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4763,"src":"2466:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4771,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4765,"src":"2470:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2466:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4774,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4765,"src":"2478:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2466:13:27","trueExpression":{"id":4773,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4763,"src":"2474:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4769,"id":4776,"nodeType":"Return","src":"2459:20:27"}]},"documentation":{"id":4761,"nodeType":"StructuredDocumentation","src":"2318:59:27","text":" @dev Returns the largest of two numbers."},"id":4778,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"2391:3:27","nodeType":"FunctionDefinition","parameters":{"id":4766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4763,"mutability":"mutable","name":"a","nameLocation":"2403:1:27","nodeType":"VariableDeclaration","scope":4778,"src":"2395:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4762,"name":"uint256","nodeType":"ElementaryTypeName","src":"2395:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4765,"mutability":"mutable","name":"b","nameLocation":"2414:1:27","nodeType":"VariableDeclaration","scope":4778,"src":"2406:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4764,"name":"uint256","nodeType":"ElementaryTypeName","src":"2406:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2394:22:27"},"returnParameters":{"id":4769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4768,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4778,"src":"2440:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4767,"name":"uint256","nodeType":"ElementaryTypeName","src":"2440:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2439:9:27"},"scope":5645,"src":"2382:104:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4795,"nodeType":"Block","src":"2624:37:27","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4788,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4781,"src":"2641:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4789,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"2645:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2641:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4792,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"2653:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2641:13:27","trueExpression":{"id":4791,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4781,"src":"2649:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4787,"id":4794,"nodeType":"Return","src":"2634:20:27"}]},"documentation":{"id":4779,"nodeType":"StructuredDocumentation","src":"2492:60:27","text":" @dev Returns the smallest of two numbers."},"id":4796,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"2566:3:27","nodeType":"FunctionDefinition","parameters":{"id":4784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4781,"mutability":"mutable","name":"a","nameLocation":"2578:1:27","nodeType":"VariableDeclaration","scope":4796,"src":"2570:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4780,"name":"uint256","nodeType":"ElementaryTypeName","src":"2570:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4783,"mutability":"mutable","name":"b","nameLocation":"2589:1:27","nodeType":"VariableDeclaration","scope":4796,"src":"2581:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4782,"name":"uint256","nodeType":"ElementaryTypeName","src":"2581:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2569:22:27"},"returnParameters":{"id":4787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4786,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4796,"src":"2615:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4785,"name":"uint256","nodeType":"ElementaryTypeName","src":"2615:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2614:9:27"},"scope":5645,"src":"2557:104:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4818,"nodeType":"Block","src":"2845:82:27","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4806,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4799,"src":"2900:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4807,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"2904:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2900:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4809,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2899:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4810,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4799,"src":"2910:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4811,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"2914:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2910:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4813,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2909:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":4814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2919:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2909:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2899:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4805,"id":4817,"nodeType":"Return","src":"2892:28:27"}]},"documentation":{"id":4797,"nodeType":"StructuredDocumentation","src":"2667:102:27","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":4819,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"2783:7:27","nodeType":"FunctionDefinition","parameters":{"id":4802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4799,"mutability":"mutable","name":"a","nameLocation":"2799:1:27","nodeType":"VariableDeclaration","scope":4819,"src":"2791:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4798,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4801,"mutability":"mutable","name":"b","nameLocation":"2810:1:27","nodeType":"VariableDeclaration","scope":4819,"src":"2802:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4800,"name":"uint256","nodeType":"ElementaryTypeName","src":"2802:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2790:22:27"},"returnParameters":{"id":4805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4804,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4819,"src":"2836:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4803,"name":"uint256","nodeType":"ElementaryTypeName","src":"2836:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2835:9:27"},"scope":5645,"src":"2774:153:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4852,"nodeType":"Block","src":"3219:260:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4829,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4824,"src":"3233:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3238:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3233:6:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4837,"nodeType":"IfStatement","src":"3229:127:27","trueBody":{"id":4836,"nodeType":"Block","src":"3241:115:27","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4832,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4822,"src":"3340:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4833,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4824,"src":"3344:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3340:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4828,"id":4835,"nodeType":"Return","src":"3333:12:27"}]}},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4838,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4822,"src":"3444:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3449:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3444:6:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4842,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4822,"src":"3458:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3462:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3458:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4845,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3457:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4846,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4824,"src":"3467:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3457:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3471:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3457:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3444:28:27","trueExpression":{"hexValue":"30","id":4841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3453:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4828,"id":4851,"nodeType":"Return","src":"3437:35:27"}]},"documentation":{"id":4820,"nodeType":"StructuredDocumentation","src":"2933:210:27","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":4853,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3157:7:27","nodeType":"FunctionDefinition","parameters":{"id":4825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4822,"mutability":"mutable","name":"a","nameLocation":"3173:1:27","nodeType":"VariableDeclaration","scope":4853,"src":"3165:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4821,"name":"uint256","nodeType":"ElementaryTypeName","src":"3165:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4824,"mutability":"mutable","name":"b","nameLocation":"3184:1:27","nodeType":"VariableDeclaration","scope":4853,"src":"3176:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4823,"name":"uint256","nodeType":"ElementaryTypeName","src":"3176:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3164:22:27"},"returnParameters":{"id":4828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4827,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4853,"src":"3210:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4826,"name":"uint256","nodeType":"ElementaryTypeName","src":"3210:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3209:9:27"},"scope":5645,"src":"3148:331:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4978,"nodeType":"Block","src":"3901:4018:27","statements":[{"id":4977,"nodeType":"UncheckedBlock","src":"3911:4002:27","statements":[{"assignments":[4866],"declarations":[{"constant":false,"id":4866,"mutability":"mutable","name":"prod0","nameLocation":"4240:5:27","nodeType":"VariableDeclaration","scope":4977,"src":"4232:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4865,"name":"uint256","nodeType":"ElementaryTypeName","src":"4232:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4870,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4867,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4856,"src":"4248:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4868,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4858,"src":"4252:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4248:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4232:21:27"},{"assignments":[4872],"declarations":[{"constant":false,"id":4872,"mutability":"mutable","name":"prod1","nameLocation":"4320:5:27","nodeType":"VariableDeclaration","scope":4977,"src":"4312:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4871,"name":"uint256","nodeType":"ElementaryTypeName","src":"4312:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4873,"nodeType":"VariableDeclarationStatement","src":"4312:13:27"},{"AST":{"nodeType":"YulBlock","src":"4392:122:27","statements":[{"nodeType":"YulVariableDeclaration","src":"4410:30:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4427:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"4430:1:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4437:1:27","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4433:3:27"},"nodeType":"YulFunctionCall","src":"4433:6:27"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"4420:6:27"},"nodeType":"YulFunctionCall","src":"4420:20:27"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"4414:2:27","type":""}]},{"nodeType":"YulAssignment","src":"4457:43:27","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"4474:2:27"},{"name":"prod0","nodeType":"YulIdentifier","src":"4478:5:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4470:3:27"},"nodeType":"YulFunctionCall","src":"4470:14:27"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"4489:2:27"},{"name":"prod0","nodeType":"YulIdentifier","src":"4493:5:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4486:2:27"},"nodeType":"YulFunctionCall","src":"4486:13:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4466:3:27"},"nodeType":"YulFunctionCall","src":"4466:34:27"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"4457:5:27"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4866,"isOffset":false,"isSlot":false,"src":"4478:5:27","valueSize":1},{"declaration":4866,"isOffset":false,"isSlot":false,"src":"4493:5:27","valueSize":1},{"declaration":4872,"isOffset":false,"isSlot":false,"src":"4457:5:27","valueSize":1},{"declaration":4856,"isOffset":false,"isSlot":false,"src":"4427:1:27","valueSize":1},{"declaration":4858,"isOffset":false,"isSlot":false,"src":"4430:1:27","valueSize":1}],"id":4874,"nodeType":"InlineAssembly","src":"4383:131:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4875,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4872,"src":"4595:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4604:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4595:10:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4883,"nodeType":"IfStatement","src":"4591:368:27","trueBody":{"id":4882,"nodeType":"Block","src":"4607:352:27","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4878,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4866,"src":"4925:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4879,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4860,"src":"4933:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4925:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4864,"id":4881,"nodeType":"Return","src":"4918:26:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4884,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4860,"src":"5065:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4885,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4872,"src":"5080:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:20:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4891,"nodeType":"IfStatement","src":"5061:88:27","trueBody":{"id":4890,"nodeType":"Block","src":"5087:62:27","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4887,"name":"MathOverflowedMulDiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"5112:20:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5112:22:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4889,"nodeType":"RevertStatement","src":"5105:29:27"}]}},{"assignments":[4893],"declarations":[{"constant":false,"id":4893,"mutability":"mutable","name":"remainder","nameLocation":"5412:9:27","nodeType":"VariableDeclaration","scope":4977,"src":"5404:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4892,"name":"uint256","nodeType":"ElementaryTypeName","src":"5404:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4894,"nodeType":"VariableDeclarationStatement","src":"5404:17:27"},{"AST":{"nodeType":"YulBlock","src":"5444:291:27","statements":[{"nodeType":"YulAssignment","src":"5513:38:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5533:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"5536:1:27"},{"name":"denominator","nodeType":"YulIdentifier","src":"5539:11:27"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"5526:6:27"},"nodeType":"YulFunctionCall","src":"5526:25:27"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"5513:9:27"}]},{"nodeType":"YulAssignment","src":"5633:41:27","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"5646:5:27"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"5656:9:27"},{"name":"prod0","nodeType":"YulIdentifier","src":"5667:5:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5653:2:27"},"nodeType":"YulFunctionCall","src":"5653:20:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5642:3:27"},"nodeType":"YulFunctionCall","src":"5642:32:27"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"5633:5:27"}]},{"nodeType":"YulAssignment","src":"5691:30:27","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"5704:5:27"},{"name":"remainder","nodeType":"YulIdentifier","src":"5711:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5700:3:27"},"nodeType":"YulFunctionCall","src":"5700:21:27"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"5691:5:27"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4860,"isOffset":false,"isSlot":false,"src":"5539:11:27","valueSize":1},{"declaration":4866,"isOffset":false,"isSlot":false,"src":"5667:5:27","valueSize":1},{"declaration":4866,"isOffset":false,"isSlot":false,"src":"5691:5:27","valueSize":1},{"declaration":4866,"isOffset":false,"isSlot":false,"src":"5704:5:27","valueSize":1},{"declaration":4872,"isOffset":false,"isSlot":false,"src":"5633:5:27","valueSize":1},{"declaration":4872,"isOffset":false,"isSlot":false,"src":"5646:5:27","valueSize":1},{"declaration":4893,"isOffset":false,"isSlot":false,"src":"5513:9:27","valueSize":1},{"declaration":4893,"isOffset":false,"isSlot":false,"src":"5656:9:27","valueSize":1},{"declaration":4893,"isOffset":false,"isSlot":false,"src":"5711:9:27","valueSize":1},{"declaration":4856,"isOffset":false,"isSlot":false,"src":"5533:1:27","valueSize":1},{"declaration":4858,"isOffset":false,"isSlot":false,"src":"5536:1:27","valueSize":1}],"id":4895,"nodeType":"InlineAssembly","src":"5435:300:27"},{"assignments":[4897],"declarations":[{"constant":false,"id":4897,"mutability":"mutable","name":"twos","nameLocation":"5947:4:27","nodeType":"VariableDeclaration","scope":4977,"src":"5939:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4896,"name":"uint256","nodeType":"ElementaryTypeName","src":"5939:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4904,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4898,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4860,"src":"5954:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":4899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5969:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4900,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4860,"src":"5973:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5969:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4902,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5968:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5954:31:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5939:46:27"},{"AST":{"nodeType":"YulBlock","src":"6008:362:27","statements":[{"nodeType":"YulAssignment","src":"6073:37:27","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"6092:11:27"},{"name":"twos","nodeType":"YulIdentifier","src":"6105:4:27"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6088:3:27"},"nodeType":"YulFunctionCall","src":"6088:22:27"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"6073:11:27"}]},{"nodeType":"YulAssignment","src":"6177:25:27","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"6190:5:27"},{"name":"twos","nodeType":"YulIdentifier","src":"6197:4:27"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6186:3:27"},"nodeType":"YulFunctionCall","src":"6186:16:27"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"6177:5:27"}]},{"nodeType":"YulAssignment","src":"6317:39:27","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6337:1:27","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"6340:4:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6333:3:27"},"nodeType":"YulFunctionCall","src":"6333:12:27"},{"name":"twos","nodeType":"YulIdentifier","src":"6347:4:27"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6329:3:27"},"nodeType":"YulFunctionCall","src":"6329:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"6354:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6325:3:27"},"nodeType":"YulFunctionCall","src":"6325:31:27"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"6317:4:27"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4860,"isOffset":false,"isSlot":false,"src":"6073:11:27","valueSize":1},{"declaration":4860,"isOffset":false,"isSlot":false,"src":"6092:11:27","valueSize":1},{"declaration":4866,"isOffset":false,"isSlot":false,"src":"6177:5:27","valueSize":1},{"declaration":4866,"isOffset":false,"isSlot":false,"src":"6190:5:27","valueSize":1},{"declaration":4897,"isOffset":false,"isSlot":false,"src":"6105:4:27","valueSize":1},{"declaration":4897,"isOffset":false,"isSlot":false,"src":"6197:4:27","valueSize":1},{"declaration":4897,"isOffset":false,"isSlot":false,"src":"6317:4:27","valueSize":1},{"declaration":4897,"isOffset":false,"isSlot":false,"src":"6340:4:27","valueSize":1},{"declaration":4897,"isOffset":false,"isSlot":false,"src":"6347:4:27","valueSize":1}],"id":4905,"nodeType":"InlineAssembly","src":"5999:371:27"},{"expression":{"id":4910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4906,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4866,"src":"6436:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4907,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4872,"src":"6445:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4908,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4897,"src":"6453:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6445:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6436:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4911,"nodeType":"ExpressionStatement","src":"6436:21:27"},{"assignments":[4913],"declarations":[{"constant":false,"id":4913,"mutability":"mutable","name":"inverse","nameLocation":"6783:7:27","nodeType":"VariableDeclaration","scope":4977,"src":"6775:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4912,"name":"uint256","nodeType":"ElementaryTypeName","src":"6775:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4920,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6794:1:27","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4915,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4860,"src":"6798:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6794:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4917,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6793:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":4918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6813:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"6793:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6775:39:27"},{"expression":{"id":4927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4921,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4913,"src":"7031:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7042:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4923,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4860,"src":"7046:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4924,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4913,"src":"7060:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7046:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7042:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7031:36:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4928,"nodeType":"ExpressionStatement","src":"7031:36:27"},{"expression":{"id":4935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4929,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4913,"src":"7100:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7111:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4931,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4860,"src":"7115:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4932,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4913,"src":"7129:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7115:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7111:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7100:36:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4936,"nodeType":"ExpressionStatement","src":"7100:36:27"},{"expression":{"id":4943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4937,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4913,"src":"7170:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7181:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4939,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4860,"src":"7185:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4940,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4913,"src":"7199:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7185:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7181:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7170:36:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4944,"nodeType":"ExpressionStatement","src":"7170:36:27"},{"expression":{"id":4951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4945,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4913,"src":"7240:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7251:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4947,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4860,"src":"7255:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4948,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4913,"src":"7269:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7255:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7251:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7240:36:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4952,"nodeType":"ExpressionStatement","src":"7240:36:27"},{"expression":{"id":4959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4953,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4913,"src":"7310:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7321:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4955,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4860,"src":"7325:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4956,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4913,"src":"7339:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7325:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7321:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7310:36:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4960,"nodeType":"ExpressionStatement","src":"7310:36:27"},{"expression":{"id":4967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4961,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4913,"src":"7381:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7392:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4963,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4860,"src":"7396:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4964,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4913,"src":"7410:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7396:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7392:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7381:36:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4968,"nodeType":"ExpressionStatement","src":"7381:36:27"},{"expression":{"id":4973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4969,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4863,"src":"7851:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4970,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4866,"src":"7860:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4971,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4913,"src":"7868:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7860:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7851:24:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4974,"nodeType":"ExpressionStatement","src":"7851:24:27"},{"expression":{"id":4975,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4863,"src":"7896:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4864,"id":4976,"nodeType":"Return","src":"7889:13:27"}]}]},"documentation":{"id":4854,"nodeType":"StructuredDocumentation","src":"3485:313:27","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":4979,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"3812:6:27","nodeType":"FunctionDefinition","parameters":{"id":4861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4856,"mutability":"mutable","name":"x","nameLocation":"3827:1:27","nodeType":"VariableDeclaration","scope":4979,"src":"3819:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4855,"name":"uint256","nodeType":"ElementaryTypeName","src":"3819:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4858,"mutability":"mutable","name":"y","nameLocation":"3838:1:27","nodeType":"VariableDeclaration","scope":4979,"src":"3830:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4857,"name":"uint256","nodeType":"ElementaryTypeName","src":"3830:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4860,"mutability":"mutable","name":"denominator","nameLocation":"3849:11:27","nodeType":"VariableDeclaration","scope":4979,"src":"3841:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4859,"name":"uint256","nodeType":"ElementaryTypeName","src":"3841:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3818:43:27"},"returnParameters":{"id":4864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4863,"mutability":"mutable","name":"result","nameLocation":"3893:6:27","nodeType":"VariableDeclaration","scope":4979,"src":"3885:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4862,"name":"uint256","nodeType":"ElementaryTypeName","src":"3885:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3884:16:27"},"scope":5645,"src":"3803:4116:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5021,"nodeType":"Block","src":"8161:192:27","statements":[{"assignments":[4995],"declarations":[{"constant":false,"id":4995,"mutability":"mutable","name":"result","nameLocation":"8179:6:27","nodeType":"VariableDeclaration","scope":5021,"src":"8171:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4994,"name":"uint256","nodeType":"ElementaryTypeName","src":"8171:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5001,"initialValue":{"arguments":[{"id":4997,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4982,"src":"8195:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4998,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4984,"src":"8198:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4999,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"8201:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4996,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[4979,5022],"referencedDeclaration":4979,"src":"8188:6:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8188:25:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8171:42:27"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5003,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4989,"src":"8244:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4602","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4602","typeString":"enum Math.Rounding"}],"id":5002,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5644,"src":"8227:16:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4602_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8227:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5006,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4982,"src":"8264:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5007,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4984,"src":"8267:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5008,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"8270:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5005,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"8257:6:27","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8257:25:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8285:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8257:29:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8227:59:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5018,"nodeType":"IfStatement","src":"8223:101:27","trueBody":{"id":5017,"nodeType":"Block","src":"8288:36:27","statements":[{"expression":{"id":5015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5013,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4995,"src":"8302:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8312:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8302:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5016,"nodeType":"ExpressionStatement","src":"8302:11:27"}]}},{"expression":{"id":5019,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4995,"src":"8340:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4993,"id":5020,"nodeType":"Return","src":"8333:13:27"}]},"documentation":{"id":4980,"nodeType":"StructuredDocumentation","src":"7925:121:27","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":5022,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"8060:6:27","nodeType":"FunctionDefinition","parameters":{"id":4990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4982,"mutability":"mutable","name":"x","nameLocation":"8075:1:27","nodeType":"VariableDeclaration","scope":5022,"src":"8067:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4981,"name":"uint256","nodeType":"ElementaryTypeName","src":"8067:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4984,"mutability":"mutable","name":"y","nameLocation":"8086:1:27","nodeType":"VariableDeclaration","scope":5022,"src":"8078:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4983,"name":"uint256","nodeType":"ElementaryTypeName","src":"8078:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4986,"mutability":"mutable","name":"denominator","nameLocation":"8097:11:27","nodeType":"VariableDeclaration","scope":5022,"src":"8089:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4985,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4989,"mutability":"mutable","name":"rounding","nameLocation":"8119:8:27","nodeType":"VariableDeclaration","scope":5022,"src":"8110:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4602","typeString":"enum Math.Rounding"},"typeName":{"id":4988,"nodeType":"UserDefinedTypeName","pathNode":{"id":4987,"name":"Rounding","nameLocations":["8110:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":4602,"src":"8110:8:27"},"referencedDeclaration":4602,"src":"8110:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4602","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8066:62:27"},"returnParameters":{"id":4993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4992,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5022,"src":"8152:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4991,"name":"uint256","nodeType":"ElementaryTypeName","src":"8152:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8151:9:27"},"scope":5645,"src":"8051:302:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5133,"nodeType":"Block","src":"8644:1585:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5030,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5025,"src":"8658:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8658:6:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5036,"nodeType":"IfStatement","src":"8654:45:27","trueBody":{"id":5035,"nodeType":"Block","src":"8666:33:27","statements":[{"expression":{"hexValue":"30","id":5033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8687:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":5029,"id":5034,"nodeType":"Return","src":"8680:8:27"}]}},{"assignments":[5038],"declarations":[{"constant":false,"id":5038,"mutability":"mutable","name":"result","nameLocation":"9386:6:27","nodeType":"VariableDeclaration","scope":5133,"src":"9378:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5037,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5047,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9395:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5041,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5025,"src":"9406:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5040,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[5301,5336],"referencedDeclaration":5301,"src":"9401:4:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9401:7:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9412:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9401:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5045,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9400:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9395:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9378:36:27"},{"id":5132,"nodeType":"UncheckedBlock","src":"9815:408:27","statements":[{"expression":{"id":5057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5048,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5038,"src":"9839:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5049,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5038,"src":"9849:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5050,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5025,"src":"9858:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5051,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5038,"src":"9862:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9858:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9849:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5054,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9848:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9873:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9848:26:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9839:35:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5058,"nodeType":"ExpressionStatement","src":"9839:35:27"},{"expression":{"id":5068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5059,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5038,"src":"9888:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5060,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5038,"src":"9898:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5061,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5025,"src":"9907:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5062,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5038,"src":"9911:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9907:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9898:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5065,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9897:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9922:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9897:26:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9888:35:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5069,"nodeType":"ExpressionStatement","src":"9888:35:27"},{"expression":{"id":5079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5070,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5038,"src":"9937:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5071,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5038,"src":"9947:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5072,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5025,"src":"9956:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5073,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5038,"src":"9960:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9956:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9947:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5076,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9946:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9971:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:26:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9937:35:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5080,"nodeType":"ExpressionStatement","src":"9937:35:27"},{"expression":{"id":5090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5081,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5038,"src":"9986:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5082,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5038,"src":"9996:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5083,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5025,"src":"10005:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5084,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5038,"src":"10009:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10005:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9996:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5087,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9995:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10020:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9995:26:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9986:35:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5091,"nodeType":"ExpressionStatement","src":"9986:35:27"},{"expression":{"id":5101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5092,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5038,"src":"10035:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5093,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5038,"src":"10045:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5094,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5025,"src":"10054:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5095,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5038,"src":"10058:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10054:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10045:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5098,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10044:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10069:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10044:26:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10035:35:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5102,"nodeType":"ExpressionStatement","src":"10035:35:27"},{"expression":{"id":5112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5103,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5038,"src":"10084:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5104,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5038,"src":"10094:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5105,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5025,"src":"10103:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5106,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5038,"src":"10107:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10094:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5109,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10093:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10118:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10093:26:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10084:35:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5113,"nodeType":"ExpressionStatement","src":"10084:35:27"},{"expression":{"id":5123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5114,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5038,"src":"10133:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5115,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5038,"src":"10143:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5116,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5025,"src":"10152:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5117,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5038,"src":"10156:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10152:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10143:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5120,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10142:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10167:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10142:26:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10133:35:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5124,"nodeType":"ExpressionStatement","src":"10133:35:27"},{"expression":{"arguments":[{"id":5126,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5038,"src":"10193:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5127,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5025,"src":"10201:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5128,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5038,"src":"10205:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10201:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5125,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4796,"src":"10189:3:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10189:23:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5029,"id":5131,"nodeType":"Return","src":"10182:30:27"}]}]},"documentation":{"id":5023,"nodeType":"StructuredDocumentation","src":"8359:223:27","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":5134,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8596:4:27","nodeType":"FunctionDefinition","parameters":{"id":5026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5025,"mutability":"mutable","name":"a","nameLocation":"8609:1:27","nodeType":"VariableDeclaration","scope":5134,"src":"8601:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5024,"name":"uint256","nodeType":"ElementaryTypeName","src":"8601:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8600:11:27"},"returnParameters":{"id":5029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5028,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5134,"src":"8635:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5027,"name":"uint256","nodeType":"ElementaryTypeName","src":"8635:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8634:9:27"},"scope":5645,"src":"8587:1642:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5168,"nodeType":"Block","src":"10405:164:27","statements":[{"id":5167,"nodeType":"UncheckedBlock","src":"10415:148:27","statements":[{"assignments":[5146],"declarations":[{"constant":false,"id":5146,"mutability":"mutable","name":"result","nameLocation":"10447:6:27","nodeType":"VariableDeclaration","scope":5167,"src":"10439:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5145,"name":"uint256","nodeType":"ElementaryTypeName","src":"10439:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5150,"initialValue":{"arguments":[{"id":5148,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5137,"src":"10461:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5147,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[5134,5169],"referencedDeclaration":5134,"src":"10456:4:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10456:7:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10439:24:27"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5151,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"10484:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5153,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5140,"src":"10511:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4602","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4602","typeString":"enum Math.Rounding"}],"id":5152,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5644,"src":"10494:16:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4602_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10494:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5155,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"10524:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5156,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"10533:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5158,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5137,"src":"10542:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10494:49:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":5162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10550:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":5163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10494:57:27","trueExpression":{"hexValue":"31","id":5161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10546:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":5164,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10493:59:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"10484:68:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5144,"id":5166,"nodeType":"Return","src":"10477:75:27"}]}]},"documentation":{"id":5135,"nodeType":"StructuredDocumentation","src":"10235:89:27","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":5169,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"10338:4:27","nodeType":"FunctionDefinition","parameters":{"id":5141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5137,"mutability":"mutable","name":"a","nameLocation":"10351:1:27","nodeType":"VariableDeclaration","scope":5169,"src":"10343:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5136,"name":"uint256","nodeType":"ElementaryTypeName","src":"10343:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5140,"mutability":"mutable","name":"rounding","nameLocation":"10363:8:27","nodeType":"VariableDeclaration","scope":5169,"src":"10354:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4602","typeString":"enum Math.Rounding"},"typeName":{"id":5139,"nodeType":"UserDefinedTypeName","pathNode":{"id":5138,"name":"Rounding","nameLocations":["10354:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":4602,"src":"10354:8:27"},"referencedDeclaration":4602,"src":"10354:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4602","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10342:30:27"},"returnParameters":{"id":5144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5143,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5169,"src":"10396:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5142,"name":"uint256","nodeType":"ElementaryTypeName","src":"10396:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10395:9:27"},"scope":5645,"src":"10329:240:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5300,"nodeType":"Block","src":"10760:922:27","statements":[{"assignments":[5178],"declarations":[{"constant":false,"id":5178,"mutability":"mutable","name":"result","nameLocation":"10778:6:27","nodeType":"VariableDeclaration","scope":5300,"src":"10770:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5177,"name":"uint256","nodeType":"ElementaryTypeName","src":"10770:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5180,"initialValue":{"hexValue":"30","id":5179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10787:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10770:18:27"},{"id":5297,"nodeType":"UncheckedBlock","src":"10798:855:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5181,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"10826:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":5182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10835:3:27","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10826:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10826:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5195,"nodeType":"IfStatement","src":"10822:99:27","trueBody":{"id":5194,"nodeType":"Block","src":"10844:77:27","statements":[{"expression":{"id":5188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"10862:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":5187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10872:3:27","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10862:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5189,"nodeType":"ExpressionStatement","src":"10862:13:27"},{"expression":{"id":5192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5190,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5178,"src":"10893:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":5191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10903:3:27","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10893:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5193,"nodeType":"ExpressionStatement","src":"10893:13:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5196,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"10938:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":5197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10947:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10938:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10952:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10938:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5210,"nodeType":"IfStatement","src":"10934:96:27","trueBody":{"id":5209,"nodeType":"Block","src":"10955:75:27","statements":[{"expression":{"id":5203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5201,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"10973:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":5202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10983:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10973:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5204,"nodeType":"ExpressionStatement","src":"10973:12:27"},{"expression":{"id":5207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5205,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5178,"src":"11003:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":5206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11013:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11003:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5208,"nodeType":"ExpressionStatement","src":"11003:12:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5211,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"11047:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":5212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11056:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11047:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11061:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11047:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5225,"nodeType":"IfStatement","src":"11043:96:27","trueBody":{"id":5224,"nodeType":"Block","src":"11064:75:27","statements":[{"expression":{"id":5218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5216,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"11082:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":5217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11092:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11082:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5219,"nodeType":"ExpressionStatement","src":"11082:12:27"},{"expression":{"id":5222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5220,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5178,"src":"11112:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":5221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11122:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11112:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5223,"nodeType":"ExpressionStatement","src":"11112:12:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5226,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"11156:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":5227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11165:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11156:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11170:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11156:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5240,"nodeType":"IfStatement","src":"11152:96:27","trueBody":{"id":5239,"nodeType":"Block","src":"11173:75:27","statements":[{"expression":{"id":5233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5231,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"11191:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":5232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11201:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11191:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5234,"nodeType":"ExpressionStatement","src":"11191:12:27"},{"expression":{"id":5237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5235,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5178,"src":"11221:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11231:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11221:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5238,"nodeType":"ExpressionStatement","src":"11221:12:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5241,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"11265:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":5242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11274:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11265:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11278:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11265:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5255,"nodeType":"IfStatement","src":"11261:93:27","trueBody":{"id":5254,"nodeType":"Block","src":"11281:73:27","statements":[{"expression":{"id":5248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5246,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"11299:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":5247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11309:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11299:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5249,"nodeType":"ExpressionStatement","src":"11299:11:27"},{"expression":{"id":5252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5250,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5178,"src":"11328:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11338:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11328:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5253,"nodeType":"ExpressionStatement","src":"11328:11:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5256,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"11371:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":5257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11380:1:27","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11371:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11384:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11371:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5270,"nodeType":"IfStatement","src":"11367:93:27","trueBody":{"id":5269,"nodeType":"Block","src":"11387:73:27","statements":[{"expression":{"id":5263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5261,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"11405:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":5262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11415:1:27","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11405:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5264,"nodeType":"ExpressionStatement","src":"11405:11:27"},{"expression":{"id":5267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5265,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5178,"src":"11434:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11444:1:27","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11434:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5268,"nodeType":"ExpressionStatement","src":"11434:11:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5271,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"11477:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":5272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11486:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11477:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11490:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11477:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5285,"nodeType":"IfStatement","src":"11473:93:27","trueBody":{"id":5284,"nodeType":"Block","src":"11493:73:27","statements":[{"expression":{"id":5278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5276,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"11511:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":5277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11521:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11511:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5279,"nodeType":"ExpressionStatement","src":"11511:11:27"},{"expression":{"id":5282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5280,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5178,"src":"11540:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11550:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11540:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5283,"nodeType":"ExpressionStatement","src":"11540:11:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5286,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"11583:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11592:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11583:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11596:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11583:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5296,"nodeType":"IfStatement","src":"11579:64:27","trueBody":{"id":5295,"nodeType":"Block","src":"11599:44:27","statements":[{"expression":{"id":5293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5291,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5178,"src":"11617:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11627:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11617:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5294,"nodeType":"ExpressionStatement","src":"11617:11:27"}]}}]},{"expression":{"id":5298,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5178,"src":"11669:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5176,"id":5299,"nodeType":"Return","src":"11662:13:27"}]},"documentation":{"id":5170,"nodeType":"StructuredDocumentation","src":"10575:119:27","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5301,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"10708:4:27","nodeType":"FunctionDefinition","parameters":{"id":5173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5172,"mutability":"mutable","name":"value","nameLocation":"10721:5:27","nodeType":"VariableDeclaration","scope":5301,"src":"10713:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5171,"name":"uint256","nodeType":"ElementaryTypeName","src":"10713:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10712:15:27"},"returnParameters":{"id":5176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5175,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5301,"src":"10751:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5174,"name":"uint256","nodeType":"ElementaryTypeName","src":"10751:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10750:9:27"},"scope":5645,"src":"10699:983:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5335,"nodeType":"Block","src":"11915:168:27","statements":[{"id":5334,"nodeType":"UncheckedBlock","src":"11925:152:27","statements":[{"assignments":[5313],"declarations":[{"constant":false,"id":5313,"mutability":"mutable","name":"result","nameLocation":"11957:6:27","nodeType":"VariableDeclaration","scope":5334,"src":"11949:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5312,"name":"uint256","nodeType":"ElementaryTypeName","src":"11949:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5317,"initialValue":{"arguments":[{"id":5315,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5304,"src":"11971:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5314,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[5301,5336],"referencedDeclaration":5301,"src":"11966:4:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11966:11:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11949:28:27"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5318,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5313,"src":"11998:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5320,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5307,"src":"12025:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4602","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4602","typeString":"enum Math.Rounding"}],"id":5319,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5644,"src":"12008:16:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4602_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12008:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5323,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5313,"src":"12043:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5325,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5304,"src":"12052:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12008:49:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":5329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12064:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":5330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12008:57:27","trueExpression":{"hexValue":"31","id":5328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12060:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":5331,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12007:59:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11998:68:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5311,"id":5333,"nodeType":"Return","src":"11991:75:27"}]}]},"documentation":{"id":5302,"nodeType":"StructuredDocumentation","src":"11688:142:27","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5336,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"11844:4:27","nodeType":"FunctionDefinition","parameters":{"id":5308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5304,"mutability":"mutable","name":"value","nameLocation":"11857:5:27","nodeType":"VariableDeclaration","scope":5336,"src":"11849:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5303,"name":"uint256","nodeType":"ElementaryTypeName","src":"11849:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5307,"mutability":"mutable","name":"rounding","nameLocation":"11873:8:27","nodeType":"VariableDeclaration","scope":5336,"src":"11864:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4602","typeString":"enum Math.Rounding"},"typeName":{"id":5306,"nodeType":"UserDefinedTypeName","pathNode":{"id":5305,"name":"Rounding","nameLocations":["11864:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":4602,"src":"11864:8:27"},"referencedDeclaration":4602,"src":"11864:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4602","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11848:34:27"},"returnParameters":{"id":5311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5310,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5336,"src":"11906:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5309,"name":"uint256","nodeType":"ElementaryTypeName","src":"11906:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11905:9:27"},"scope":5645,"src":"11835:248:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5464,"nodeType":"Block","src":"12276:854:27","statements":[{"assignments":[5345],"declarations":[{"constant":false,"id":5345,"mutability":"mutable","name":"result","nameLocation":"12294:6:27","nodeType":"VariableDeclaration","scope":5464,"src":"12286:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5344,"name":"uint256","nodeType":"ElementaryTypeName","src":"12286:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5347,"initialValue":{"hexValue":"30","id":5346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12303:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12286:18:27"},{"id":5461,"nodeType":"UncheckedBlock","src":"12314:787:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5348,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5339,"src":"12342:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5351,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12351:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12357:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12351:8:27","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12342:17:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5364,"nodeType":"IfStatement","src":"12338:103:27","trueBody":{"id":5363,"nodeType":"Block","src":"12361:80:27","statements":[{"expression":{"id":5357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5353,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5339,"src":"12379:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12388:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12394:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12388:8:27","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12379:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5358,"nodeType":"ExpressionStatement","src":"12379:17:27"},{"expression":{"id":5361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5359,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5345,"src":"12414:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":5360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12424:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12414:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5362,"nodeType":"ExpressionStatement","src":"12414:12:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5365,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5339,"src":"12458:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12467:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12473:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12467:8:27","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12458:17:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5381,"nodeType":"IfStatement","src":"12454:103:27","trueBody":{"id":5380,"nodeType":"Block","src":"12477:80:27","statements":[{"expression":{"id":5374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5370,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5339,"src":"12495:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12504:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12510:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12504:8:27","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12495:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5375,"nodeType":"ExpressionStatement","src":"12495:17:27"},{"expression":{"id":5378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5376,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5345,"src":"12530:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":5377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12540:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12530:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5379,"nodeType":"ExpressionStatement","src":"12530:12:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5382,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5339,"src":"12574:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12583:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12589:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12583:8:27","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12574:17:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5398,"nodeType":"IfStatement","src":"12570:103:27","trueBody":{"id":5397,"nodeType":"Block","src":"12593:80:27","statements":[{"expression":{"id":5391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5387,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5339,"src":"12611:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12626:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12620:8:27","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12611:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5392,"nodeType":"ExpressionStatement","src":"12611:17:27"},{"expression":{"id":5395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5393,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5345,"src":"12646:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12656:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12646:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5396,"nodeType":"ExpressionStatement","src":"12646:12:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5399,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5339,"src":"12690:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12699:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12705:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12699:7:27","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12690:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5415,"nodeType":"IfStatement","src":"12686:100:27","trueBody":{"id":5414,"nodeType":"Block","src":"12708:78:27","statements":[{"expression":{"id":5408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5404,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5339,"src":"12726:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12735:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12741:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12735:7:27","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12726:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5409,"nodeType":"ExpressionStatement","src":"12726:16:27"},{"expression":{"id":5412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5410,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5345,"src":"12760:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12770:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12760:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5413,"nodeType":"ExpressionStatement","src":"12760:11:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5416,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5339,"src":"12803:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12812:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12818:1:27","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12812:7:27","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12803:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5432,"nodeType":"IfStatement","src":"12799:100:27","trueBody":{"id":5431,"nodeType":"Block","src":"12821:78:27","statements":[{"expression":{"id":5425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5421,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5339,"src":"12839:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12848:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12854:1:27","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12848:7:27","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12839:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5426,"nodeType":"ExpressionStatement","src":"12839:16:27"},{"expression":{"id":5429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5427,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5345,"src":"12873:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12883:1:27","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12873:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5430,"nodeType":"ExpressionStatement","src":"12873:11:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5433,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5339,"src":"12916:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12925:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12931:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12925:7:27","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12916:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5449,"nodeType":"IfStatement","src":"12912:100:27","trueBody":{"id":5448,"nodeType":"Block","src":"12934:78:27","statements":[{"expression":{"id":5442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5438,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5339,"src":"12952:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12961:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12967:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12961:7:27","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12952:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5443,"nodeType":"ExpressionStatement","src":"12952:16:27"},{"expression":{"id":5446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5444,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5345,"src":"12986:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12996:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12986:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5447,"nodeType":"ExpressionStatement","src":"12986:11:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5339,"src":"13029:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":5453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13038:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":5452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13044:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13038:7:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"13029:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5460,"nodeType":"IfStatement","src":"13025:66:27","trueBody":{"id":5459,"nodeType":"Block","src":"13047:44:27","statements":[{"expression":{"id":5457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5455,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5345,"src":"13065:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13075:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13065:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5458,"nodeType":"ExpressionStatement","src":"13065:11:27"}]}}]},{"expression":{"id":5462,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5345,"src":"13117:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5343,"id":5463,"nodeType":"Return","src":"13110:13:27"}]},"documentation":{"id":5337,"nodeType":"StructuredDocumentation","src":"12089:120:27","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5465,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"12223:5:27","nodeType":"FunctionDefinition","parameters":{"id":5340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5339,"mutability":"mutable","name":"value","nameLocation":"12237:5:27","nodeType":"VariableDeclaration","scope":5465,"src":"12229:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5338,"name":"uint256","nodeType":"ElementaryTypeName","src":"12229:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12228:15:27"},"returnParameters":{"id":5343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5342,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5465,"src":"12267:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5341,"name":"uint256","nodeType":"ElementaryTypeName","src":"12267:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12266:9:27"},"scope":5645,"src":"12214:916:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5499,"nodeType":"Block","src":"13365:170:27","statements":[{"id":5498,"nodeType":"UncheckedBlock","src":"13375:154:27","statements":[{"assignments":[5477],"declarations":[{"constant":false,"id":5477,"mutability":"mutable","name":"result","nameLocation":"13407:6:27","nodeType":"VariableDeclaration","scope":5498,"src":"13399:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5476,"name":"uint256","nodeType":"ElementaryTypeName","src":"13399:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5481,"initialValue":{"arguments":[{"id":5479,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5468,"src":"13422:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5478,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[5465,5500],"referencedDeclaration":5465,"src":"13416:5:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13416:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13399:29:27"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5482,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5477,"src":"13449:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5484,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5471,"src":"13476:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4602","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4602","typeString":"enum Math.Rounding"}],"id":5483,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5644,"src":"13459:16:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4602_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13459:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13489:2:27","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":5487,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5477,"src":"13495:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5489,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5468,"src":"13504:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:20:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13459:50:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":5493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13516:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":5494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"13459:58:27","trueExpression":{"hexValue":"31","id":5492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13512:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":5495,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13458:60:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13449:69:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5475,"id":5497,"nodeType":"Return","src":"13442:76:27"}]}]},"documentation":{"id":5466,"nodeType":"StructuredDocumentation","src":"13136:143:27","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5500,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"13293:5:27","nodeType":"FunctionDefinition","parameters":{"id":5472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5468,"mutability":"mutable","name":"value","nameLocation":"13307:5:27","nodeType":"VariableDeclaration","scope":5500,"src":"13299:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5467,"name":"uint256","nodeType":"ElementaryTypeName","src":"13299:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5471,"mutability":"mutable","name":"rounding","nameLocation":"13323:8:27","nodeType":"VariableDeclaration","scope":5500,"src":"13314:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4602","typeString":"enum Math.Rounding"},"typeName":{"id":5470,"nodeType":"UserDefinedTypeName","pathNode":{"id":5469,"name":"Rounding","nameLocations":["13314:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":4602,"src":"13314:8:27"},"referencedDeclaration":4602,"src":"13314:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4602","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"13298:34:27"},"returnParameters":{"id":5475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5474,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5500,"src":"13356:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5473,"name":"uint256","nodeType":"ElementaryTypeName","src":"13356:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13355:9:27"},"scope":5645,"src":"13284:251:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5586,"nodeType":"Block","src":"13855:600:27","statements":[{"assignments":[5509],"declarations":[{"constant":false,"id":5509,"mutability":"mutable","name":"result","nameLocation":"13873:6:27","nodeType":"VariableDeclaration","scope":5586,"src":"13865:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5508,"name":"uint256","nodeType":"ElementaryTypeName","src":"13865:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5511,"initialValue":{"hexValue":"30","id":5510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13882:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13865:18:27"},{"id":5583,"nodeType":"UncheckedBlock","src":"13893:533:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5512,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5503,"src":"13921:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":5513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13930:3:27","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13921:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13936:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13921:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5526,"nodeType":"IfStatement","src":"13917:98:27","trueBody":{"id":5525,"nodeType":"Block","src":"13939:76:27","statements":[{"expression":{"id":5519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5517,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5503,"src":"13957:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":5518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13967:3:27","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13957:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5520,"nodeType":"ExpressionStatement","src":"13957:13:27"},{"expression":{"id":5523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5521,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5509,"src":"13988:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13998:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13988:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5524,"nodeType":"ExpressionStatement","src":"13988:12:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5527,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5503,"src":"14032:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":5528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14041:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14032:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14046:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14032:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5541,"nodeType":"IfStatement","src":"14028:95:27","trueBody":{"id":5540,"nodeType":"Block","src":"14049:74:27","statements":[{"expression":{"id":5534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5532,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5503,"src":"14067:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":5533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14077:2:27","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14067:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5535,"nodeType":"ExpressionStatement","src":"14067:12:27"},{"expression":{"id":5538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5536,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5509,"src":"14097:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14107:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14097:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5539,"nodeType":"ExpressionStatement","src":"14097:11:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5542,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5503,"src":"14140:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":5543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14149:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14140:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14154:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14140:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5556,"nodeType":"IfStatement","src":"14136:95:27","trueBody":{"id":5555,"nodeType":"Block","src":"14157:74:27","statements":[{"expression":{"id":5549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5547,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5503,"src":"14175:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":5548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14185:2:27","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14175:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5550,"nodeType":"ExpressionStatement","src":"14175:12:27"},{"expression":{"id":5553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5551,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5509,"src":"14205:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14215:1:27","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"14205:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5554,"nodeType":"ExpressionStatement","src":"14205:11:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5557,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5503,"src":"14248:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":5558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14257:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14248:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14262:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14248:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5571,"nodeType":"IfStatement","src":"14244:95:27","trueBody":{"id":5570,"nodeType":"Block","src":"14265:74:27","statements":[{"expression":{"id":5564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5503,"src":"14283:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":5563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14293:2:27","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14283:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5565,"nodeType":"ExpressionStatement","src":"14283:12:27"},{"expression":{"id":5568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5566,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5509,"src":"14313:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14323:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"14313:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5569,"nodeType":"ExpressionStatement","src":"14313:11:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5572,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5503,"src":"14356:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":5573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14365:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14356:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14369:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14356:14:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5582,"nodeType":"IfStatement","src":"14352:64:27","trueBody":{"id":5581,"nodeType":"Block","src":"14372:44:27","statements":[{"expression":{"id":5579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5577,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5509,"src":"14390:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14400:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14390:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5580,"nodeType":"ExpressionStatement","src":"14390:11:27"}]}}]},{"expression":{"id":5584,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5509,"src":"14442:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5507,"id":5585,"nodeType":"Return","src":"14435:13:27"}]},"documentation":{"id":5501,"nodeType":"StructuredDocumentation","src":"13541:246:27","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":5587,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"13801:6:27","nodeType":"FunctionDefinition","parameters":{"id":5504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5503,"mutability":"mutable","name":"value","nameLocation":"13816:5:27","nodeType":"VariableDeclaration","scope":5587,"src":"13808:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5502,"name":"uint256","nodeType":"ElementaryTypeName","src":"13808:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13807:15:27"},"returnParameters":{"id":5507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5506,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5587,"src":"13846:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5505,"name":"uint256","nodeType":"ElementaryTypeName","src":"13846:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13845:9:27"},"scope":5645,"src":"13792:663:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5624,"nodeType":"Block","src":"14692:177:27","statements":[{"id":5623,"nodeType":"UncheckedBlock","src":"14702:161:27","statements":[{"assignments":[5599],"declarations":[{"constant":false,"id":5599,"mutability":"mutable","name":"result","nameLocation":"14734:6:27","nodeType":"VariableDeclaration","scope":5623,"src":"14726:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5598,"name":"uint256","nodeType":"ElementaryTypeName","src":"14726:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5603,"initialValue":{"arguments":[{"id":5601,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5590,"src":"14750:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5600,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[5587,5625],"referencedDeclaration":5587,"src":"14743:6:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14743:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14726:30:27"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5604,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5599,"src":"14777:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5606,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5593,"src":"14804:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4602","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4602","typeString":"enum Math.Rounding"}],"id":5605,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5644,"src":"14787:16:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4602_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14787:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14817:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5609,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5599,"src":"14823:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14833:1:27","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"14823:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5612,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14822:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5614,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5590,"src":"14838:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:26:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14787:56:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":5618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14850:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":5619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14787:64:27","trueExpression":{"hexValue":"31","id":5617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14846:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":5620,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14786:66:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"14777:75:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5597,"id":5622,"nodeType":"Return","src":"14770:82:27"}]}]},"documentation":{"id":5588,"nodeType":"StructuredDocumentation","src":"14461:144:27","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5625,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"14619:6:27","nodeType":"FunctionDefinition","parameters":{"id":5594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5590,"mutability":"mutable","name":"value","nameLocation":"14634:5:27","nodeType":"VariableDeclaration","scope":5625,"src":"14626:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5589,"name":"uint256","nodeType":"ElementaryTypeName","src":"14626:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5593,"mutability":"mutable","name":"rounding","nameLocation":"14650:8:27","nodeType":"VariableDeclaration","scope":5625,"src":"14641:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4602","typeString":"enum Math.Rounding"},"typeName":{"id":5592,"nodeType":"UserDefinedTypeName","pathNode":{"id":5591,"name":"Rounding","nameLocations":["14641:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":4602,"src":"14641:8:27"},"referencedDeclaration":4602,"src":"14641:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4602","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"14625:34:27"},"returnParameters":{"id":5597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5596,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5625,"src":"14683:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5595,"name":"uint256","nodeType":"ElementaryTypeName","src":"14683:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14682:9:27"},"scope":5645,"src":"14610:259:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5643,"nodeType":"Block","src":"15067:48:27","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5636,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"15090:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4602","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4602","typeString":"enum Math.Rounding"}],"id":5635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15084:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5634,"name":"uint8","nodeType":"ElementaryTypeName","src":"15084:5:27","typeDescriptions":{}}},"id":5637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15084:15:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":5638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15102:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15084:19:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":5640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15107:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15084:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5633,"id":5642,"nodeType":"Return","src":"15077:31:27"}]},"documentation":{"id":5626,"nodeType":"StructuredDocumentation","src":"14875:113:27","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":5644,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"15002:16:27","nodeType":"FunctionDefinition","parameters":{"id":5630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5629,"mutability":"mutable","name":"rounding","nameLocation":"15028:8:27","nodeType":"VariableDeclaration","scope":5644,"src":"15019:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4602","typeString":"enum Math.Rounding"},"typeName":{"id":5628,"nodeType":"UserDefinedTypeName","pathNode":{"id":5627,"name":"Rounding","nameLocations":["15019:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":4602,"src":"15019:8:27"},"referencedDeclaration":4602,"src":"15019:8:27","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4602","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"15018:19:27"},"returnParameters":{"id":5633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5632,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5644,"src":"15061:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5631,"name":"bool","nodeType":"ElementaryTypeName","src":"15061:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15060:6:27"},"scope":5645,"src":"14993:122:27","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5646,"src":"203:14914:27","usedErrors":[4597],"usedEvents":[]}],"src":"103:15015:27"},"id":27},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[5750]},"id":5751,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5647,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:28"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":5648,"nodeType":"StructuredDocumentation","src":"135:80:28","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5750,"linearizedBaseContracts":[5750],"name":"SignedMath","nameLocation":"224:10:28","nodeType":"ContractDefinition","nodes":[{"body":{"id":5665,"nodeType":"Block","src":"376:37:28","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5658,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5651,"src":"393:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5659,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5653,"src":"397:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"393:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":5662,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5653,"src":"405:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"393:13:28","trueExpression":{"id":5661,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5651,"src":"401:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5657,"id":5664,"nodeType":"Return","src":"386:20:28"}]},"documentation":{"id":5649,"nodeType":"StructuredDocumentation","src":"241:66:28","text":" @dev Returns the largest of two signed numbers."},"id":5666,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"321:3:28","nodeType":"FunctionDefinition","parameters":{"id":5654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5651,"mutability":"mutable","name":"a","nameLocation":"332:1:28","nodeType":"VariableDeclaration","scope":5666,"src":"325:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5650,"name":"int256","nodeType":"ElementaryTypeName","src":"325:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5653,"mutability":"mutable","name":"b","nameLocation":"342:1:28","nodeType":"VariableDeclaration","scope":5666,"src":"335:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5652,"name":"int256","nodeType":"ElementaryTypeName","src":"335:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"324:20:28"},"returnParameters":{"id":5657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5656,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5666,"src":"368:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5655,"name":"int256","nodeType":"ElementaryTypeName","src":"368:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"367:8:28"},"scope":5750,"src":"312:101:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5683,"nodeType":"Block","src":"555:37:28","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5676,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5669,"src":"572:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5677,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5671,"src":"576:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"572:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":5680,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5671,"src":"584:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"572:13:28","trueExpression":{"id":5679,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5669,"src":"580:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5675,"id":5682,"nodeType":"Return","src":"565:20:28"}]},"documentation":{"id":5667,"nodeType":"StructuredDocumentation","src":"419:67:28","text":" @dev Returns the smallest of two signed numbers."},"id":5684,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"500:3:28","nodeType":"FunctionDefinition","parameters":{"id":5672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5669,"mutability":"mutable","name":"a","nameLocation":"511:1:28","nodeType":"VariableDeclaration","scope":5684,"src":"504:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5668,"name":"int256","nodeType":"ElementaryTypeName","src":"504:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5671,"mutability":"mutable","name":"b","nameLocation":"521:1:28","nodeType":"VariableDeclaration","scope":5684,"src":"514:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5670,"name":"int256","nodeType":"ElementaryTypeName","src":"514:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"503:20:28"},"returnParameters":{"id":5675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5674,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5684,"src":"547:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5673,"name":"int256","nodeType":"ElementaryTypeName","src":"547:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"546:8:28"},"scope":5750,"src":"491:101:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5727,"nodeType":"Block","src":"797:162:28","statements":[{"assignments":[5695],"declarations":[{"constant":false,"id":5695,"mutability":"mutable","name":"x","nameLocation":"866:1:28","nodeType":"VariableDeclaration","scope":5727,"src":"859:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5694,"name":"int256","nodeType":"ElementaryTypeName","src":"859:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5708,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5696,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5687,"src":"871:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":5697,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5689,"src":"875:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"871:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5699,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"870:7:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5700,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5687,"src":"882:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5701,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5689,"src":"886:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"882:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5703,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"881:7:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"892:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"881:12:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5706,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:14:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:24:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"859:35:28"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5709,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5695,"src":"911:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5714,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5695,"src":"931:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"923:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5712,"name":"uint256","nodeType":"ElementaryTypeName","src":"923:7:28","typeDescriptions":{}}},"id":5715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"923:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":5716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"937:3:28","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"923:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"916:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5710,"name":"int256","nodeType":"ElementaryTypeName","src":"916:6:28","typeDescriptions":{}}},"id":5718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:25:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5719,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5687,"src":"945:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5720,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5689,"src":"949:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"945:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5722,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"944:7:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"916:35:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5724,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"915:37:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"911:41:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5693,"id":5726,"nodeType":"Return","src":"904:48:28"}]},"documentation":{"id":5685,"nodeType":"StructuredDocumentation","src":"598:126:28","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":5728,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"738:7:28","nodeType":"FunctionDefinition","parameters":{"id":5690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5687,"mutability":"mutable","name":"a","nameLocation":"753:1:28","nodeType":"VariableDeclaration","scope":5728,"src":"746:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5686,"name":"int256","nodeType":"ElementaryTypeName","src":"746:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5689,"mutability":"mutable","name":"b","nameLocation":"763:1:28","nodeType":"VariableDeclaration","scope":5728,"src":"756:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5688,"name":"int256","nodeType":"ElementaryTypeName","src":"756:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"745:20:28"},"returnParameters":{"id":5693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5692,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5728,"src":"789:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5691,"name":"int256","nodeType":"ElementaryTypeName","src":"789:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"788:8:28"},"scope":5750,"src":"729:230:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5748,"nodeType":"Block","src":"1103:158:28","statements":[{"id":5747,"nodeType":"UncheckedBlock","src":"1113:142:28","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5738,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5731,"src":"1228:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":5739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1233:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1228:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":5743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1241:2:28","subExpression":{"id":5742,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5731,"src":"1242:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1228:15:28","trueExpression":{"id":5741,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5731,"src":"1237:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1220:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5736,"name":"uint256","nodeType":"ElementaryTypeName","src":"1220:7:28","typeDescriptions":{}}},"id":5745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1220:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5735,"id":5746,"nodeType":"Return","src":"1213:31:28"}]}]},"documentation":{"id":5729,"nodeType":"StructuredDocumentation","src":"965:78:28","text":" @dev Returns the absolute unsigned value of a signed value."},"id":5749,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1057:3:28","nodeType":"FunctionDefinition","parameters":{"id":5732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5731,"mutability":"mutable","name":"n","nameLocation":"1068:1:28","nodeType":"VariableDeclaration","scope":5749,"src":"1061:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5730,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1060:10:28"},"returnParameters":{"id":5735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5734,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5749,"src":"1094:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5733,"name":"uint256","nodeType":"ElementaryTypeName","src":"1094:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1093:9:28"},"scope":5750,"src":"1048:213:28","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5751,"src":"216:1047:28","usedErrors":[],"usedEvents":[]}],"src":"109:1155:28"},"id":28},"contracts/BarDex.sol":{"ast":{"absolutePath":"contracts/BarDex.sol","exportedSymbols":{"Address":[2982],"BarDex":[5815],"Context":[3187],"IERC20":[6007],"Ownable":[526],"ReentrancyGuard":[3324]},"id":5816,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5752,"literals":["solidity","0.8",".20"],"nodeType":"PragmaDirective","src":"32:23:29"},{"absolutePath":"contracts/IERC20.sol","file":"./IERC20.sol","id":5753,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5816,"sourceUnit":6008,"src":"57:22:29","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":5754,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5816,"sourceUnit":527,"src":"80:52:29","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"@openzeppelin/contracts/utils/Address.sol","id":5755,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5816,"sourceUnit":2983,"src":"133:51:29","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":5756,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5816,"sourceUnit":3325,"src":"185:59:29","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5757,"name":"Ownable","nameLocations":["265:7:29"],"nodeType":"IdentifierPath","referencedDeclaration":526,"src":"265:7:29"},"id":5758,"nodeType":"InheritanceSpecifier","src":"265:7:29"},{"baseName":{"id":5759,"name":"ReentrancyGuard","nameLocations":["274:15:29"],"nodeType":"IdentifierPath","referencedDeclaration":3324,"src":"274:15:29"},"id":5760,"nodeType":"InheritanceSpecifier","src":"274:15:29"}],"canonicalName":"BarDex","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":5815,"linearizedBaseContracts":[5815,3324,526,3187],"name":"BarDex","nameLocation":"255:6:29","nodeType":"ContractDefinition","nodes":[{"global":false,"id":5763,"libraryName":{"id":5761,"name":"Address","nameLocations":["302:7:29"],"nodeType":"IdentifierPath","referencedDeclaration":2982,"src":"302:7:29"},"nodeType":"UsingForDirective","src":"296:34:29","typeName":{"id":5762,"name":"address","nodeType":"ElementaryTypeName","src":"314:15:29","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}},{"constant":false,"functionSelector":"249f6771","id":5766,"mutability":"mutable","name":"BardToken","nameLocation":"350:9:29","nodeType":"VariableDeclaration","scope":5815,"src":"336:23:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$6007","typeString":"contract IERC20"},"typeName":{"id":5765,"nodeType":"UserDefinedTypeName","pathNode":{"id":5764,"name":"IERC20","nameLocations":["336:6:29"],"nodeType":"IdentifierPath","referencedDeclaration":6007,"src":"336:6:29"},"referencedDeclaration":6007,"src":"336:6:29","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$6007","typeString":"contract IERC20"}},"visibility":"public"},{"body":{"id":5781,"nodeType":"Block","src":"418:52:29","statements":[{"expression":{"id":5779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5775,"name":"BardToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5766,"src":"428:9:29","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$6007","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5777,"name":"_BardToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5768,"src":"447:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5776,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6007,"src":"440:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$6007_$","typeString":"type(contract IERC20)"}},"id":5778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"440:18:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$6007","typeString":"contract IERC20"}},"src":"428:30:29","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$6007","typeString":"contract IERC20"}},"id":5780,"nodeType":"ExpressionStatement","src":"428:30:29"}]},"id":5782,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":5771,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"406:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"410:6:29","memberName":"sender","nodeType":"MemberAccess","src":"406:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5773,"kind":"baseConstructorSpecifier","modifierName":{"id":5770,"name":"Ownable","nameLocations":["398:7:29"],"nodeType":"IdentifierPath","referencedDeclaration":526,"src":"398:7:29"},"nodeType":"ModifierInvocation","src":"398:19:29"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":5769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5768,"mutability":"mutable","name":"_BardToken","nameLocation":"386:10:29","nodeType":"VariableDeclaration","scope":5782,"src":"378:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5767,"name":"address","nodeType":"ElementaryTypeName","src":"378:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"377:20:29"},"returnParameters":{"id":5774,"nodeType":"ParameterList","parameters":[],"src":"418:0:29"},"scope":5815,"src":"366:104:29","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5794,"nodeType":"Block","src":"507:54:29","statements":[{"expression":{"arguments":[{"expression":{"id":5788,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"532:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"536:6:29","memberName":"sender","nodeType":"MemberAccess","src":"532:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5790,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"544:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"548:5:29","memberName":"value","nodeType":"MemberAccess","src":"544:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5785,"name":"BardToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5766,"src":"517:9:29","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$6007","typeString":"contract IERC20"}},"id":5787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"527:4:29","memberName":"mint","nodeType":"MemberAccess","referencedDeclaration":6006,"src":"517:14:29","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":5792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"517:37:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5793,"nodeType":"ExpressionStatement","src":"517:37:29"}]},"functionSelector":"8119c065","id":5795,"implemented":true,"kind":"function","modifiers":[],"name":"swap","nameLocation":"485:4:29","nodeType":"FunctionDefinition","parameters":{"id":5783,"nodeType":"ParameterList","parameters":[],"src":"489:2:29"},"returnParameters":{"id":5784,"nodeType":"ParameterList","parameters":[],"src":"507:0:29"},"scope":5815,"src":"476:85:29","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":5813,"nodeType":"Block","src":"631:54:29","statements":[{"expression":{"arguments":[{"id":5810,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5797,"src":"671:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":5806,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"649:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"653:6:29","memberName":"sender","nodeType":"MemberAccess","src":"649:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5805,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"641:8:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":5804,"name":"address","nodeType":"ElementaryTypeName","src":"641:8:29","stateMutability":"payable","typeDescriptions":{}}},"id":5808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"641:19:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":5809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"661:9:29","memberName":"sendValue","nodeType":"MemberAccess","referencedDeclaration":2786,"src":"641:29:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$attached_to$_t_address_payable_$","typeString":"function (address payable,uint256)"}},"id":5811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"641:37:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5812,"nodeType":"ExpressionStatement","src":"641:37:29"}]},"functionSelector":"e0da260c","id":5814,"implemented":true,"kind":"function","modifiers":[{"id":5800,"kind":"modifierInvocation","modifierName":{"id":5799,"name":"onlyOwner","nameLocations":["609:9:29"],"nodeType":"IdentifierPath","referencedDeclaration":437,"src":"609:9:29"},"nodeType":"ModifierInvocation","src":"609:9:29"},{"id":5802,"kind":"modifierInvocation","modifierName":{"id":5801,"name":"nonReentrant","nameLocations":["619:12:29"],"nodeType":"IdentifierPath","referencedDeclaration":3288,"src":"619:12:29"},"nodeType":"ModifierInvocation","src":"619:12:29"}],"name":"widthdraw","nameLocation":"576:9:29","nodeType":"FunctionDefinition","parameters":{"id":5798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5797,"mutability":"mutable","name":"amount","nameLocation":"594:6:29","nodeType":"VariableDeclaration","scope":5814,"src":"586:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5796,"name":"uint256","nodeType":"ElementaryTypeName","src":"586:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"585:16:29"},"returnParameters":{"id":5803,"nodeType":"ParameterList","parameters":[],"src":"631:0:29"},"scope":5815,"src":"567:118:29","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":5816,"src":"246:442:29","usedErrors":[392,397,2737,2745,3269],"usedEvents":[403]}],"src":"32:657:29"},"id":29},"contracts/BardToken.sol":{"ast":{"absolutePath":"contracts/BardToken.sol","exportedSymbols":{"AccessControl":[295],"BardToken":[5921],"Context":[3187],"ECDSA":[4254],"EIP712":[4481],"ERC165":[4579],"ERC20":[2435],"ERC20Permit":[2667],"IAccessControl":[378],"IERC20":[2513],"IERC20Errors":[593],"IERC20Metadata":[2693],"IERC20Permit":[2729],"Nonces":[3255]},"id":5922,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5817,"literals":["solidity","0.8",".20"],"nodeType":"PragmaDirective","src":"32:23:30"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":5818,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5922,"sourceUnit":2436,"src":"57:55:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":5819,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5922,"sourceUnit":296,"src":"113:58:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","id":5820,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5922,"sourceUnit":2668,"src":"172:72:30","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5821,"name":"ERC20","nameLocations":["268:5:30"],"nodeType":"IdentifierPath","referencedDeclaration":2435,"src":"268:5:30"},"id":5822,"nodeType":"InheritanceSpecifier","src":"268:5:30"},{"baseName":{"id":5823,"name":"AccessControl","nameLocations":["275:13:30"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"275:13:30"},"id":5824,"nodeType":"InheritanceSpecifier","src":"275:13:30"},{"baseName":{"id":5825,"name":"ERC20Permit","nameLocations":["290:11:30"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"290:11:30"},"id":5826,"nodeType":"InheritanceSpecifier","src":"290:11:30"}],"canonicalName":"BardToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":5921,"linearizedBaseContracts":[5921,2667,3255,4481,551,2729,295,2435,593,2693,2513,4579,4591,378,3187],"name":"BardToken","nameLocation":"255:9:30","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"d5391393","id":5831,"mutability":"constant","name":"MINTER_ROLE","nameLocation":"333:11:30","nodeType":"VariableDeclaration","scope":5921,"src":"309:62:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5827,"name":"bytes32","nodeType":"ElementaryTypeName","src":"309:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4d494e5445525f524f4c45","id":5829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"357:13:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""},"value":"MINTER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""}],"id":5828,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"347:9:30","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"347:24:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"32cb6b0c","id":5838,"mutability":"constant","name":"MAX_SUPPLY","nameLocation":"398:10:30","nodeType":"VariableDeclaration","scope":5921,"src":"377:53:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5832,"name":"uint","nodeType":"ElementaryTypeName","src":"377:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_50000000000000000000000000_by_1","typeString":"int_const 50000000000000000000000000"},"id":5837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3530303030303030","id":5833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"411:8:30","typeDescriptions":{"typeIdentifier":"t_rational_50000000_by_1","typeString":"int_const 50000000"},"value":"50000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":5836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"422:2:30","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":5835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"428:2:30","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"422:8:30","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"411:19:30","typeDescriptions":{"typeIdentifier":"t_rational_50000000000000000000000000_by_1","typeString":"int_const 50000000000000000000000000"}},"visibility":"public"},{"body":{"id":5860,"nodeType":"Block","src":"522:104:30","statements":[{"expression":{"arguments":[{"id":5849,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"543:18:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":5850,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"563:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"567:6:30","memberName":"sender","nodeType":"MemberAccess","src":"563:10:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5848,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"532:10:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":5852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"532:42:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5853,"nodeType":"ExpressionStatement","src":"532:42:30"},{"expression":{"arguments":[{"id":5855,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"595:11:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":5856,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"608:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"612:6:30","memberName":"sender","nodeType":"MemberAccess","src":"608:10:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5854,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"584:10:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":5858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"584:35:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5859,"nodeType":"ExpressionStatement","src":"584:35:30"}]},"id":5861,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"42617264546f6b656e","id":5841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"464:11:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_f5de7b6cae2388741a04c9a1cf29ee2a9f8187755d26534c8d4e9b69a374ed51","typeString":"literal_string \"BardToken\""},"value":"BardToken"},{"hexValue":"42524454","id":5842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"477:6:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc48ec8f8e88cf1bd84701656b0d3fed74ad403e709809f26d5a38a47b4a0e0c","typeString":"literal_string \"BRDT\""},"value":"BRDT"}],"id":5843,"kind":"baseConstructorSpecifier","modifierName":{"id":5840,"name":"ERC20","nameLocations":["458:5:30"],"nodeType":"IdentifierPath","referencedDeclaration":2435,"src":"458:5:30"},"nodeType":"ModifierInvocation","src":"458:26:30"},{"arguments":[{"hexValue":"42617264546f6b656e","id":5845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"505:11:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_f5de7b6cae2388741a04c9a1cf29ee2a9f8187755d26534c8d4e9b69a374ed51","typeString":"literal_string \"BardToken\""},"value":"BardToken"}],"id":5846,"kind":"baseConstructorSpecifier","modifierName":{"id":5844,"name":"ERC20Permit","nameLocations":["493:11:30"],"nodeType":"IdentifierPath","referencedDeclaration":2667,"src":"493:11:30"},"nodeType":"ModifierInvocation","src":"493:24:30"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":5839,"nodeType":"ParameterList","parameters":[],"src":"447:2:30"},"returnParameters":{"id":5847,"nodeType":"ParameterList","parameters":[],"src":"522:0:30"},"scope":5921,"src":"436:190:30","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5874,"nodeType":"Block","src":"710:49:30","statements":[{"expression":{"arguments":[{"id":5870,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"731:11:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5871,"name":"_minter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5863,"src":"744:7:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5869,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"720:10:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":5872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"720:32:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5873,"nodeType":"ExpressionStatement","src":"720:32:30"}]},"functionSelector":"3dd1eb61","id":5875,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":5866,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"690:18:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":5867,"kind":"modifierInvocation","modifierName":{"id":5865,"name":"onlyRole","nameLocations":["681:8:30"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"681:8:30"},"nodeType":"ModifierInvocation","src":"681:28:30"}],"name":"grantMinterRole","nameLocation":"641:15:30","nodeType":"FunctionDefinition","parameters":{"id":5864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5863,"mutability":"mutable","name":"_minter","nameLocation":"665:7:30","nodeType":"VariableDeclaration","scope":5875,"src":"657:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5862,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"656:17:30"},"returnParameters":{"id":5868,"nodeType":"ParameterList","parameters":[],"src":"710:0:30"},"scope":5921,"src":"632:127:30","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5913,"nodeType":"Block","src":"835:235:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":5886,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"853:11:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":5887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"853:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5888,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5879,"src":"869:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"853:22:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":5890,"name":"MAX_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5838,"src":"879:10:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"853:36:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"42617264546f6b656e3a206d617820737570706c79206578636565646564","id":5892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"891:32:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_e4a161b26eb26ab0156b1351b0fe22ea7dfeeb342a09f3839aad0304de117d97","typeString":"literal_string \"BardToken: max supply exceeded\""},"value":"BardToken: max supply exceeded"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e4a161b26eb26ab0156b1351b0fe22ea7dfeeb342a09f3839aad0304de117d97","typeString":"literal_string \"BardToken: max supply exceeded\""}],"id":5885,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"845:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"845:79:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5894,"nodeType":"ExpressionStatement","src":"845:79:30"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":5896,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"942:11:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":5897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"942:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":5898,"name":"MAX_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5838,"src":"958:10:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"942:26:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"42617264546f6b656e3a206d617820737570706c79206578636565646564","id":5900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"970:32:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_e4a161b26eb26ab0156b1351b0fe22ea7dfeeb342a09f3839aad0304de117d97","typeString":"literal_string \"BardToken: max supply exceeded\""},"value":"BardToken: max supply exceeded"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e4a161b26eb26ab0156b1351b0fe22ea7dfeeb342a09f3839aad0304de117d97","typeString":"literal_string \"BardToken: max supply exceeded\""}],"id":5895,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"934:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"934:69:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5902,"nodeType":"ExpressionStatement","src":"934:69:30"},{"expression":{"arguments":[{"id":5904,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5877,"src":"1019:2:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5905,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5879,"src":"1023:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5903,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"1013:5:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1013:17:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5907,"nodeType":"ExpressionStatement","src":"1013:17:30"},{"eventCall":{"arguments":[{"id":5909,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5877,"src":"1052:2:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5910,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5879,"src":"1056:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5908,"name":"Minted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5920,"src":"1045:6:30","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1045:18:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5912,"nodeType":"EmitStatement","src":"1040:23:30"}]},"functionSelector":"40c10f19","id":5914,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":5882,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"815:11:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":5883,"kind":"modifierInvocation","modifierName":{"id":5881,"name":"onlyRole","nameLocations":["806:8:30"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"806:8:30"},"nodeType":"ModifierInvocation","src":"806:21:30"}],"name":"mint","nameLocation":"773:4:30","nodeType":"FunctionDefinition","parameters":{"id":5880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5877,"mutability":"mutable","name":"to","nameLocation":"786:2:30","nodeType":"VariableDeclaration","scope":5914,"src":"778:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5876,"name":"address","nodeType":"ElementaryTypeName","src":"778:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5879,"mutability":"mutable","name":"amount","nameLocation":"798:6:30","nodeType":"VariableDeclaration","scope":5914,"src":"790:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5878,"name":"uint256","nodeType":"ElementaryTypeName","src":"790:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"777:28:30"},"returnParameters":{"id":5884,"nodeType":"ParameterList","parameters":[],"src":"835:0:30"},"scope":5921,"src":"764:306:30","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"anonymous":false,"eventSelector":"30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe","id":5920,"name":"Minted","nameLocation":"1083:6:30","nodeType":"EventDefinition","parameters":{"id":5919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5916,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"1106:2:30","nodeType":"VariableDeclaration","scope":5920,"src":"1090:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5915,"name":"address","nodeType":"ElementaryTypeName","src":"1090:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5918,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1118:6:30","nodeType":"VariableDeclaration","scope":5920,"src":"1110:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5917,"name":"uint256","nodeType":"ElementaryTypeName","src":"1110:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1089:36:30"},"src":"1077:49:30"}],"scope":5922,"src":"246:882:30","usedErrors":[305,308,563,568,573,582,587,592,2544,2551,3197,3338,3340,3917,3922,3927],"usedEvents":[317,326,335,531,2447,2456,5920]}],"src":"32:1096:30"},"id":30},"contracts/IERC20.sol":{"ast":{"absolutePath":"contracts/IERC20.sol","exportedSymbols":{"IERC20":[6007]},"id":6008,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5923,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:31"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":5924,"nodeType":"StructuredDocumentation","src":"132:70:31","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":6007,"linearizedBaseContracts":[6007],"name":"IERC20","nameLocation":"213:6:31","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":5925,"nodeType":"StructuredDocumentation","src":"226:158:31","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":5933,"name":"Transfer","nameLocation":"395:8:31","nodeType":"EventDefinition","parameters":{"id":5932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5927,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:31","nodeType":"VariableDeclaration","scope":5933,"src":"404:20:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5926,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5929,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:31","nodeType":"VariableDeclaration","scope":5933,"src":"426:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5928,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5931,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:31","nodeType":"VariableDeclaration","scope":5933,"src":"446:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5930,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:31"},"src":"389:72:31"},{"anonymous":false,"documentation":{"id":5934,"nodeType":"StructuredDocumentation","src":"467:148:31","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":5942,"name":"Approval","nameLocation":"626:8:31","nodeType":"EventDefinition","parameters":{"id":5941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5936,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:31","nodeType":"VariableDeclaration","scope":5942,"src":"635:21:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5935,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5938,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:31","nodeType":"VariableDeclaration","scope":5942,"src":"658:23:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5937,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5940,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:31","nodeType":"VariableDeclaration","scope":5942,"src":"683:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5939,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:31"},"src":"620:78:31"},{"documentation":{"id":5943,"nodeType":"StructuredDocumentation","src":"704:65:31","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":5948,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:31","nodeType":"FunctionDefinition","parameters":{"id":5944,"nodeType":"ParameterList","parameters":[],"src":"794:2:31"},"returnParameters":{"id":5947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5946,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5948,"src":"820:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5945,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:31"},"scope":6007,"src":"774:55:31","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5949,"nodeType":"StructuredDocumentation","src":"835:71:31","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":5956,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:31","nodeType":"FunctionDefinition","parameters":{"id":5952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5951,"mutability":"mutable","name":"account","nameLocation":"938:7:31","nodeType":"VariableDeclaration","scope":5956,"src":"930:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5950,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:31"},"returnParameters":{"id":5955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5954,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5956,"src":"970:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5953,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:31"},"scope":6007,"src":"911:68:31","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5957,"nodeType":"StructuredDocumentation","src":"985:213:31","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":5966,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:31","nodeType":"FunctionDefinition","parameters":{"id":5962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5959,"mutability":"mutable","name":"to","nameLocation":"1229:2:31","nodeType":"VariableDeclaration","scope":5966,"src":"1221:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5958,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5961,"mutability":"mutable","name":"value","nameLocation":"1241:5:31","nodeType":"VariableDeclaration","scope":5966,"src":"1233:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5960,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:31"},"returnParameters":{"id":5965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5964,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5966,"src":"1266:4:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5963,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:31"},"scope":6007,"src":"1203:69:31","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5967,"nodeType":"StructuredDocumentation","src":"1278:264:31","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":5976,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:31","nodeType":"FunctionDefinition","parameters":{"id":5972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5969,"mutability":"mutable","name":"owner","nameLocation":"1574:5:31","nodeType":"VariableDeclaration","scope":5976,"src":"1566:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5968,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5971,"mutability":"mutable","name":"spender","nameLocation":"1589:7:31","nodeType":"VariableDeclaration","scope":5976,"src":"1581:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5970,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:31"},"returnParameters":{"id":5975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5974,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5976,"src":"1621:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5973,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:31"},"scope":6007,"src":"1547:83:31","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5977,"nodeType":"StructuredDocumentation","src":"1636:667:31","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":5986,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:31","nodeType":"FunctionDefinition","parameters":{"id":5982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5979,"mutability":"mutable","name":"spender","nameLocation":"2333:7:31","nodeType":"VariableDeclaration","scope":5986,"src":"2325:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5978,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5981,"mutability":"mutable","name":"value","nameLocation":"2350:5:31","nodeType":"VariableDeclaration","scope":5986,"src":"2342:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5980,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:31"},"returnParameters":{"id":5985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5984,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5986,"src":"2375:4:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5983,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:31"},"scope":6007,"src":"2308:73:31","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5987,"nodeType":"StructuredDocumentation","src":"2387:297:31","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":5998,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:31","nodeType":"FunctionDefinition","parameters":{"id":5994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5989,"mutability":"mutable","name":"from","nameLocation":"2719:4:31","nodeType":"VariableDeclaration","scope":5998,"src":"2711:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5988,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5991,"mutability":"mutable","name":"to","nameLocation":"2733:2:31","nodeType":"VariableDeclaration","scope":5998,"src":"2725:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5990,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5993,"mutability":"mutable","name":"value","nameLocation":"2745:5:31","nodeType":"VariableDeclaration","scope":5998,"src":"2737:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5992,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:31"},"returnParameters":{"id":5997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5996,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5998,"src":"2770:4:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5995,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:31"},"scope":6007,"src":"2689:87:31","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5999,"nodeType":"StructuredDocumentation","src":"2782:206:31","text":" @dev Creates `amount` tokens and assigns them to `to`, increasing\n @param to destionation address\n @param amount amount of tokens to mint\n \n Emits a {Minted} event"},"functionSelector":"40c10f19","id":6006,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"3002:4:31","nodeType":"FunctionDefinition","parameters":{"id":6004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6001,"mutability":"mutable","name":"to","nameLocation":"3015:2:31","nodeType":"VariableDeclaration","scope":6006,"src":"3007:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6000,"name":"address","nodeType":"ElementaryTypeName","src":"3007:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6003,"mutability":"mutable","name":"amount","nameLocation":"3027:6:31","nodeType":"VariableDeclaration","scope":6006,"src":"3019:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6002,"name":"uint256","nodeType":"ElementaryTypeName","src":"3019:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3006:28:31"},"returnParameters":{"id":6005,"nodeType":"ParameterList","parameters":[],"src":"3043:0:31"},"scope":6007,"src":"2993:51:31","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":6008,"src":"203:2843:31","usedErrors":[],"usedEvents":[5933,5942]}],"src":"106:2941:31"},"id":31},"contracts/SubDaoToken.sol":{"ast":{"absolutePath":"contracts/SubDaoToken.sol","exportedSymbols":{"AccessControl":[295],"Arrays":[3165],"Context":[3187],"ERC1155":[1739],"ERC165":[4579],"IAccessControl":[378],"IERC1155":[1862],"IERC1155Errors":[688],"IERC1155MetadataURI":[1920],"IERC1155Receiver":[1904],"IERC165":[4591],"MyToken":[6110]},"id":6111,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6009,"literals":["solidity","0.8",".20"],"nodeType":"PragmaDirective","src":"32:23:32"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","file":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","id":6010,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6111,"sourceUnit":1740,"src":"57:59:32","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":6011,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6111,"sourceUnit":296,"src":"117:58:32","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6012,"name":"ERC1155","nameLocations":["197:7:32"],"nodeType":"IdentifierPath","referencedDeclaration":1739,"src":"197:7:32"},"id":6013,"nodeType":"InheritanceSpecifier","src":"197:7:32"},{"baseName":{"id":6014,"name":"AccessControl","nameLocations":["206:13:32"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"206:13:32"},"id":6015,"nodeType":"InheritanceSpecifier","src":"206:13:32"}],"canonicalName":"MyToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":6110,"linearizedBaseContracts":[6110,295,1739,688,1920,1862,4579,4591,378,3187],"name":"MyToken","nameLocation":"186:7:32","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"fe829bc3","id":6018,"mutability":"constant","name":"BARDAOTOKEN","nameLocation":"250:11:32","nodeType":"VariableDeclaration","scope":6110,"src":"226:39:32","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6016,"name":"uint256","nodeType":"ElementaryTypeName","src":"226:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":6017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"264:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"public"},{"constant":true,"functionSelector":"1c681a42","id":6021,"mutability":"constant","name":"MEMBER","nameLocation":"295:6:32","nodeType":"VariableDeclaration","scope":6110,"src":"271:34:32","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6019,"name":"uint256","nodeType":"ElementaryTypeName","src":"271:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":6020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"304:1:32","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"public"},{"constant":true,"functionSelector":"d5391393","id":6026,"mutability":"constant","name":"MINTER_ROLE","nameLocation":"336:11:32","nodeType":"VariableDeclaration","scope":6110,"src":"312:62:32","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6022,"name":"bytes32","nodeType":"ElementaryTypeName","src":"312:7:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4d494e5445525f524f4c45","id":6024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"360:13:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""},"value":"MINTER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""}],"id":6023,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"350:9:32","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"350:24:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"body":{"id":6046,"nodeType":"Block","src":"443:102:32","statements":[{"expression":{"arguments":[{"id":6037,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"464:18:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6038,"name":"defaultAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6028,"src":"484:12:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6036,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"453:10:32","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":6039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"453:44:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6040,"nodeType":"ExpressionStatement","src":"453:44:32"},{"expression":{"arguments":[{"id":6042,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6026,"src":"518:11:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6043,"name":"minter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6030,"src":"531:6:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6041,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"507:10:32","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":6044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"507:31:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6045,"nodeType":"ExpressionStatement","src":"507:31:32"}]},"id":6047,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"","id":6033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"439:2:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"id":6034,"kind":"baseConstructorSpecifier","modifierName":{"id":6032,"name":"ERC1155","nameLocations":["431:7:32"],"nodeType":"IdentifierPath","referencedDeclaration":1739,"src":"431:7:32"},"nodeType":"ModifierInvocation","src":"431:11:32"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6028,"mutability":"mutable","name":"defaultAdmin","nameLocation":"401:12:32","nodeType":"VariableDeclaration","scope":6047,"src":"393:20:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6027,"name":"address","nodeType":"ElementaryTypeName","src":"393:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6030,"mutability":"mutable","name":"minter","nameLocation":"423:6:32","nodeType":"VariableDeclaration","scope":6047,"src":"415:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6029,"name":"address","nodeType":"ElementaryTypeName","src":"415:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"392:38:32"},"returnParameters":{"id":6035,"nodeType":"ParameterList","parameters":[],"src":"443:0:32"},"scope":6110,"src":"381:164:32","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6068,"nodeType":"Block","src":"696:49:32","statements":[{"expression":{"arguments":[{"id":6062,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6049,"src":"712:7:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6063,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6051,"src":"721:2:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6064,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6053,"src":"725:6:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6065,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"733:4:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6061,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1414,"src":"706:5:32","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint256,bytes memory)"}},"id":6066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"706:32:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6067,"nodeType":"ExpressionStatement","src":"706:32:32"}]},"functionSelector":"731133e9","id":6069,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6058,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6026,"src":"683:11:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6059,"kind":"modifierInvocation","modifierName":{"id":6057,"name":"onlyRole","nameLocations":["674:8:32"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"674:8:32"},"nodeType":"ModifierInvocation","src":"674:21:32"}],"name":"mint","nameLocation":"560:4:32","nodeType":"FunctionDefinition","parameters":{"id":6056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6049,"mutability":"mutable","name":"account","nameLocation":"582:7:32","nodeType":"VariableDeclaration","scope":6069,"src":"574:15:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6048,"name":"address","nodeType":"ElementaryTypeName","src":"574:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6051,"mutability":"mutable","name":"id","nameLocation":"607:2:32","nodeType":"VariableDeclaration","scope":6069,"src":"599:10:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6050,"name":"uint256","nodeType":"ElementaryTypeName","src":"599:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6053,"mutability":"mutable","name":"amount","nameLocation":"627:6:32","nodeType":"VariableDeclaration","scope":6069,"src":"619:14:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6052,"name":"uint256","nodeType":"ElementaryTypeName","src":"619:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6055,"mutability":"mutable","name":"data","nameLocation":"656:4:32","nodeType":"VariableDeclaration","scope":6069,"src":"643:17:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6054,"name":"bytes","nodeType":"ElementaryTypeName","src":"643:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"564:102:32"},"returnParameters":{"id":6060,"nodeType":"ParameterList","parameters":[],"src":"696:0:32"},"scope":6110,"src":"551:194:32","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6092,"nodeType":"Block","src":"916:51:32","statements":[{"expression":{"arguments":[{"id":6086,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6071,"src":"937:2:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6087,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6074,"src":"941:3:32","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":6088,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6077,"src":"946:7:32","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":6089,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6079,"src":"955:4:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6085,"name":"_mintBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"926:10:32","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":6090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"926:34:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6091,"nodeType":"ExpressionStatement","src":"926:34:32"}]},"functionSelector":"1f7fdffa","id":6093,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6082,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6026,"src":"903:11:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":6083,"kind":"modifierInvocation","modifierName":{"id":6081,"name":"onlyRole","nameLocations":["894:8:32"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"894:8:32"},"nodeType":"ModifierInvocation","src":"894:21:32"}],"name":"mintBatch","nameLocation":"760:9:32","nodeType":"FunctionDefinition","parameters":{"id":6080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6071,"mutability":"mutable","name":"to","nameLocation":"787:2:32","nodeType":"VariableDeclaration","scope":6093,"src":"779:10:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6070,"name":"address","nodeType":"ElementaryTypeName","src":"779:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6074,"mutability":"mutable","name":"ids","nameLocation":"816:3:32","nodeType":"VariableDeclaration","scope":6093,"src":"799:20:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6072,"name":"uint256","nodeType":"ElementaryTypeName","src":"799:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6073,"nodeType":"ArrayTypeName","src":"799:9:32","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":6077,"mutability":"mutable","name":"amounts","nameLocation":"846:7:32","nodeType":"VariableDeclaration","scope":6093,"src":"829:24:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6075,"name":"uint256","nodeType":"ElementaryTypeName","src":"829:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6076,"nodeType":"ArrayTypeName","src":"829:9:32","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":6079,"mutability":"mutable","name":"data","nameLocation":"876:4:32","nodeType":"VariableDeclaration","scope":6093,"src":"863:17:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6078,"name":"bytes","nodeType":"ElementaryTypeName","src":"863:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"769:117:32"},"returnParameters":{"id":6084,"nodeType":"ParameterList","parameters":[],"src":"916:0:32"},"scope":6110,"src":"751:216:32","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[62,780],"body":{"id":6108,"nodeType":"Block","src":"1162:60:32","statements":[{"expression":{"arguments":[{"id":6105,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6095,"src":"1203:11:32","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":6103,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1179:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_MyToken_$6110_$","typeString":"type(contract super MyToken)"}},"id":6104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1185:17:32","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":62,"src":"1179:23:32","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":6106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1179:36:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6102,"id":6107,"nodeType":"Return","src":"1172:43:32"}]},"functionSelector":"01ffc9a7","id":6109,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1050:17:32","nodeType":"FunctionDefinition","overrides":{"id":6099,"nodeType":"OverrideSpecifier","overrides":[{"id":6097,"name":"ERC1155","nameLocations":["1123:7:32"],"nodeType":"IdentifierPath","referencedDeclaration":1739,"src":"1123:7:32"},{"id":6098,"name":"AccessControl","nameLocations":["1132:13:32"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"1132:13:32"}],"src":"1114:32:32"},"parameters":{"id":6096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6095,"mutability":"mutable","name":"interfaceId","nameLocation":"1084:11:32","nodeType":"VariableDeclaration","scope":6109,"src":"1077:18:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":6094,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1077:6:32","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1067:34:32"},"returnParameters":{"id":6102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6101,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6109,"src":"1156:4:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6100,"name":"bool","nodeType":"ElementaryTypeName","src":"1156:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1155:6:32"},"scope":6110,"src":"1041:181:32","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":6111,"src":"177:1047:32","usedErrors":[305,308,653,658,663,670,675,680,687],"usedEvents":[317,326,335,1759,1774,1783,1790]}],"src":"32:1193:32"},"id":32}},"contracts":{"@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"ERC1155":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd9b0b8ee1ac6dfee14eb1ad4383a4739dbaa0f2036594bb3a16f0408085dadde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6309805132e519162d1134c67df22dd963323a9208b4f41344a4c13ed63c1026\",\"dweb:/ipfs/QmTBPHnf6qbtAD4NVnKVFmubUHRqMDPLkseR6apxTUpsQo\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xe64b3445a3f638890af7ad92464cd18f1f202a2f5a7ed42dabf74317bae43303\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6620b77b8dcd786149534b1c664f94ff1f8bb1ad141e8da7d9ec64b9624c73f0\",\"dweb:/ipfs/QmVWHh5UvQ7PxRUtUNfd94mSxxxStuzV1NBZtLiKqKpBrQ\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"IERC1155":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferBatch} event. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xe64b3445a3f638890af7ad92464cd18f1f202a2f5a7ed42dabf74317bae43303\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6620b77b8dcd786149534b1c664f94ff1f8bb1ad141e8da7d9ec64b9624c73f0\",\"dweb:/ipfs/QmVWHh5UvQ7PxRUtUNfd94mSxxxStuzV1NBZtLiKqKpBrQ\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"IERC1155Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"IERC1155MetadataURI":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferBatch} event. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xe64b3445a3f638890af7ad92464cd18f1f202a2f5a7ed42dabf74317bae43303\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6620b77b8dcd786149534b1c664f94ff1f8bb1ad141e8da7d9ec64b9624c73f0\",\"dweb:/ipfs/QmVWHh5UvQ7PxRUtUNfd94mSxxxStuzV1NBZtLiKqKpBrQ\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ERC20Permit":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","eip712Domain()":"84b0196e","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xc858a86a35701004d89022a5e98819aac46ccbdc4072fc9dd43928a676b1a2ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18acebb483c512c0eaafcb437f09c839972c3f0d36f0201ea7baa2926b987dd2\",\"dweb:/ipfs/Qmd9bf2noaDSYDtf6FMSzKu7LPhuf91jsVNmcoCuTCuGic\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200908ee0e285fdd44fae74fa9282842baf1fd72afaf3a262c17132766ecb61d5564736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD ADDMOD 0xEE 0xE 0x28 PUSH0 0xDD PREVRANDAO STATICCALL 0xE7 0x4F 0xA9 0x28 0x28 TIMESTAMP 0xBA CALL REVERT PUSH19 0xAFAF3A262C17132766ECB61D5564736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"195:6066:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200908ee0e285fdd44fae74fa9282842baf1fd72afaf3a262c17132766ecb61d5564736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD ADDMOD 0xEE 0xE 0x28 PUSH0 0xDD PREVRANDAO STATICCALL 0xE7 0x4F 0xA9 0x28 0x28 TIMESTAMP 0xBA CALL REVERT PUSH19 0xAFAF3A262C17132766ECB61D5564736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"195:6066:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Arrays.sol":{"Arrays":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d1628d4e1a7dcf0af39a3793f82bb6010f1783e1a267f5a9c899c235b161af2a64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 PUSH3 0x8D4E1A PUSH30 0xCF0AF39A3793F82BB6010F1783E1A267F5A9C899C235B161AF2A64736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"276:4526:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d1628d4e1a7dcf0af39a3793f82bb6010f1783e1a267f5a9c899c235b161af2a64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 PUSH3 0x8D4E1A PUSH30 0xCF0AF39A3793F82BB6010F1783E1A267F5A9C899C235B161AF2A64736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"276:4526:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to array types.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Arrays.sol\":\"Arrays\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Nonces.sol":{"Nonces":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"nonces(address)":"7ecebe00"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides tracking nonces for addresses. Nonces will only increment.\",\"errors\":{\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Nonces.sol\":\"Nonces\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122039dffa40a0715e4a9c1b63cdf0e4fc0d23ef690191b3b911aa591153978e7baa64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0xDF STATICCALL BLOCKHASH LOG0 PUSH18 0x5E4A9C1B63CDF0E4FC0D23EF690191B3B911 0xAA MSIZE GT MSTORE8 SWAP8 DUP15 PUSH28 0xAA64736F6C6343000814003300000000000000000000000000000000 ","sourceMap":"1255:3053:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122039dffa40a0715e4a9c1b63cdf0e4fc0d23ef690191b3b911aa591153978e7baa64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0xDF STATICCALL BLOCKHASH LOG0 PUSH18 0x5E4A9C1B63CDF0E4FC0D23EF690191B3B911 0xAA MSIZE GT MSTORE8 SWAP8 DUP15 PUSH28 0xAA64736F6C6343000814003300000000000000000000000000000000 ","sourceMap":"1255:3053:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220664a27569fc3d59b305c58507f8136cef7bd03cb3ee21eb9c0bec0ee426845e264736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x4A27569FC3D59B ADDRESS 0x5C PC POP PUSH32 0x8136CEF7BD03CB3EE21EB9C0BEC0EE426845E264736F6C634300081400330000 ","sourceMap":"1245:2685:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220664a27569fc3d59b305c58507f8136cef7bd03cb3ee21eb9c0bec0ee426845e264736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x4A27569FC3D59B ADDRESS 0x5C PC POP PUSH32 0x8136CEF7BD03CB3EE21EB9C0BEC0EE426845E264736F6C634300081400330000 ","sourceMap":"1245:2685:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220def6c700362972812669fe56e66090c2a8e18de909bbeaaa236252c6b9a275f664736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE 0xF6 0xC7 STOP CALLDATASIZE 0x29 PUSH19 0x812669FE56E66090C2A8E18DE909BBEAAA2362 MSTORE 0xC6 0xB9 LOG2 PUSH22 0xF664736F6C6343000814003300000000000000000000 ","sourceMap":"251:2847:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220def6c700362972812669fe56e66090c2a8e18de909bbeaaa236252c6b9a275f664736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE 0xF6 0xC7 STOP CALLDATASIZE 0x29 PUSH19 0x812669FE56E66090C2A8E18DE909BBEAAA2362 MSTORE 0xC6 0xB9 LOG2 PUSH22 0xF664736F6C6343000814003300000000000000000000 ","sourceMap":"251:2847:21:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205c2dd3b0bfb87dc5c8cdda90411642948b2f1b22157b65a111fc980003dd4d6264736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C 0x2D 0xD3 0xB0 0xBF 0xB8 PUSH30 0xC5C8CDDA90411642948B2F1B22157B65A111FC980003DD4D6264736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ","sourceMap":"344:7386:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205c2dd3b0bfb87dc5c8cdda90411642948b2f1b22157b65a111fc980003dd4d6264736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C 0x2D 0xD3 0xB0 0xBF 0xB8 PUSH30 0xC5C8CDDA90411642948B2F1B22157B65A111FC980003DD4D6264736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ","sourceMap":"344:7386:22:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207712b062d76803d4ad28ee3f5795f2f704585b62e28a7c168984142f1dbaae1464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x12B062D76803D4AD28EE3F5795F2F704585B62E28A7C1689 DUP5 EQ 0x2F SAR 0xBA 0xAE EQ PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"521:3235:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207712b062d76803d4ad28ee3f5795f2f704585b62e28a7c168984142f1dbaae1464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x12B062D76803D4AD28EE3F5795F2F704585B62E28A7C1689 DUP5 EQ 0x2F SAR 0xBA 0xAE EQ PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"521:3235:24:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[{"inputs":[],"name":"MathOverflowedMulDiv","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220790d7b91fdd446ac2c697f171eeef084d56599665c6d788fe80fcce7f6a12f8764736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xD7B91FDD446AC2C697F171EEEF084D56599665C6D788FE80FCC 0xE7 0xF6 LOG1 0x2F DUP8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"203:14914:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220790d7b91fdd446ac2c697f171eeef084d56599665c6d788fe80fcce7f6a12f8764736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xD7B91FDD446AC2C697F171EEEF084D56599665C6D788FE80FCC 0xE7 0xF6 LOG1 0x2F DUP8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"203:14914:27:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d184e53d3ebb413bc45fd94e6304b84cba20c89298f8b078eec6d1497f332a3264736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 DUP5 0xE5 RETURNDATASIZE RETURNDATACOPY 0xBB COINBASE EXTCODESIZE 0xC4 PUSH0 0xD9 0x4E PUSH4 0x4B84CBA KECCAK256 0xC8 SWAP3 SWAP9 0xF8 0xB0 PUSH25 0xEEC6D1497F332A3264736F6C63430008140033000000000000 ","sourceMap":"216:1047:28:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d184e53d3ebb413bc45fd94e6304b84cba20c89298f8b078eec6d1497f332a3264736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 DUP5 0xE5 RETURNDATASIZE RETURNDATACOPY 0xBB COINBASE EXTCODESIZE 0xC4 PUSH0 0xD9 0x4E PUSH4 0x4B84CBA KECCAK256 0xC8 SWAP3 SWAP9 0xF8 0xB0 PUSH25 0xEEC6D1497F332A3264736F6C63430008140033000000000000 ","sourceMap":"216:1047:28:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"contracts/BarDex.sol":{"BarDex":{"abi":[{"inputs":[{"internalType":"address","name":"_BardToken","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"BardToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"swap","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"widthdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_3277":{"entryPoint":null,"id":3277,"parameterSlots":0,"returnSlots":0},"@_429":{"entryPoint":null,"id":429,"parameterSlots":1,"returnSlots":0},"@_5782":{"entryPoint":null,"id":5782,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_525":{"entryPoint":259,"id":525,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":533,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":554,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":599,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":614,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":492,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":460,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":455,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":510,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1551:33","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:33","statements":[{"nodeType":"YulAssignment","src":"57:19:33","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:33","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:33"},"nodeType":"YulFunctionCall","src":"67:9:33"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:33"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:33","type":""}],"src":"7:75:33"},{"body":{"nodeType":"YulBlock","src":"177:28:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:33"},"nodeType":"YulFunctionCall","src":"187:12:33"},"nodeType":"YulExpressionStatement","src":"187:12:33"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:33"},{"body":{"nodeType":"YulBlock","src":"300:28:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:33"},"nodeType":"YulFunctionCall","src":"310:12:33"},"nodeType":"YulExpressionStatement","src":"310:12:33"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:33"},{"body":{"nodeType":"YulBlock","src":"379:81:33","statements":[{"nodeType":"YulAssignment","src":"389:65:33","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:33","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:33"},"nodeType":"YulFunctionCall","src":"400:54:33"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:33"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:33","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:33","type":""}],"src":"334:126:33"},{"body":{"nodeType":"YulBlock","src":"511:51:33","statements":[{"nodeType":"YulAssignment","src":"521:35:33","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:33"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:33"},"nodeType":"YulFunctionCall","src":"532:24:33"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:33"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:33","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:33","type":""}],"src":"466:96:33"},{"body":{"nodeType":"YulBlock","src":"611:79:33","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:33"},"nodeType":"YulFunctionCall","src":"670:12:33"},"nodeType":"YulExpressionStatement","src":"670:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:33"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:33"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:33"},"nodeType":"YulFunctionCall","src":"641:24:33"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:33"},"nodeType":"YulFunctionCall","src":"631:35:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:33"},"nodeType":"YulFunctionCall","src":"624:43:33"},"nodeType":"YulIf","src":"621:63:33"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:33","type":""}],"src":"568:122:33"},{"body":{"nodeType":"YulBlock","src":"759:80:33","statements":[{"nodeType":"YulAssignment","src":"769:22:33","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:33"},"nodeType":"YulFunctionCall","src":"778:13:33"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:33"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:33"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:33"},"nodeType":"YulFunctionCall","src":"800:33:33"},"nodeType":"YulExpressionStatement","src":"800:33:33"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:33","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:33","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:33","type":""}],"src":"696:143:33"},{"body":{"nodeType":"YulBlock","src":"922:274:33","statements":[{"body":{"nodeType":"YulBlock","src":"968:83:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"970:77:33"},"nodeType":"YulFunctionCall","src":"970:79:33"},"nodeType":"YulExpressionStatement","src":"970:79:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"943:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"952:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"939:3:33"},"nodeType":"YulFunctionCall","src":"939:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"964:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"935:3:33"},"nodeType":"YulFunctionCall","src":"935:32:33"},"nodeType":"YulIf","src":"932:119:33"},{"nodeType":"YulBlock","src":"1061:128:33","statements":[{"nodeType":"YulVariableDeclaration","src":"1076:15:33","value":{"kind":"number","nodeType":"YulLiteral","src":"1090:1:33","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1080:6:33","type":""}]},{"nodeType":"YulAssignment","src":"1105:74:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1151:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"1162:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1147:3:33"},"nodeType":"YulFunctionCall","src":"1147:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1171:7:33"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1115:31:33"},"nodeType":"YulFunctionCall","src":"1115:64:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1105:6:33"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"892:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"903:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"915:6:33","type":""}],"src":"845:351:33"},{"body":{"nodeType":"YulBlock","src":"1267:53:33","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1284:3:33"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1307:5:33"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1289:17:33"},"nodeType":"YulFunctionCall","src":"1289:24:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1277:6:33"},"nodeType":"YulFunctionCall","src":"1277:37:33"},"nodeType":"YulExpressionStatement","src":"1277:37:33"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1255:5:33","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1262:3:33","type":""}],"src":"1202:118:33"},{"body":{"nodeType":"YulBlock","src":"1424:124:33","statements":[{"nodeType":"YulAssignment","src":"1434:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1446:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"1457:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1442:3:33"},"nodeType":"YulFunctionCall","src":"1442:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1434:4:33"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1514:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1527:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"1538:1:33","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1523:3:33"},"nodeType":"YulFunctionCall","src":"1523:17:33"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"1470:43:33"},"nodeType":"YulFunctionCall","src":"1470:71:33"},"nodeType":"YulExpressionStatement","src":"1470:71:33"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1396:9:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1408:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1419:4:33","type":""}],"src":"1326:222:33"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":33,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b50604051610a4b380380610a4b8339818101604052810190610032919061022a565b33600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a55760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161009c9190610266565b60405180910390fd5b6100b48161010360201b60201c565b506001808190555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610281565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101f7826101cc565b9050919050565b610207816101ec565b811461021257600080fd5b50565b600081519050610224816101fe565b92915050565b6000602082840312156102405761023f6101c7565b5b600061024e84828501610215565b91505092915050565b610260816101ec565b82525050565b600060208201905061027b6000830184610257565b92915050565b6107bb806102906000396000f3fe6080604052600436106100555760003560e01c8063249f67711461005a578063715018a6146100855780638119c0651461009c5780638da5cb5b146100a6578063e0da260c146100d1578063f2fde38b146100fa575b600080fd5b34801561006657600080fd5b5061006f610123565b60405161007c91906105ef565b60405180910390f35b34801561009157600080fd5b5061009a610149565b005b6100a461015d565b005b3480156100b257600080fd5b506100bb6101ee565b6040516100c8919061062b565b60405180910390f35b3480156100dd57600080fd5b506100f860048036038101906100f39190610681565b610217565b005b34801561010657600080fd5b50610121600480360381019061011c91906106da565b61025b565b005b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6101516102e1565b61015b6000610368565b565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933346040518363ffffffff1660e01b81526004016101ba929190610716565b600060405180830381600087803b1580156101d457600080fd5b505af11580156101e8573d6000803e3d6000fd5b50505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61021f6102e1565b61022761042c565b610250813373ffffffffffffffffffffffffffffffffffffffff1661047290919063ffffffff16565b61025861055f565b50565b6102636102e1565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036102d55760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016102cc919061062b565b60405180910390fd5b6102de81610368565b50565b6102e9610568565b73ffffffffffffffffffffffffffffffffffffffff166103076101ee565b73ffffffffffffffffffffffffffffffffffffffff16146103665761032a610568565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161035d919061062b565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600260015403610468576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600181905550565b804710156104b757306040517fcd7860590000000000000000000000000000000000000000000000000000000081526004016104ae919061062b565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff16826040516104dd90610770565b60006040518083038185875af1925050503d806000811461051a576040519150601f19603f3d011682016040523d82523d6000602084013e61051f565b606091505b505090508061055a576040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b60018081905550565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006105b56105b06105ab84610570565b610590565b610570565b9050919050565b60006105c78261059a565b9050919050565b60006105d9826105bc565b9050919050565b6105e9816105ce565b82525050565b600060208201905061060460008301846105e0565b92915050565b600061061582610570565b9050919050565b6106258161060a565b82525050565b6000602082019050610640600083018461061c565b92915050565b600080fd5b6000819050919050565b61065e8161064b565b811461066957600080fd5b50565b60008135905061067b81610655565b92915050565b60006020828403121561069757610696610646565b5b60006106a58482850161066c565b91505092915050565b6106b78161060a565b81146106c257600080fd5b50565b6000813590506106d4816106ae565b92915050565b6000602082840312156106f0576106ef610646565b5b60006106fe848285016106c5565b91505092915050565b6107108161064b565b82525050565b600060408201905061072b600083018561061c565b6107386020830184610707565b9392505050565b600081905092915050565b50565b600061075a60008361073f565b91506107658261074a565b600082019050919050565b600061077b8261074d565b915081905091905056fea2646970667358221220881bc7fc1a4bfbe845bb10d85f969f0297ffb9fc380545afb51f96803217975b64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xA4B CODESIZE SUB DUP1 PUSH2 0xA4B DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x22A JUMP JUMPDEST CALLER PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C SWAP2 SWAP1 PUSH2 0x266 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB4 DUP2 PUSH2 0x103 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x281 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F7 DUP3 PUSH2 0x1CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x207 DUP2 PUSH2 0x1EC JUMP JUMPDEST DUP2 EQ PUSH2 0x212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x224 DUP2 PUSH2 0x1FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x240 JUMPI PUSH2 0x23F PUSH2 0x1C7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x24E DUP5 DUP3 DUP6 ADD PUSH2 0x215 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x260 DUP2 PUSH2 0x1EC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x27B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x257 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7BB DUP1 PUSH2 0x290 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x249F6771 EQ PUSH2 0x5A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x85 JUMPI DUP1 PUSH4 0x8119C065 EQ PUSH2 0x9C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xA6 JUMPI DUP1 PUSH4 0xE0DA260C EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xFA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0x123 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x5EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9A PUSH2 0x149 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA4 PUSH2 0x15D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBB PUSH2 0x1EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0x62B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0x681 JUMP JUMPDEST PUSH2 0x217 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x121 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11C SWAP2 SWAP1 PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x25B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x151 PUSH2 0x2E1 JUMP JUMPDEST PUSH2 0x15B PUSH1 0x0 PUSH2 0x368 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 CALLER CALLVALUE PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BA SWAP3 SWAP2 SWAP1 PUSH2 0x716 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x21F PUSH2 0x2E1 JUMP JUMPDEST PUSH2 0x227 PUSH2 0x42C JUMP JUMPDEST PUSH2 0x250 DUP2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x472 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x258 PUSH2 0x55F JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x263 PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2D5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x62B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2DE DUP2 PUSH2 0x368 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2E9 PUSH2 0x568 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x307 PUSH2 0x1EE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x366 JUMPI PUSH2 0x32A PUSH2 0x568 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x62B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x468 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x4B7 JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4AE SWAP2 SWAP1 PUSH2 0x62B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x4DD SWAP1 PUSH2 0x770 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x51A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x51F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B5 PUSH2 0x5B0 PUSH2 0x5AB DUP5 PUSH2 0x570 JUMP JUMPDEST PUSH2 0x590 JUMP JUMPDEST PUSH2 0x570 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C7 DUP3 PUSH2 0x59A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5D9 DUP3 PUSH2 0x5BC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5E9 DUP2 PUSH2 0x5CE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x604 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x615 DUP3 PUSH2 0x570 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x625 DUP2 PUSH2 0x60A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x640 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x61C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x65E DUP2 PUSH2 0x64B JUMP JUMPDEST DUP2 EQ PUSH2 0x669 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x67B DUP2 PUSH2 0x655 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x697 JUMPI PUSH2 0x696 PUSH2 0x646 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6A5 DUP5 DUP3 DUP6 ADD PUSH2 0x66C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6B7 DUP2 PUSH2 0x60A JUMP JUMPDEST DUP2 EQ PUSH2 0x6C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6D4 DUP2 PUSH2 0x6AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6F0 JUMPI PUSH2 0x6EF PUSH2 0x646 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6FE DUP5 DUP3 DUP6 ADD PUSH2 0x6C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x710 DUP2 PUSH2 0x64B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x72B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x61C JUMP JUMPDEST PUSH2 0x738 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x707 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x75A PUSH1 0x0 DUP4 PUSH2 0x73F JUMP JUMPDEST SWAP2 POP PUSH2 0x765 DUP3 PUSH2 0x74A JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77B DUP3 PUSH2 0x74D JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 SHL 0xC7 0xFC BYTE 0x4B 0xFB 0xE8 GASLIMIT 0xBB LT 0xD8 PUSH0 SWAP7 SWAP16 MUL SWAP8 SELFDESTRUCT 0xB9 0xFC CODESIZE SDIV GASLIMIT 0xAF 0xB5 0x1F SWAP7 DUP1 ORIGIN OR SWAP8 JUMPDEST PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"246:442:29:-:0;;;366:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;406:10;1297:1:2;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1713:1:18;1917:7;:21;;;;447:10:29::1;428:9;;:30;;;;;;;;;;;;;;;;;;366:104:::0;246:442;;2912:187:2;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:33:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:118::-;1289:24;1307:5;1289:24;:::i;:::-;1284:3;1277:37;1202:118;;:::o;1326:222::-;1419:4;1457:2;1446:9;1442:18;1434:26;;1470:71;1538:1;1527:9;1523:17;1514:6;1470:71;:::i;:::-;1326:222;;;;:::o;246:442:29:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@BardToken_5766":{"entryPoint":291,"id":5766,"parameterSlots":0,"returnSlots":0},"@_checkOwner_463":{"entryPoint":737,"id":463,"parameterSlots":0,"returnSlots":0},"@_msgSender_3177":{"entryPoint":1384,"id":3177,"parameterSlots":0,"returnSlots":1},"@_nonReentrantAfter_3312":{"entryPoint":1375,"id":3312,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_3304":{"entryPoint":1068,"id":3304,"parameterSlots":0,"returnSlots":0},"@_transferOwnership_525":{"entryPoint":872,"id":525,"parameterSlots":1,"returnSlots":0},"@owner_446":{"entryPoint":494,"id":446,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_477":{"entryPoint":329,"id":477,"parameterSlots":0,"returnSlots":0},"@sendValue_2786":{"entryPoint":1138,"id":2786,"parameterSlots":2,"returnSlots":0},"@swap_5795":{"entryPoint":349,"id":5795,"parameterSlots":0,"returnSlots":0},"@transferOwnership_505":{"entryPoint":603,"id":505,"parameterSlots":1,"returnSlots":0},"@widthdraw_5814":{"entryPoint":535,"id":5814,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address":{"entryPoint":1733,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":1644,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1754,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":1665,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1564,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_IERC20_$6007_to_t_address_fromStack":{"entryPoint":1504,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":1869,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":1799,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":1904,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1579,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":1814,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC20_$6007__to_t_address__fromStack_reversed":{"entryPoint":1519,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":1855,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":1546,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1392,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1611,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_IERC20_$6007_to_t_address":{"entryPoint":1486,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":1468,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":1434,"id":null,"parameterSlots":1,"returnSlots":1},"identity":{"entryPoint":1424,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1606,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":1866,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":1710,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":1621,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4658:33","statements":[{"body":{"nodeType":"YulBlock","src":"52:81:33","statements":[{"nodeType":"YulAssignment","src":"62:65:33","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"77:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"84:42:33","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"73:3:33"},"nodeType":"YulFunctionCall","src":"73:54:33"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:33"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:33","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:33","type":""}],"src":"7:126:33"},{"body":{"nodeType":"YulBlock","src":"171:28:33","statements":[{"nodeType":"YulAssignment","src":"181:12:33","value":{"name":"value","nodeType":"YulIdentifier","src":"188:5:33"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"181:3:33"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"157:5:33","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"167:3:33","type":""}],"src":"139:60:33"},{"body":{"nodeType":"YulBlock","src":"265:82:33","statements":[{"nodeType":"YulAssignment","src":"275:66:33","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"333:5:33"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"315:17:33"},"nodeType":"YulFunctionCall","src":"315:24:33"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"306:8:33"},"nodeType":"YulFunctionCall","src":"306:34:33"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"288:17:33"},"nodeType":"YulFunctionCall","src":"288:53:33"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"275:9:33"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"245:5:33","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"255:9:33","type":""}],"src":"205:142:33"},{"body":{"nodeType":"YulBlock","src":"413:66:33","statements":[{"nodeType":"YulAssignment","src":"423:50:33","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"467:5:33"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"436:30:33"},"nodeType":"YulFunctionCall","src":"436:37:33"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"423:9:33"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"393:5:33","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"403:9:33","type":""}],"src":"353:126:33"},{"body":{"nodeType":"YulBlock","src":"560:66:33","statements":[{"nodeType":"YulAssignment","src":"570:50:33","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"614:5:33"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"583:30:33"},"nodeType":"YulFunctionCall","src":"583:37:33"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"570:9:33"}]}]},"name":"convert_t_contract$_IERC20_$6007_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"540:5:33","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"550:9:33","type":""}],"src":"485:141:33"},{"body":{"nodeType":"YulBlock","src":"712:81:33","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"729:3:33"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"780:5:33"}],"functionName":{"name":"convert_t_contract$_IERC20_$6007_to_t_address","nodeType":"YulIdentifier","src":"734:45:33"},"nodeType":"YulFunctionCall","src":"734:52:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"722:6:33"},"nodeType":"YulFunctionCall","src":"722:65:33"},"nodeType":"YulExpressionStatement","src":"722:65:33"}]},"name":"abi_encode_t_contract$_IERC20_$6007_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"700:5:33","type":""},{"name":"pos","nodeType":"YulTypedName","src":"707:3:33","type":""}],"src":"632:161:33"},{"body":{"nodeType":"YulBlock","src":"912:139:33","statements":[{"nodeType":"YulAssignment","src":"922:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"934:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"945:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"930:3:33"},"nodeType":"YulFunctionCall","src":"930:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"922:4:33"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1017:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1030:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"1041:1:33","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1026:3:33"},"nodeType":"YulFunctionCall","src":"1026:17:33"}],"functionName":{"name":"abi_encode_t_contract$_IERC20_$6007_to_t_address_fromStack","nodeType":"YulIdentifier","src":"958:58:33"},"nodeType":"YulFunctionCall","src":"958:86:33"},"nodeType":"YulExpressionStatement","src":"958:86:33"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$6007__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"884:9:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"896:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"907:4:33","type":""}],"src":"799:252:33"},{"body":{"nodeType":"YulBlock","src":"1102:51:33","statements":[{"nodeType":"YulAssignment","src":"1112:35:33","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1141:5:33"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1123:17:33"},"nodeType":"YulFunctionCall","src":"1123:24:33"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1112:7:33"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1084:5:33","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1094:7:33","type":""}],"src":"1057:96:33"},{"body":{"nodeType":"YulBlock","src":"1224:53:33","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1241:3:33"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1264:5:33"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1246:17:33"},"nodeType":"YulFunctionCall","src":"1246:24:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1234:6:33"},"nodeType":"YulFunctionCall","src":"1234:37:33"},"nodeType":"YulExpressionStatement","src":"1234:37:33"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1212:5:33","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1219:3:33","type":""}],"src":"1159:118:33"},{"body":{"nodeType":"YulBlock","src":"1381:124:33","statements":[{"nodeType":"YulAssignment","src":"1391:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1403:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"1414:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1399:3:33"},"nodeType":"YulFunctionCall","src":"1399:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1391:4:33"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1471:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1484:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"1495:1:33","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1480:3:33"},"nodeType":"YulFunctionCall","src":"1480:17:33"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"1427:43:33"},"nodeType":"YulFunctionCall","src":"1427:71:33"},"nodeType":"YulExpressionStatement","src":"1427:71:33"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1353:9:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1365:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1376:4:33","type":""}],"src":"1283:222:33"},{"body":{"nodeType":"YulBlock","src":"1551:35:33","statements":[{"nodeType":"YulAssignment","src":"1561:19:33","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1577:2:33","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1571:5:33"},"nodeType":"YulFunctionCall","src":"1571:9:33"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1561:6:33"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1544:6:33","type":""}],"src":"1511:75:33"},{"body":{"nodeType":"YulBlock","src":"1681:28:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1698:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1701:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1691:6:33"},"nodeType":"YulFunctionCall","src":"1691:12:33"},"nodeType":"YulExpressionStatement","src":"1691:12:33"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1592:117:33"},{"body":{"nodeType":"YulBlock","src":"1804:28:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1821:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1824:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1814:6:33"},"nodeType":"YulFunctionCall","src":"1814:12:33"},"nodeType":"YulExpressionStatement","src":"1814:12:33"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1715:117:33"},{"body":{"nodeType":"YulBlock","src":"1883:32:33","statements":[{"nodeType":"YulAssignment","src":"1893:16:33","value":{"name":"value","nodeType":"YulIdentifier","src":"1904:5:33"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1893:7:33"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1865:5:33","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1875:7:33","type":""}],"src":"1838:77:33"},{"body":{"nodeType":"YulBlock","src":"1964:79:33","statements":[{"body":{"nodeType":"YulBlock","src":"2021:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2030:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2033:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2023:6:33"},"nodeType":"YulFunctionCall","src":"2023:12:33"},"nodeType":"YulExpressionStatement","src":"2023:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1987:5:33"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2012:5:33"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1994:17:33"},"nodeType":"YulFunctionCall","src":"1994:24:33"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1984:2:33"},"nodeType":"YulFunctionCall","src":"1984:35:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1977:6:33"},"nodeType":"YulFunctionCall","src":"1977:43:33"},"nodeType":"YulIf","src":"1974:63:33"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1957:5:33","type":""}],"src":"1921:122:33"},{"body":{"nodeType":"YulBlock","src":"2101:87:33","statements":[{"nodeType":"YulAssignment","src":"2111:29:33","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2133:6:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2120:12:33"},"nodeType":"YulFunctionCall","src":"2120:20:33"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2111:5:33"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2176:5:33"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2149:26:33"},"nodeType":"YulFunctionCall","src":"2149:33:33"},"nodeType":"YulExpressionStatement","src":"2149:33:33"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2079:6:33","type":""},{"name":"end","nodeType":"YulTypedName","src":"2087:3:33","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2095:5:33","type":""}],"src":"2049:139:33"},{"body":{"nodeType":"YulBlock","src":"2260:263:33","statements":[{"body":{"nodeType":"YulBlock","src":"2306:83:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2308:77:33"},"nodeType":"YulFunctionCall","src":"2308:79:33"},"nodeType":"YulExpressionStatement","src":"2308:79:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2281:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"2290:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2277:3:33"},"nodeType":"YulFunctionCall","src":"2277:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"2302:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2273:3:33"},"nodeType":"YulFunctionCall","src":"2273:32:33"},"nodeType":"YulIf","src":"2270:119:33"},{"nodeType":"YulBlock","src":"2399:117:33","statements":[{"nodeType":"YulVariableDeclaration","src":"2414:15:33","value":{"kind":"number","nodeType":"YulLiteral","src":"2428:1:33","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2418:6:33","type":""}]},{"nodeType":"YulAssignment","src":"2443:63:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2478:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"2489:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2474:3:33"},"nodeType":"YulFunctionCall","src":"2474:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2498:7:33"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2453:20:33"},"nodeType":"YulFunctionCall","src":"2453:53:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2443:6:33"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2230:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2241:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2253:6:33","type":""}],"src":"2194:329:33"},{"body":{"nodeType":"YulBlock","src":"2572:79:33","statements":[{"body":{"nodeType":"YulBlock","src":"2629:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2638:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2641:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2631:6:33"},"nodeType":"YulFunctionCall","src":"2631:12:33"},"nodeType":"YulExpressionStatement","src":"2631:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2595:5:33"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2620:5:33"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2602:17:33"},"nodeType":"YulFunctionCall","src":"2602:24:33"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2592:2:33"},"nodeType":"YulFunctionCall","src":"2592:35:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2585:6:33"},"nodeType":"YulFunctionCall","src":"2585:43:33"},"nodeType":"YulIf","src":"2582:63:33"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2565:5:33","type":""}],"src":"2529:122:33"},{"body":{"nodeType":"YulBlock","src":"2709:87:33","statements":[{"nodeType":"YulAssignment","src":"2719:29:33","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2741:6:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2728:12:33"},"nodeType":"YulFunctionCall","src":"2728:20:33"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2719:5:33"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2784:5:33"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2757:26:33"},"nodeType":"YulFunctionCall","src":"2757:33:33"},"nodeType":"YulExpressionStatement","src":"2757:33:33"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2687:6:33","type":""},{"name":"end","nodeType":"YulTypedName","src":"2695:3:33","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2703:5:33","type":""}],"src":"2657:139:33"},{"body":{"nodeType":"YulBlock","src":"2868:263:33","statements":[{"body":{"nodeType":"YulBlock","src":"2914:83:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2916:77:33"},"nodeType":"YulFunctionCall","src":"2916:79:33"},"nodeType":"YulExpressionStatement","src":"2916:79:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2889:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"2898:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2885:3:33"},"nodeType":"YulFunctionCall","src":"2885:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"2910:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2881:3:33"},"nodeType":"YulFunctionCall","src":"2881:32:33"},"nodeType":"YulIf","src":"2878:119:33"},{"nodeType":"YulBlock","src":"3007:117:33","statements":[{"nodeType":"YulVariableDeclaration","src":"3022:15:33","value":{"kind":"number","nodeType":"YulLiteral","src":"3036:1:33","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3026:6:33","type":""}]},{"nodeType":"YulAssignment","src":"3051:63:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3086:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"3097:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3082:3:33"},"nodeType":"YulFunctionCall","src":"3082:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3106:7:33"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3061:20:33"},"nodeType":"YulFunctionCall","src":"3061:53:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3051:6:33"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2838:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2849:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2861:6:33","type":""}],"src":"2802:329:33"},{"body":{"nodeType":"YulBlock","src":"3202:53:33","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3219:3:33"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3242:5:33"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3224:17:33"},"nodeType":"YulFunctionCall","src":"3224:24:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3212:6:33"},"nodeType":"YulFunctionCall","src":"3212:37:33"},"nodeType":"YulExpressionStatement","src":"3212:37:33"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3190:5:33","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3197:3:33","type":""}],"src":"3137:118:33"},{"body":{"nodeType":"YulBlock","src":"3387:206:33","statements":[{"nodeType":"YulAssignment","src":"3397:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3409:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"3420:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3405:3:33"},"nodeType":"YulFunctionCall","src":"3405:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3397:4:33"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3477:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3490:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"3501:1:33","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3486:3:33"},"nodeType":"YulFunctionCall","src":"3486:17:33"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"3433:43:33"},"nodeType":"YulFunctionCall","src":"3433:71:33"},"nodeType":"YulExpressionStatement","src":"3433:71:33"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"3558:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3571:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"3582:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3567:3:33"},"nodeType":"YulFunctionCall","src":"3567:18:33"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3514:43:33"},"nodeType":"YulFunctionCall","src":"3514:72:33"},"nodeType":"YulExpressionStatement","src":"3514:72:33"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3351:9:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3363:6:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3371:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3382:4:33","type":""}],"src":"3261:332:33"},{"body":{"nodeType":"YulBlock","src":"3712:34:33","statements":[{"nodeType":"YulAssignment","src":"3722:18:33","value":{"name":"pos","nodeType":"YulIdentifier","src":"3737:3:33"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"3722:11:33"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3684:3:33","type":""},{"name":"length","nodeType":"YulTypedName","src":"3689:6:33","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"3700:11:33","type":""}],"src":"3599:147:33"},{"body":{"nodeType":"YulBlock","src":"3858:8:33","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"3850:6:33","type":""}],"src":"3752:114:33"},{"body":{"nodeType":"YulBlock","src":"4035:235:33","statements":[{"nodeType":"YulAssignment","src":"4045:90:33","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4128:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"4133:1:33","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"4052:75:33"},"nodeType":"YulFunctionCall","src":"4052:83:33"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4045:3:33"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4233:3:33"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulIdentifier","src":"4144:88:33"},"nodeType":"YulFunctionCall","src":"4144:93:33"},"nodeType":"YulExpressionStatement","src":"4144:93:33"},{"nodeType":"YulAssignment","src":"4246:18:33","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4257:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"4262:1:33","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4253:3:33"},"nodeType":"YulFunctionCall","src":"4253:11:33"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4246:3:33"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4023:3:33","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4031:3:33","type":""}],"src":"3872:398:33"},{"body":{"nodeType":"YulBlock","src":"4464:191:33","statements":[{"nodeType":"YulAssignment","src":"4475:154:33","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4625:3:33"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"4482:141:33"},"nodeType":"YulFunctionCall","src":"4482:147:33"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4475:3:33"}]},{"nodeType":"YulAssignment","src":"4639:10:33","value":{"name":"pos","nodeType":"YulIdentifier","src":"4646:3:33"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4639:3:33"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4451:3:33","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4460:3:33","type":""}],"src":"4276:379:33"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$6007_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$6007_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$6007_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$6007__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$6007_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n}\n","id":33,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106100555760003560e01c8063249f67711461005a578063715018a6146100855780638119c0651461009c5780638da5cb5b146100a6578063e0da260c146100d1578063f2fde38b146100fa575b600080fd5b34801561006657600080fd5b5061006f610123565b60405161007c91906105ef565b60405180910390f35b34801561009157600080fd5b5061009a610149565b005b6100a461015d565b005b3480156100b257600080fd5b506100bb6101ee565b6040516100c8919061062b565b60405180910390f35b3480156100dd57600080fd5b506100f860048036038101906100f39190610681565b610217565b005b34801561010657600080fd5b50610121600480360381019061011c91906106da565b61025b565b005b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6101516102e1565b61015b6000610368565b565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933346040518363ffffffff1660e01b81526004016101ba929190610716565b600060405180830381600087803b1580156101d457600080fd5b505af11580156101e8573d6000803e3d6000fd5b50505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61021f6102e1565b61022761042c565b610250813373ffffffffffffffffffffffffffffffffffffffff1661047290919063ffffffff16565b61025861055f565b50565b6102636102e1565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036102d55760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016102cc919061062b565b60405180910390fd5b6102de81610368565b50565b6102e9610568565b73ffffffffffffffffffffffffffffffffffffffff166103076101ee565b73ffffffffffffffffffffffffffffffffffffffff16146103665761032a610568565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161035d919061062b565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600260015403610468576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600181905550565b804710156104b757306040517fcd7860590000000000000000000000000000000000000000000000000000000081526004016104ae919061062b565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff16826040516104dd90610770565b60006040518083038185875af1925050503d806000811461051a576040519150601f19603f3d011682016040523d82523d6000602084013e61051f565b606091505b505090508061055a576040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b60018081905550565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006105b56105b06105ab84610570565b610590565b610570565b9050919050565b60006105c78261059a565b9050919050565b60006105d9826105bc565b9050919050565b6105e9816105ce565b82525050565b600060208201905061060460008301846105e0565b92915050565b600061061582610570565b9050919050565b6106258161060a565b82525050565b6000602082019050610640600083018461061c565b92915050565b600080fd5b6000819050919050565b61065e8161064b565b811461066957600080fd5b50565b60008135905061067b81610655565b92915050565b60006020828403121561069757610696610646565b5b60006106a58482850161066c565b91505092915050565b6106b78161060a565b81146106c257600080fd5b50565b6000813590506106d4816106ae565b92915050565b6000602082840312156106f0576106ef610646565b5b60006106fe848285016106c5565b91505092915050565b6107108161064b565b82525050565b600060408201905061072b600083018561061c565b6107386020830184610707565b9392505050565b600081905092915050565b50565b600061075a60008361073f565b91506107658261074a565b600082019050919050565b600061077b8261074d565b915081905091905056fea2646970667358221220881bc7fc1a4bfbe845bb10d85f969f0297ffb9fc380545afb51f96803217975b64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x249F6771 EQ PUSH2 0x5A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x85 JUMPI DUP1 PUSH4 0x8119C065 EQ PUSH2 0x9C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xA6 JUMPI DUP1 PUSH4 0xE0DA260C EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xFA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0x123 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x5EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9A PUSH2 0x149 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA4 PUSH2 0x15D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBB PUSH2 0x1EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0x62B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0x681 JUMP JUMPDEST PUSH2 0x217 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x121 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11C SWAP2 SWAP1 PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x25B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x151 PUSH2 0x2E1 JUMP JUMPDEST PUSH2 0x15B PUSH1 0x0 PUSH2 0x368 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 CALLER CALLVALUE PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BA SWAP3 SWAP2 SWAP1 PUSH2 0x716 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x21F PUSH2 0x2E1 JUMP JUMPDEST PUSH2 0x227 PUSH2 0x42C JUMP JUMPDEST PUSH2 0x250 DUP2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x472 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x258 PUSH2 0x55F JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x263 PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2D5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x62B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2DE DUP2 PUSH2 0x368 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2E9 PUSH2 0x568 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x307 PUSH2 0x1EE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x366 JUMPI PUSH2 0x32A PUSH2 0x568 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x62B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x468 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x4B7 JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4AE SWAP2 SWAP1 PUSH2 0x62B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x4DD SWAP1 PUSH2 0x770 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x51A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x51F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B5 PUSH2 0x5B0 PUSH2 0x5AB DUP5 PUSH2 0x570 JUMP JUMPDEST PUSH2 0x590 JUMP JUMPDEST PUSH2 0x570 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C7 DUP3 PUSH2 0x59A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5D9 DUP3 PUSH2 0x5BC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5E9 DUP2 PUSH2 0x5CE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x604 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x615 DUP3 PUSH2 0x570 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x625 DUP2 PUSH2 0x60A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x640 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x61C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x65E DUP2 PUSH2 0x64B JUMP JUMPDEST DUP2 EQ PUSH2 0x669 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x67B DUP2 PUSH2 0x655 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x697 JUMPI PUSH2 0x696 PUSH2 0x646 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6A5 DUP5 DUP3 DUP6 ADD PUSH2 0x66C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6B7 DUP2 PUSH2 0x60A JUMP JUMPDEST DUP2 EQ PUSH2 0x6C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6D4 DUP2 PUSH2 0x6AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6F0 JUMPI PUSH2 0x6EF PUSH2 0x646 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6FE DUP5 DUP3 DUP6 ADD PUSH2 0x6C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x710 DUP2 PUSH2 0x64B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x72B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x61C JUMP JUMPDEST PUSH2 0x738 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x707 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x75A PUSH1 0x0 DUP4 PUSH2 0x73F JUMP JUMPDEST SWAP2 POP PUSH2 0x765 DUP3 PUSH2 0x74A JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77B DUP3 PUSH2 0x74D JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 SHL 0xC7 0xFC BYTE 0x4B 0xFB 0xE8 GASLIMIT 0xBB LT 0xD8 PUSH0 SWAP7 SWAP16 MUL SWAP8 SELFDESTRUCT 0xB9 0xFC CODESIZE SDIV GASLIMIT 0xAF 0xB5 0x1F SWAP7 DUP1 ORIGIN OR SWAP8 JUMPDEST PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"246:442:29:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;336:23;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:2;;;;;;;;;;;;;:::i;:::-;;476:85:29;;;:::i;:::-;;1638::2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;567:118:29;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;336:23:29;;;;;;;;;;;;;:::o;2293:101:2:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;476:85:29:-;517:9;;;;;;;;;;;:14;;;532:10;544:9;517:37;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;476:85::o;1638::2:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;567:118:29:-;1531:13:2;:11;:13::i;:::-;2356:21:18::1;:19;:21::i;:::-;641:37:29::2;671:6;649:10;641:29;;;;:37;;;;:::i;:::-;2398:20:18::1;:18;:20::i;:::-;567:118:29::0;:::o;2543:215:2:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2431:307:18:-;1755:1;2558:7;;:18;2554:86;;2599:30;;;;;;;;;;;;;;2554:86;1755:1;2714:7;:17;;;;2431:307::o;1531:331:14:-;1640:6;1616:21;:30;1612:109;;;1704:4;1669:41;;;;;;;;;;;:::i;:::-;;;;;;;;1612:109;1732:12;1750:9;:14;;1772:6;1750:33;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1731:52;;;1798:7;1793:63;;1828:17;;;;;;;;;;;;;;1793:63;1602:260;1531:331;;:::o;2744:208:18:-;1713:1;2924:7;:21;;;;2744:208::o;656:96:16:-;709:7;735:10;728:17;;656:96;:::o;7:126:33:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:60::-;167:3;188:5;181:12;;139:60;;;:::o;205:142::-;255:9;288:53;306:34;315:24;333:5;315:24;:::i;:::-;306:34;:::i;:::-;288:53;:::i;:::-;275:66;;205:142;;;:::o;353:126::-;403:9;436:37;467:5;436:37;:::i;:::-;423:50;;353:126;;;:::o;485:141::-;550:9;583:37;614:5;583:37;:::i;:::-;570:50;;485:141;;;:::o;632:161::-;734:52;780:5;734:52;:::i;:::-;729:3;722:65;632:161;;:::o;799:252::-;907:4;945:2;934:9;930:18;922:26;;958:86;1041:1;1030:9;1026:17;1017:6;958:86;:::i;:::-;799:252;;;;:::o;1057:96::-;1094:7;1123:24;1141:5;1123:24;:::i;:::-;1112:35;;1057:96;;;:::o;1159:118::-;1246:24;1264:5;1246:24;:::i;:::-;1241:3;1234:37;1159:118;;:::o;1283:222::-;1376:4;1414:2;1403:9;1399:18;1391:26;;1427:71;1495:1;1484:9;1480:17;1471:6;1427:71;:::i;:::-;1283:222;;;;:::o;1592:117::-;1701:1;1698;1691:12;1838:77;1875:7;1904:5;1893:16;;1838:77;;;:::o;1921:122::-;1994:24;2012:5;1994:24;:::i;:::-;1987:5;1984:35;1974:63;;2033:1;2030;2023:12;1974:63;1921:122;:::o;2049:139::-;2095:5;2133:6;2120:20;2111:29;;2149:33;2176:5;2149:33;:::i;:::-;2049:139;;;;:::o;2194:329::-;2253:6;2302:2;2290:9;2281:7;2277:23;2273:32;2270:119;;;2308:79;;:::i;:::-;2270:119;2428:1;2453:53;2498:7;2489:6;2478:9;2474:22;2453:53;:::i;:::-;2443:63;;2399:117;2194:329;;;;:::o;2529:122::-;2602:24;2620:5;2602:24;:::i;:::-;2595:5;2592:35;2582:63;;2641:1;2638;2631:12;2582:63;2529:122;:::o;2657:139::-;2703:5;2741:6;2728:20;2719:29;;2757:33;2784:5;2757:33;:::i;:::-;2657:139;;;;:::o;2802:329::-;2861:6;2910:2;2898:9;2889:7;2885:23;2881:32;2878:119;;;2916:79;;:::i;:::-;2878:119;3036:1;3061:53;3106:7;3097:6;3086:9;3082:22;3061:53;:::i;:::-;3051:63;;3007:117;2802:329;;;;:::o;3137:118::-;3224:24;3242:5;3224:24;:::i;:::-;3219:3;3212:37;3137:118;;:::o;3261:332::-;3382:4;3420:2;3409:9;3405:18;3397:26;;3433:71;3501:1;3490:9;3486:17;3477:6;3433:71;:::i;:::-;3514:72;3582:2;3571:9;3567:18;3558:6;3514:72;:::i;:::-;3261:332;;;;;:::o;3599:147::-;3700:11;3737:3;3722:18;;3599:147;;;;:::o;3752:114::-;;:::o;3872:398::-;4031:3;4052:83;4133:1;4128:3;4052:83;:::i;:::-;4045:90;;4144:93;4233:3;4144:93;:::i;:::-;4262:1;4257:3;4253:11;4246:18;;3872:398;;;:::o;4276:379::-;4460:3;4482:147;4625:3;4482:147;:::i;:::-;4475:154;;4646:3;4639:10;;4276:379;;;:::o"},"methodIdentifiers":{"BardToken()":"249f6771","owner()":"8da5cb5b","renounceOwnership()":"715018a6","swap()":"8119c065","transferOwnership(address)":"f2fde38b","widthdraw(uint256)":"e0da260c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_BardToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BardToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"widthdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BarDex.sol\":\"BarDex\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]},\"contracts/BarDex.sol\":{\"keccak256\":\"0x7d5d7b00a3b757a0bd400103864f8569683c2882648ea33b378312e2b4639da9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43f6e5e65172c8bf89c356c4e7ddf0a00b5cbb437d678305b7cc5a95bd65988f\",\"dweb:/ipfs/QmQL19akXANp4XnD2fN5qNpz4oGRjt3MrJU2X3nbyio6ER\"]},\"contracts/IERC20.sol\":{\"keccak256\":\"0x2768ef9bdbbcacdf918e9ae67b7f9a50ff4287e4e4e96f9d6ce17ec18ed1ee28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc557a66fce923f5bc2fe86e9f2d7f97089d96e5b87fc2b2cd8c13fe6e47d743\",\"dweb:/ipfs/QmNLnQju4t6e3kSMYhpsnuqKwtWzMBur23kAgkLXPdfcqx\"]}},\"version\":1}"}},"contracts/BardToken.sol":{"BardToken":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Minted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_SUPPLY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINTER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_minter","type":"address"}],"name":"grantMinterRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1972":{"entryPoint":null,"id":1972,"parameterSlots":2,"returnSlots":0},"@_2562":{"entryPoint":null,"id":2562,"parameterSlots":1,"returnSlots":0},"@_4351":{"entryPoint":null,"id":4351,"parameterSlots":2,"returnSlots":0},"@_5861":{"entryPoint":null,"id":5861,"parameterSlots":0,"returnSlots":0},"@_buildDomainSeparator_4398":{"entryPoint":618,"id":4398,"parameterSlots":0,"returnSlots":1},"@_grantRole_256":{"entryPoint":711,"id":256,"parameterSlots":2,"returnSlots":1},"@_msgSender_3177":{"entryPoint":1197,"id":3177,"parameterSlots":0,"returnSlots":1},"@getStringSlot_3628":{"entryPoint":1080,"id":3628,"parameterSlots":1,"returnSlots":1},"@hasRole_80":{"entryPoint":1090,"id":80,"parameterSlots":2,"returnSlots":1},"@toShortStringWithFallback_3482":{"entryPoint":530,"id":3482,"parameterSlots":2,"returnSlots":1},"@toShortString_3384":{"entryPoint":971,"id":3384,"parameterSlots":1,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2166,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":2080,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":2354,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2097,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":2183,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2419,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_t_bytes_memory_ptr":{"entryPoint":2466,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":1363,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":2455,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":1205,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2276,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1684,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":2146,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":2070,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2114,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1499,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1645,"id":null,"parameterSlots":2,"returnSlots":0},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32":{"entryPoint":2505,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":1519,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1839,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":2293,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":1384,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1310,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1809,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":1509,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1777,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":1263,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1216,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":1559,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_bytes32":{"entryPoint":2482,"id":null,"parameterSlots":1,"returnSlots":1},"round_up_to_mul_of_32":{"entryPoint":2337,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":1400,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1764,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1617,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":1413,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":1569,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":1612,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8813:33","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:33","statements":[{"nodeType":"YulAssignment","src":"77:22:33","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:33"},"nodeType":"YulFunctionCall","src":"87:12:33"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:33"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:33","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:33","type":""}],"src":"7:99:33"},{"body":{"nodeType":"YulBlock","src":"140:152:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"157:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"160:77:33","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"150:6:33"},"nodeType":"YulFunctionCall","src":"150:88:33"},"nodeType":"YulExpressionStatement","src":"150:88:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"254:1:33","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"257:4:33","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"247:6:33"},"nodeType":"YulFunctionCall","src":"247:15:33"},"nodeType":"YulExpressionStatement","src":"247:15:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"278:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"281:4:33","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"271:6:33"},"nodeType":"YulFunctionCall","src":"271:15:33"},"nodeType":"YulExpressionStatement","src":"271:15:33"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"112:180:33"},{"body":{"nodeType":"YulBlock","src":"326:152:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"343:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"346:77:33","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"336:6:33"},"nodeType":"YulFunctionCall","src":"336:88:33"},"nodeType":"YulExpressionStatement","src":"336:88:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:33","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"443:4:33","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"433:6:33"},"nodeType":"YulFunctionCall","src":"433:15:33"},"nodeType":"YulExpressionStatement","src":"433:15:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"464:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"467:4:33","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"457:6:33"},"nodeType":"YulFunctionCall","src":"457:15:33"},"nodeType":"YulExpressionStatement","src":"457:15:33"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"298:180:33"},{"body":{"nodeType":"YulBlock","src":"535:269:33","statements":[{"nodeType":"YulAssignment","src":"545:22:33","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"559:4:33"},{"kind":"number","nodeType":"YulLiteral","src":"565:1:33","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"555:3:33"},"nodeType":"YulFunctionCall","src":"555:12:33"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"545:6:33"}]},{"nodeType":"YulVariableDeclaration","src":"576:38:33","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"606:4:33"},{"kind":"number","nodeType":"YulLiteral","src":"612:1:33","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"602:3:33"},"nodeType":"YulFunctionCall","src":"602:12:33"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"580:18:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"653:51:33","statements":[{"nodeType":"YulAssignment","src":"667:27:33","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"681:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"689:4:33","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"677:3:33"},"nodeType":"YulFunctionCall","src":"677:17:33"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"667:6:33"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"633:18:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"626:6:33"},"nodeType":"YulFunctionCall","src":"626:26:33"},"nodeType":"YulIf","src":"623:81:33"},{"body":{"nodeType":"YulBlock","src":"756:42:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"770:16:33"},"nodeType":"YulFunctionCall","src":"770:18:33"},"nodeType":"YulExpressionStatement","src":"770:18:33"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"720:18:33"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"743:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"751:2:33","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"740:2:33"},"nodeType":"YulFunctionCall","src":"740:14:33"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"717:2:33"},"nodeType":"YulFunctionCall","src":"717:38:33"},"nodeType":"YulIf","src":"714:84:33"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"519:4:33","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"528:6:33","type":""}],"src":"484:320:33"},{"body":{"nodeType":"YulBlock","src":"864:87:33","statements":[{"nodeType":"YulAssignment","src":"874:11:33","value":{"name":"ptr","nodeType":"YulIdentifier","src":"882:3:33"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"874:4:33"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"902:1:33","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"905:3:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"895:6:33"},"nodeType":"YulFunctionCall","src":"895:14:33"},"nodeType":"YulExpressionStatement","src":"895:14:33"},{"nodeType":"YulAssignment","src":"918:26:33","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"936:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"939:4:33","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"926:9:33"},"nodeType":"YulFunctionCall","src":"926:18:33"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"918:4:33"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"851:3:33","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"859:4:33","type":""}],"src":"810:141:33"},{"body":{"nodeType":"YulBlock","src":"1001:49:33","statements":[{"nodeType":"YulAssignment","src":"1011:33:33","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1029:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"1036:2:33","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1025:3:33"},"nodeType":"YulFunctionCall","src":"1025:14:33"},{"kind":"number","nodeType":"YulLiteral","src":"1041:2:33","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1021:3:33"},"nodeType":"YulFunctionCall","src":"1021:23:33"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1011:6:33"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"984:5:33","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"994:6:33","type":""}],"src":"957:93:33"},{"body":{"nodeType":"YulBlock","src":"1109:54:33","statements":[{"nodeType":"YulAssignment","src":"1119:37:33","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"1144:4:33"},{"name":"value","nodeType":"YulIdentifier","src":"1150:5:33"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1140:3:33"},"nodeType":"YulFunctionCall","src":"1140:16:33"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"1119:8:33"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"1084:4:33","type":""},{"name":"value","nodeType":"YulTypedName","src":"1090:5:33","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"1100:8:33","type":""}],"src":"1056:107:33"},{"body":{"nodeType":"YulBlock","src":"1245:317:33","statements":[{"nodeType":"YulVariableDeclaration","src":"1255:35:33","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"1276:10:33"},{"kind":"number","nodeType":"YulLiteral","src":"1288:1:33","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1272:3:33"},"nodeType":"YulFunctionCall","src":"1272:18:33"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"1259:9:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1299:109:33","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"1330:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"1341:66:33","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"1311:18:33"},"nodeType":"YulFunctionCall","src":"1311:97:33"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"1303:4:33","type":""}]},{"nodeType":"YulAssignment","src":"1417:51:33","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"1448:9:33"},{"name":"toInsert","nodeType":"YulIdentifier","src":"1459:8:33"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"1429:18:33"},"nodeType":"YulFunctionCall","src":"1429:39:33"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"1417:8:33"}]},{"nodeType":"YulAssignment","src":"1477:30:33","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1490:5:33"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"1501:4:33"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1497:3:33"},"nodeType":"YulFunctionCall","src":"1497:9:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1486:3:33"},"nodeType":"YulFunctionCall","src":"1486:21:33"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1477:5:33"}]},{"nodeType":"YulAssignment","src":"1516:40:33","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1529:5:33"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"1540:8:33"},{"name":"mask","nodeType":"YulIdentifier","src":"1550:4:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1536:3:33"},"nodeType":"YulFunctionCall","src":"1536:19:33"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1526:2:33"},"nodeType":"YulFunctionCall","src":"1526:30:33"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1516:6:33"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1206:5:33","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"1213:10:33","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"1225:8:33","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1238:6:33","type":""}],"src":"1169:393:33"},{"body":{"nodeType":"YulBlock","src":"1613:32:33","statements":[{"nodeType":"YulAssignment","src":"1623:16:33","value":{"name":"value","nodeType":"YulIdentifier","src":"1634:5:33"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1623:7:33"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1595:5:33","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1605:7:33","type":""}],"src":"1568:77:33"},{"body":{"nodeType":"YulBlock","src":"1683:28:33","statements":[{"nodeType":"YulAssignment","src":"1693:12:33","value":{"name":"value","nodeType":"YulIdentifier","src":"1700:5:33"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1693:3:33"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1669:5:33","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1679:3:33","type":""}],"src":"1651:60:33"},{"body":{"nodeType":"YulBlock","src":"1777:82:33","statements":[{"nodeType":"YulAssignment","src":"1787:66:33","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1845:5:33"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1827:17:33"},"nodeType":"YulFunctionCall","src":"1827:24:33"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"1818:8:33"},"nodeType":"YulFunctionCall","src":"1818:34:33"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1800:17:33"},"nodeType":"YulFunctionCall","src":"1800:53:33"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"1787:9:33"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1757:5:33","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"1767:9:33","type":""}],"src":"1717:142:33"},{"body":{"nodeType":"YulBlock","src":"1912:28:33","statements":[{"nodeType":"YulAssignment","src":"1922:12:33","value":{"name":"value","nodeType":"YulIdentifier","src":"1929:5:33"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1922:3:33"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1898:5:33","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1908:3:33","type":""}],"src":"1865:75:33"},{"body":{"nodeType":"YulBlock","src":"2022:193:33","statements":[{"nodeType":"YulVariableDeclaration","src":"2032:63:33","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"2087:7:33"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2056:30:33"},"nodeType":"YulFunctionCall","src":"2056:39:33"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"2036:16:33","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2111:4:33"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2151:4:33"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"2145:5:33"},"nodeType":"YulFunctionCall","src":"2145:11:33"},{"name":"offset","nodeType":"YulIdentifier","src":"2158:6:33"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"2190:16:33"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"2166:23:33"},"nodeType":"YulFunctionCall","src":"2166:41:33"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"2117:27:33"},"nodeType":"YulFunctionCall","src":"2117:91:33"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2104:6:33"},"nodeType":"YulFunctionCall","src":"2104:105:33"},"nodeType":"YulExpressionStatement","src":"2104:105:33"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"1999:4:33","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2005:6:33","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"2013:7:33","type":""}],"src":"1946:269:33"},{"body":{"nodeType":"YulBlock","src":"2270:24:33","statements":[{"nodeType":"YulAssignment","src":"2280:8:33","value":{"kind":"number","nodeType":"YulLiteral","src":"2287:1:33","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2280:3:33"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"2266:3:33","type":""}],"src":"2221:73:33"},{"body":{"nodeType":"YulBlock","src":"2353:136:33","statements":[{"nodeType":"YulVariableDeclaration","src":"2363:46:33","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"2377:30:33"},"nodeType":"YulFunctionCall","src":"2377:32:33"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"2367:6:33","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2462:4:33"},{"name":"offset","nodeType":"YulIdentifier","src":"2468:6:33"},{"name":"zero_0","nodeType":"YulIdentifier","src":"2476:6:33"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2418:43:33"},"nodeType":"YulFunctionCall","src":"2418:65:33"},"nodeType":"YulExpressionStatement","src":"2418:65:33"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2339:4:33","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2345:6:33","type":""}],"src":"2300:189:33"},{"body":{"nodeType":"YulBlock","src":"2545:136:33","statements":[{"body":{"nodeType":"YulBlock","src":"2612:63:33","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2656:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"2663:1:33","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"2626:29:33"},"nodeType":"YulFunctionCall","src":"2626:39:33"},"nodeType":"YulExpressionStatement","src":"2626:39:33"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2565:5:33"},{"name":"end","nodeType":"YulIdentifier","src":"2572:3:33"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2562:2:33"},"nodeType":"YulFunctionCall","src":"2562:14:33"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2577:26:33","statements":[{"nodeType":"YulAssignment","src":"2579:22:33","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2592:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"2599:1:33","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2588:3:33"},"nodeType":"YulFunctionCall","src":"2588:13:33"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2579:5:33"}]}]},"pre":{"nodeType":"YulBlock","src":"2559:2:33","statements":[]},"src":"2555:120:33"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"2533:5:33","type":""},{"name":"end","nodeType":"YulTypedName","src":"2540:3:33","type":""}],"src":"2495:186:33"},{"body":{"nodeType":"YulBlock","src":"2766:464:33","statements":[{"body":{"nodeType":"YulBlock","src":"2792:431:33","statements":[{"nodeType":"YulVariableDeclaration","src":"2806:54:33","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2854:5:33"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"2822:31:33"},"nodeType":"YulFunctionCall","src":"2822:38:33"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"2810:8:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2873:63:33","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"2896:8:33"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2924:10:33"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"2906:17:33"},"nodeType":"YulFunctionCall","src":"2906:29:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2892:3:33"},"nodeType":"YulFunctionCall","src":"2892:44:33"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2877:11:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"3093:27:33","statements":[{"nodeType":"YulAssignment","src":"3095:23:33","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"3110:8:33"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3095:11:33"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"3077:10:33"},{"kind":"number","nodeType":"YulLiteral","src":"3089:2:33","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3074:2:33"},"nodeType":"YulFunctionCall","src":"3074:18:33"},"nodeType":"YulIf","src":"3071:49:33"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3162:11:33"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"3179:8:33"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"3207:3:33"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"3189:17:33"},"nodeType":"YulFunctionCall","src":"3189:22:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3175:3:33"},"nodeType":"YulFunctionCall","src":"3175:37:33"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"3133:28:33"},"nodeType":"YulFunctionCall","src":"3133:80:33"},"nodeType":"YulExpressionStatement","src":"3133:80:33"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2783:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"2788:2:33","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2780:2:33"},"nodeType":"YulFunctionCall","src":"2780:11:33"},"nodeType":"YulIf","src":"2777:446:33"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2742:5:33","type":""},{"name":"len","nodeType":"YulTypedName","src":"2749:3:33","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2754:10:33","type":""}],"src":"2687:543:33"},{"body":{"nodeType":"YulBlock","src":"3299:54:33","statements":[{"nodeType":"YulAssignment","src":"3309:37:33","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"3334:4:33"},{"name":"value","nodeType":"YulIdentifier","src":"3340:5:33"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3330:3:33"},"nodeType":"YulFunctionCall","src":"3330:16:33"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"3309:8:33"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"3274:4:33","type":""},{"name":"value","nodeType":"YulTypedName","src":"3280:5:33","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"3290:8:33","type":""}],"src":"3236:117:33"},{"body":{"nodeType":"YulBlock","src":"3410:118:33","statements":[{"nodeType":"YulVariableDeclaration","src":"3420:68:33","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3469:1:33","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"3472:5:33"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3465:3:33"},"nodeType":"YulFunctionCall","src":"3465:13:33"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3484:1:33","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3480:3:33"},"nodeType":"YulFunctionCall","src":"3480:6:33"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"3436:28:33"},"nodeType":"YulFunctionCall","src":"3436:51:33"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3432:3:33"},"nodeType":"YulFunctionCall","src":"3432:56:33"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"3424:4:33","type":""}]},{"nodeType":"YulAssignment","src":"3497:25:33","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3511:4:33"},{"name":"mask","nodeType":"YulIdentifier","src":"3517:4:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3507:3:33"},"nodeType":"YulFunctionCall","src":"3507:15:33"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3497:6:33"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3387:4:33","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"3393:5:33","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3403:6:33","type":""}],"src":"3359:169:33"},{"body":{"nodeType":"YulBlock","src":"3614:214:33","statements":[{"nodeType":"YulAssignment","src":"3747:37:33","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3774:4:33"},{"name":"len","nodeType":"YulIdentifier","src":"3780:3:33"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"3755:18:33"},"nodeType":"YulFunctionCall","src":"3755:29:33"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3747:4:33"}]},{"nodeType":"YulAssignment","src":"3793:29:33","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3804:4:33"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3814:1:33","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"3817:3:33"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3810:3:33"},"nodeType":"YulFunctionCall","src":"3810:11:33"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3801:2:33"},"nodeType":"YulFunctionCall","src":"3801:21:33"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"3793:4:33"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3595:4:33","type":""},{"name":"len","nodeType":"YulTypedName","src":"3601:3:33","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"3609:4:33","type":""}],"src":"3533:295:33"},{"body":{"nodeType":"YulBlock","src":"3925:1303:33","statements":[{"nodeType":"YulVariableDeclaration","src":"3936:51:33","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3983:3:33"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3950:32:33"},"nodeType":"YulFunctionCall","src":"3950:37:33"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"3940:6:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"4072:22:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4074:16:33"},"nodeType":"YulFunctionCall","src":"4074:18:33"},"nodeType":"YulExpressionStatement","src":"4074:18:33"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4044:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"4052:18:33","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4041:2:33"},"nodeType":"YulFunctionCall","src":"4041:30:33"},"nodeType":"YulIf","src":"4038:56:33"},{"nodeType":"YulVariableDeclaration","src":"4104:52:33","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4150:4:33"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"4144:5:33"},"nodeType":"YulFunctionCall","src":"4144:11:33"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"4118:25:33"},"nodeType":"YulFunctionCall","src":"4118:38:33"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"4108:6:33","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4249:4:33"},{"name":"oldLen","nodeType":"YulIdentifier","src":"4255:6:33"},{"name":"newLen","nodeType":"YulIdentifier","src":"4263:6:33"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"4203:45:33"},"nodeType":"YulFunctionCall","src":"4203:67:33"},"nodeType":"YulExpressionStatement","src":"4203:67:33"},{"nodeType":"YulVariableDeclaration","src":"4280:18:33","value":{"kind":"number","nodeType":"YulLiteral","src":"4297:1:33","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"4284:9:33","type":""}]},{"nodeType":"YulAssignment","src":"4308:17:33","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:4:33","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4308:9:33"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"4372:611:33","statements":[{"nodeType":"YulVariableDeclaration","src":"4386:37:33","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4405:6:33"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4417:4:33","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4413:3:33"},"nodeType":"YulFunctionCall","src":"4413:9:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4401:3:33"},"nodeType":"YulFunctionCall","src":"4401:22:33"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"4390:7:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4437:51:33","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4483:4:33"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"4451:31:33"},"nodeType":"YulFunctionCall","src":"4451:37:33"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"4441:6:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4501:10:33","value":{"kind":"number","nodeType":"YulLiteral","src":"4510:1:33","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4505:1:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"4569:163:33","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4594:6:33"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4612:3:33"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4617:9:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4608:3:33"},"nodeType":"YulFunctionCall","src":"4608:19:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4602:5:33"},"nodeType":"YulFunctionCall","src":"4602:26:33"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4587:6:33"},"nodeType":"YulFunctionCall","src":"4587:42:33"},"nodeType":"YulExpressionStatement","src":"4587:42:33"},{"nodeType":"YulAssignment","src":"4646:24:33","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4660:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"4668:1:33","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4656:3:33"},"nodeType":"YulFunctionCall","src":"4656:14:33"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4646:6:33"}]},{"nodeType":"YulAssignment","src":"4687:31:33","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4704:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"4715:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4700:3:33"},"nodeType":"YulFunctionCall","src":"4700:18:33"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4687:9:33"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4535:1:33"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"4538:7:33"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4532:2:33"},"nodeType":"YulFunctionCall","src":"4532:14:33"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4547:21:33","statements":[{"nodeType":"YulAssignment","src":"4549:17:33","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4558:1:33"},{"kind":"number","nodeType":"YulLiteral","src":"4561:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4554:3:33"},"nodeType":"YulFunctionCall","src":"4554:12:33"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4549:1:33"}]}]},"pre":{"nodeType":"YulBlock","src":"4528:3:33","statements":[]},"src":"4524:208:33"},{"body":{"nodeType":"YulBlock","src":"4768:156:33","statements":[{"nodeType":"YulVariableDeclaration","src":"4786:43:33","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4813:3:33"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4818:9:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4809:3:33"},"nodeType":"YulFunctionCall","src":"4809:19:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4803:5:33"},"nodeType":"YulFunctionCall","src":"4803:26:33"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"4790:9:33","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4853:6:33"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"4880:9:33"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4895:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"4903:4:33","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4891:3:33"},"nodeType":"YulFunctionCall","src":"4891:17:33"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"4861:18:33"},"nodeType":"YulFunctionCall","src":"4861:48:33"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4846:6:33"},"nodeType":"YulFunctionCall","src":"4846:64:33"},"nodeType":"YulExpressionStatement","src":"4846:64:33"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"4751:7:33"},{"name":"newLen","nodeType":"YulIdentifier","src":"4760:6:33"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4748:2:33"},"nodeType":"YulFunctionCall","src":"4748:19:33"},"nodeType":"YulIf","src":"4745:179:33"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4944:4:33"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4958:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"4966:1:33","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4954:3:33"},"nodeType":"YulFunctionCall","src":"4954:14:33"},{"kind":"number","nodeType":"YulLiteral","src":"4970:1:33","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4950:3:33"},"nodeType":"YulFunctionCall","src":"4950:22:33"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4937:6:33"},"nodeType":"YulFunctionCall","src":"4937:36:33"},"nodeType":"YulExpressionStatement","src":"4937:36:33"}]},"nodeType":"YulCase","src":"4365:618:33","value":{"kind":"number","nodeType":"YulLiteral","src":"4370:1:33","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"5000:222:33","statements":[{"nodeType":"YulVariableDeclaration","src":"5014:14:33","value":{"kind":"number","nodeType":"YulLiteral","src":"5027:1:33","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5018:5:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"5051:67:33","statements":[{"nodeType":"YulAssignment","src":"5069:35:33","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5088:3:33"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5093:9:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5084:3:33"},"nodeType":"YulFunctionCall","src":"5084:19:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5078:5:33"},"nodeType":"YulFunctionCall","src":"5078:26:33"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5069:5:33"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"5044:6:33"},"nodeType":"YulIf","src":"5041:77:33"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5138:4:33"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5197:5:33"},{"name":"newLen","nodeType":"YulIdentifier","src":"5204:6:33"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"5144:52:33"},"nodeType":"YulFunctionCall","src":"5144:67:33"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5131:6:33"},"nodeType":"YulFunctionCall","src":"5131:81:33"},"nodeType":"YulExpressionStatement","src":"5131:81:33"}]},"nodeType":"YulCase","src":"4992:230:33","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4345:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"4353:2:33","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4342:2:33"},"nodeType":"YulFunctionCall","src":"4342:14:33"},"nodeType":"YulSwitch","src":"4335:887:33"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3914:4:33","type":""},{"name":"src","nodeType":"YulTypedName","src":"3920:3:33","type":""}],"src":"3833:1395:33"},{"body":{"nodeType":"YulBlock","src":"5279:32:33","statements":[{"nodeType":"YulAssignment","src":"5289:16:33","value":{"name":"value","nodeType":"YulIdentifier","src":"5300:5:33"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5289:7:33"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5261:5:33","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5271:7:33","type":""}],"src":"5234:77:33"},{"body":{"nodeType":"YulBlock","src":"5382:53:33","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5399:3:33"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5422:5:33"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"5404:17:33"},"nodeType":"YulFunctionCall","src":"5404:24:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5392:6:33"},"nodeType":"YulFunctionCall","src":"5392:37:33"},"nodeType":"YulExpressionStatement","src":"5392:37:33"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5370:5:33","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5377:3:33","type":""}],"src":"5317:118:33"},{"body":{"nodeType":"YulBlock","src":"5506:53:33","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5523:3:33"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5546:5:33"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5528:17:33"},"nodeType":"YulFunctionCall","src":"5528:24:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5516:6:33"},"nodeType":"YulFunctionCall","src":"5516:37:33"},"nodeType":"YulExpressionStatement","src":"5516:37:33"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5494:5:33","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5501:3:33","type":""}],"src":"5441:118:33"},{"body":{"nodeType":"YulBlock","src":"5610:81:33","statements":[{"nodeType":"YulAssignment","src":"5620:65:33","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5635:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"5642:42:33","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5631:3:33"},"nodeType":"YulFunctionCall","src":"5631:54:33"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5620:7:33"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5592:5:33","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5602:7:33","type":""}],"src":"5565:126:33"},{"body":{"nodeType":"YulBlock","src":"5742:51:33","statements":[{"nodeType":"YulAssignment","src":"5752:35:33","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5781:5:33"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"5763:17:33"},"nodeType":"YulFunctionCall","src":"5763:24:33"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5752:7:33"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5724:5:33","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5734:7:33","type":""}],"src":"5697:96:33"},{"body":{"nodeType":"YulBlock","src":"5864:53:33","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5881:3:33"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5904:5:33"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5886:17:33"},"nodeType":"YulFunctionCall","src":"5886:24:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5874:6:33"},"nodeType":"YulFunctionCall","src":"5874:37:33"},"nodeType":"YulExpressionStatement","src":"5874:37:33"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5852:5:33","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5859:3:33","type":""}],"src":"5799:118:33"},{"body":{"nodeType":"YulBlock","src":"6133:454:33","statements":[{"nodeType":"YulAssignment","src":"6143:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6155:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"6166:3:33","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6151:3:33"},"nodeType":"YulFunctionCall","src":"6151:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6143:4:33"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6224:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6237:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"6248:1:33","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6233:3:33"},"nodeType":"YulFunctionCall","src":"6233:17:33"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"6180:43:33"},"nodeType":"YulFunctionCall","src":"6180:71:33"},"nodeType":"YulExpressionStatement","src":"6180:71:33"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"6305:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6318:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"6329:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6314:3:33"},"nodeType":"YulFunctionCall","src":"6314:18:33"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"6261:43:33"},"nodeType":"YulFunctionCall","src":"6261:72:33"},"nodeType":"YulExpressionStatement","src":"6261:72:33"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"6387:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6400:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"6411:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6396:3:33"},"nodeType":"YulFunctionCall","src":"6396:18:33"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"6343:43:33"},"nodeType":"YulFunctionCall","src":"6343:72:33"},"nodeType":"YulExpressionStatement","src":"6343:72:33"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"6469:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6482:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"6493:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6478:3:33"},"nodeType":"YulFunctionCall","src":"6478:18:33"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6425:43:33"},"nodeType":"YulFunctionCall","src":"6425:72:33"},"nodeType":"YulExpressionStatement","src":"6425:72:33"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"6551:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6564:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"6575:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6560:3:33"},"nodeType":"YulFunctionCall","src":"6560:19:33"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6507:43:33"},"nodeType":"YulFunctionCall","src":"6507:73:33"},"nodeType":"YulExpressionStatement","src":"6507:73:33"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6073:9:33","type":""},{"name":"value4","nodeType":"YulTypedName","src":"6085:6:33","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6093:6:33","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6101:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6109:6:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6117:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6128:4:33","type":""}],"src":"5923:664:33"},{"body":{"nodeType":"YulBlock","src":"6689:73:33","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6706:3:33"},{"name":"length","nodeType":"YulIdentifier","src":"6711:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6699:6:33"},"nodeType":"YulFunctionCall","src":"6699:19:33"},"nodeType":"YulExpressionStatement","src":"6699:19:33"},{"nodeType":"YulAssignment","src":"6727:29:33","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6746:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"6751:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6742:3:33"},"nodeType":"YulFunctionCall","src":"6742:14:33"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"6727:11:33"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6661:3:33","type":""},{"name":"length","nodeType":"YulTypedName","src":"6666:6:33","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"6677:11:33","type":""}],"src":"6593:169:33"},{"body":{"nodeType":"YulBlock","src":"6830:184:33","statements":[{"nodeType":"YulVariableDeclaration","src":"6840:10:33","value":{"kind":"number","nodeType":"YulLiteral","src":"6849:1:33","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6844:1:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"6909:63:33","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6934:3:33"},{"name":"i","nodeType":"YulIdentifier","src":"6939:1:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6930:3:33"},"nodeType":"YulFunctionCall","src":"6930:11:33"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6953:3:33"},{"name":"i","nodeType":"YulIdentifier","src":"6958:1:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6949:3:33"},"nodeType":"YulFunctionCall","src":"6949:11:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6943:5:33"},"nodeType":"YulFunctionCall","src":"6943:18:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6923:6:33"},"nodeType":"YulFunctionCall","src":"6923:39:33"},"nodeType":"YulExpressionStatement","src":"6923:39:33"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6870:1:33"},{"name":"length","nodeType":"YulIdentifier","src":"6873:6:33"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6867:2:33"},"nodeType":"YulFunctionCall","src":"6867:13:33"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6881:19:33","statements":[{"nodeType":"YulAssignment","src":"6883:15:33","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6892:1:33"},{"kind":"number","nodeType":"YulLiteral","src":"6895:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6888:3:33"},"nodeType":"YulFunctionCall","src":"6888:10:33"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6883:1:33"}]}]},"pre":{"nodeType":"YulBlock","src":"6863:3:33","statements":[]},"src":"6859:113:33"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6992:3:33"},{"name":"length","nodeType":"YulIdentifier","src":"6997:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6988:3:33"},"nodeType":"YulFunctionCall","src":"6988:16:33"},{"kind":"number","nodeType":"YulLiteral","src":"7006:1:33","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6981:6:33"},"nodeType":"YulFunctionCall","src":"6981:27:33"},"nodeType":"YulExpressionStatement","src":"6981:27:33"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"6812:3:33","type":""},{"name":"dst","nodeType":"YulTypedName","src":"6817:3:33","type":""},{"name":"length","nodeType":"YulTypedName","src":"6822:6:33","type":""}],"src":"6768:246:33"},{"body":{"nodeType":"YulBlock","src":"7068:54:33","statements":[{"nodeType":"YulAssignment","src":"7078:38:33","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7096:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"7103:2:33","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7092:3:33"},"nodeType":"YulFunctionCall","src":"7092:14:33"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7112:2:33","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7108:3:33"},"nodeType":"YulFunctionCall","src":"7108:7:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7088:3:33"},"nodeType":"YulFunctionCall","src":"7088:28:33"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"7078:6:33"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7051:5:33","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"7061:6:33","type":""}],"src":"7020:102:33"},{"body":{"nodeType":"YulBlock","src":"7220:285:33","statements":[{"nodeType":"YulVariableDeclaration","src":"7230:53:33","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7277:5:33"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7244:32:33"},"nodeType":"YulFunctionCall","src":"7244:39:33"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7234:6:33","type":""}]},{"nodeType":"YulAssignment","src":"7292:78:33","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7358:3:33"},{"name":"length","nodeType":"YulIdentifier","src":"7363:6:33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7299:58:33"},"nodeType":"YulFunctionCall","src":"7299:71:33"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7292:3:33"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7418:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"7425:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7414:3:33"},"nodeType":"YulFunctionCall","src":"7414:16:33"},{"name":"pos","nodeType":"YulIdentifier","src":"7432:3:33"},{"name":"length","nodeType":"YulIdentifier","src":"7437:6:33"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"7379:34:33"},"nodeType":"YulFunctionCall","src":"7379:65:33"},"nodeType":"YulExpressionStatement","src":"7379:65:33"},{"nodeType":"YulAssignment","src":"7453:46:33","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7464:3:33"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7491:6:33"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7469:21:33"},"nodeType":"YulFunctionCall","src":"7469:29:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7460:3:33"},"nodeType":"YulFunctionCall","src":"7460:39:33"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7453:3:33"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7201:5:33","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7208:3:33","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7216:3:33","type":""}],"src":"7128:377:33"},{"body":{"nodeType":"YulBlock","src":"7629:195:33","statements":[{"nodeType":"YulAssignment","src":"7639:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7651:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"7662:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7647:3:33"},"nodeType":"YulFunctionCall","src":"7647:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7639:4:33"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7686:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"7697:1:33","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7682:3:33"},"nodeType":"YulFunctionCall","src":"7682:17:33"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7705:4:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"7711:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7701:3:33"},"nodeType":"YulFunctionCall","src":"7701:20:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7675:6:33"},"nodeType":"YulFunctionCall","src":"7675:47:33"},"nodeType":"YulExpressionStatement","src":"7675:47:33"},{"nodeType":"YulAssignment","src":"7731:86:33","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7803:6:33"},{"name":"tail","nodeType":"YulIdentifier","src":"7812:4:33"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7739:63:33"},"nodeType":"YulFunctionCall","src":"7739:78:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7731:4:33"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7601:9:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7613:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7624:4:33","type":""}],"src":"7511:313:33"},{"body":{"nodeType":"YulBlock","src":"7888:40:33","statements":[{"nodeType":"YulAssignment","src":"7899:22:33","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7915:5:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7909:5:33"},"nodeType":"YulFunctionCall","src":"7909:12:33"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7899:6:33"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7871:5:33","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"7881:6:33","type":""}],"src":"7830:98:33"},{"body":{"nodeType":"YulBlock","src":"7990:60:33","statements":[{"nodeType":"YulAssignment","src":"8000:11:33","value":{"name":"ptr","nodeType":"YulIdentifier","src":"8008:3:33"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8000:4:33"}]},{"nodeType":"YulAssignment","src":"8021:22:33","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8033:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"8038:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8029:3:33"},"nodeType":"YulFunctionCall","src":"8029:14:33"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8021:4:33"}]}]},"name":"array_dataslot_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"7977:3:33","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"7985:4:33","type":""}],"src":"7934:116:33"},{"body":{"nodeType":"YulBlock","src":"8111:99:33","statements":[{"nodeType":"YulVariableDeclaration","src":"8122:42:33","value":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8159:3:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8153:5:33"},"nodeType":"YulFunctionCall","src":"8153:10:33"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"8135:17:33"},"nodeType":"YulFunctionCall","src":"8135:29:33"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8126:5:33","type":""}]},{"nodeType":"YulAssignment","src":"8174:29:33","value":{"name":"value","nodeType":"YulIdentifier","src":"8198:5:33"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"8174:11:33"}]}]},"name":"read_from_memoryt_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"8091:3:33","type":""}],"returnVariables":[{"name":"returnValue","nodeType":"YulTypedName","src":"8099:11:33","type":""}],"src":"8056:154:33"},{"body":{"nodeType":"YulBlock","src":"8306:504:33","statements":[{"nodeType":"YulVariableDeclaration","src":"8317:52:33","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8363:5:33"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8331:31:33"},"nodeType":"YulFunctionCall","src":"8331:38:33"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8321:6:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8378:21:33","value":{"name":"array","nodeType":"YulIdentifier","src":"8394:5:33"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"8382:8:33","type":""}]},{"nodeType":"YulAssignment","src":"8409:52:33","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8455:5:33"}],"functionName":{"name":"array_dataslot_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8421:33:33"},"nodeType":"YulFunctionCall","src":"8421:40:33"},"variableNames":[{"name":"dataArea","nodeType":"YulIdentifier","src":"8409:8:33"}]},{"nodeType":"YulAssignment","src":"8471:44:33","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"8506:8:33"}],"functionName":{"name":"read_from_memoryt_bytes32","nodeType":"YulIdentifier","src":"8480:25:33"},"nodeType":"YulFunctionCall","src":"8480:35:33"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8471:5:33"}]},{"body":{"nodeType":"YulBlock","src":"8543:260:33","statements":[{"nodeType":"YulAssignment","src":"8557:236:33","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8587:5:33"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8654:1:33","type":"","value":"8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8661:2:33","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"8665:6:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8657:3:33"},"nodeType":"YulFunctionCall","src":"8657:15:33"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8650:3:33"},"nodeType":"YulFunctionCall","src":"8650:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"8695:66:33","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"8610:18:33"},"nodeType":"YulFunctionCall","src":"8610:169:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8566:3:33"},"nodeType":"YulFunctionCall","src":"8566:227:33"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8557:5:33"}]}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8531:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"8539:2:33","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8528:2:33"},"nodeType":"YulFunctionCall","src":"8528:14:33"},"nodeType":"YulIf","src":"8525:278:33"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"8290:5:33","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"8300:5:33","type":""}],"src":"8216:594:33"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_dataslot_t_bytes_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function read_from_memoryt_bytes32(ptr) -> returnValue {\n\n        let value := cleanup_t_bytes32(mload(ptr))\n\n        returnValue :=\n\n        value\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value {\n\n        let length := array_length_t_bytes_memory_ptr(array)\n        let dataArea := array\n\n        dataArea := array_dataslot_t_bytes_memory_ptr(array)\n\n        value := read_from_memoryt_bytes32(dataArea)\n\n        if lt(length, 32) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(32, length)),\n                    0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                )\n            )\n        }\n\n    }\n\n}\n","id":33,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH2 0x160 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x42617264546F6B656E0000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x42617264546F6B656E0000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4252445400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xFD SWAP2 SWAP1 PUSH3 0x72F JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x10F SWAP2 SWAP1 PUSH3 0x72F JUMP JUMPDEST POP POP POP PUSH3 0x128 PUSH1 0x6 DUP4 PUSH3 0x212 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x120 DUP2 DUP2 MSTORE POP POP PUSH3 0x146 PUSH1 0x7 DUP3 PUSH3 0x212 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x140 DUP2 DUP2 MSTORE POP POP DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP CHAINID PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH3 0x185 PUSH3 0x26A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x80 DUP2 DUP2 MSTORE POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP PUSH3 0x1D8 PUSH1 0x0 DUP1 SHL CALLER PUSH3 0x2C7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x20B PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 CALLER PUSH3 0x2C7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0xA39 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH3 0x238 JUMPI PUSH3 0x230 DUP4 PUSH3 0x3CB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH3 0x264 JUMP JUMPDEST DUP3 PUSH3 0x24A DUP4 PUSH3 0x438 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 DUP2 PUSH3 0x25B SWAP2 SWAP1 PUSH3 0x72F JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0x0 SHL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x2AC SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x887 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2DB DUP4 DUP4 PUSH3 0x442 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x3C0 JUMPI PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x35C PUSH3 0x4AD PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH3 0x3C5 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH3 0x41B JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x305A27A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x412 SWAP2 SWAP1 PUSH3 0x973 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH3 0x429 SWAP1 PUSH3 0x9C9 JUMP JUMPDEST PUSH1 0x0 SHR OR PUSH1 0x0 SHL SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x537 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x54D JUMPI PUSH3 0x54C PUSH3 0x4EF JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x5B7 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x578 JUMP JUMPDEST PUSH3 0x5C3 DUP7 DUP4 PUSH3 0x578 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x610 PUSH3 0x60A PUSH3 0x604 DUP5 PUSH3 0x5DB JUMP JUMPDEST PUSH3 0x5E5 JUMP JUMPDEST PUSH3 0x5DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x62C DUP4 PUSH3 0x5EF JUMP JUMPDEST PUSH3 0x644 PUSH3 0x63B DUP3 PUSH3 0x617 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x585 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x65B PUSH3 0x64C JUMP JUMPDEST PUSH3 0x668 DUP2 DUP5 DUP5 PUSH3 0x621 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x690 JUMPI PUSH3 0x684 PUSH1 0x0 DUP3 PUSH3 0x651 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x66E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x6DF JUMPI PUSH3 0x6A9 DUP2 PUSH3 0x553 JUMP JUMPDEST PUSH3 0x6B4 DUP5 PUSH3 0x568 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x6C4 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x6DC PUSH3 0x6D3 DUP6 PUSH3 0x568 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x66D JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x704 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x6E4 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x71F DUP4 DUP4 PUSH3 0x6F1 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x73A DUP3 PUSH3 0x4B5 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x756 JUMPI PUSH3 0x755 PUSH3 0x4C0 JUMP JUMPDEST JUMPDEST PUSH3 0x762 DUP3 SLOAD PUSH3 0x51E JUMP JUMPDEST PUSH3 0x76F DUP3 DUP3 DUP6 PUSH3 0x694 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x7A7 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x792 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x79E DUP6 DUP3 PUSH3 0x711 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x80E JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x7B7 DUP7 PUSH3 0x553 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x7E1 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x7BA JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x801 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x7FD PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x6F1 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x82B DUP2 PUSH3 0x816 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x83C DUP2 PUSH3 0x5DB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x86F DUP3 PUSH3 0x842 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x881 DUP2 PUSH3 0x862 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH3 0x89E PUSH1 0x0 DUP4 ADD DUP9 PUSH3 0x820 JUMP JUMPDEST PUSH3 0x8AD PUSH1 0x20 DUP4 ADD DUP8 PUSH3 0x820 JUMP JUMPDEST PUSH3 0x8BC PUSH1 0x40 DUP4 ADD DUP7 PUSH3 0x820 JUMP JUMPDEST PUSH3 0x8CB PUSH1 0x60 DUP4 ADD DUP6 PUSH3 0x831 JUMP JUMPDEST PUSH3 0x8DA PUSH1 0x80 DUP4 ADD DUP5 PUSH3 0x876 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x915 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x8F8 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x93F DUP3 PUSH3 0x4B5 JUMP JUMPDEST PUSH3 0x94B DUP2 DUP6 PUSH3 0x8E4 JUMP JUMPDEST SWAP4 POP PUSH3 0x95D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x8F5 JUMP JUMPDEST PUSH3 0x968 DUP2 PUSH3 0x921 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x98F DUP2 DUP5 PUSH3 0x932 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x9C0 DUP3 MLOAD PUSH3 0x816 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x9D6 DUP3 PUSH3 0x997 JUMP JUMPDEST DUP3 PUSH3 0x9E2 DUP5 PUSH3 0x9A2 JUMP JUMPDEST SWAP1 POP PUSH3 0x9EF DUP2 PUSH3 0x9B2 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH3 0xA32 JUMPI PUSH3 0xA2D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH3 0x578 JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x2649 PUSH3 0xA94 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x1298 ADD MSTORE PUSH1 0x0 PUSH2 0x125D ADD MSTORE PUSH1 0x0 PUSH2 0x17FE ADD MSTORE PUSH1 0x0 PUSH2 0x17DD ADD MSTORE PUSH1 0x0 PUSH2 0xFE3 ADD MSTORE PUSH1 0x0 PUSH2 0x1039 ADD MSTORE PUSH1 0x0 PUSH2 0x1062 ADD MSTORE PUSH2 0x2649 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x158 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x3F5 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x413 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x443 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x45F JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x47D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x499 JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x353 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x3A7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3D7 JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0x3DD1EB61 EQ PUSH2 0x2EB JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x229 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x172 SWAP2 SWAP1 PUSH2 0x1CB8 JUMP JUMPDEST PUSH2 0x4C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x184 SWAP2 SWAP1 PUSH2 0x1D00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x195 PUSH2 0x543 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A2 SWAP2 SWAP1 PUSH2 0x1DAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x1E61 JUMP JUMPDEST PUSH2 0x5D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D2 SWAP2 SWAP1 PUSH2 0x1D00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E3 PUSH2 0x5F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x213 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x1ECB JUMP JUMPDEST PUSH2 0x602 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x1D00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x243 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x1F54 JUMP JUMPDEST PUSH2 0x631 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x1F90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x273 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26E SWAP2 SWAP1 PUSH2 0x1FAB JUMP JUMPDEST PUSH2 0x651 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27D PUSH2 0x673 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28A SWAP2 SWAP1 PUSH2 0x2007 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29B PUSH2 0x67C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B9 PUSH2 0x68B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C6 SWAP2 SWAP1 PUSH2 0x1F90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E4 SWAP2 SWAP1 PUSH2 0x1FAB JUMP JUMPDEST PUSH2 0x69A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x305 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x300 SWAP2 SWAP1 PUSH2 0x2022 JUMP JUMPDEST PUSH2 0x715 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x321 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31C SWAP2 SWAP1 PUSH2 0x1E61 JUMP JUMPDEST PUSH2 0x751 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x338 SWAP2 SWAP1 PUSH2 0x2022 JUMP JUMPDEST PUSH2 0x88D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34A SWAP2 SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x368 SWAP2 SWAP1 PUSH2 0x2022 JUMP JUMPDEST PUSH2 0x8D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37A SWAP2 SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38B PUSH2 0x8E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39E SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2157 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BC SWAP2 SWAP1 PUSH2 0x1FAB JUMP JUMPDEST PUSH2 0x991 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CE SWAP2 SWAP1 PUSH2 0x1D00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DF PUSH2 0x9FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EC SWAP2 SWAP1 PUSH2 0x1DAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FD PUSH2 0xA8E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x40A SWAP2 SWAP1 PUSH2 0x1F90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x42D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x428 SWAP2 SWAP1 PUSH2 0x1E61 JUMP JUMPDEST PUSH2 0xA95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43A SWAP2 SWAP1 PUSH2 0x1D00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x45D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x458 SWAP2 SWAP1 PUSH2 0x2207 JUMP JUMPDEST PUSH2 0xAB8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x467 PUSH2 0xC00 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x474 SWAP2 SWAP1 PUSH2 0x1F90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x497 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x492 SWAP2 SWAP1 PUSH2 0x1FAB JUMP JUMPDEST PUSH2 0xC24 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4AE SWAP2 SWAP1 PUSH2 0x22A9 JUMP JUMPDEST PUSH2 0xC46 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C0 SWAP2 SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x53C JUMPI POP PUSH2 0x53B DUP3 PUSH2 0xCCD JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x552 SWAP1 PUSH2 0x2318 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x57E SWAP1 PUSH2 0x2318 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5CB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5A0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5CB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5AE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5E0 PUSH2 0xD37 JUMP JUMPDEST SWAP1 POP PUSH2 0x5ED DUP2 DUP6 DUP6 PUSH2 0xD3F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x60D PUSH2 0xD37 JUMP JUMPDEST SWAP1 POP PUSH2 0x61A DUP6 DUP3 DUP6 PUSH2 0xD51 JUMP JUMPDEST PUSH2 0x625 DUP6 DUP6 DUP6 PUSH2 0xDE5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x65A DUP3 PUSH2 0x631 JUMP JUMPDEST PUSH2 0x663 DUP2 PUSH2 0xED9 JUMP JUMPDEST PUSH2 0x66D DUP4 DUP4 PUSH2 0xEED JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH11 0x295BE96E64066972000000 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x695 PUSH2 0xFDF JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6A2 PUSH2 0xD37 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x706 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x710 DUP3 DUP3 PUSH2 0x1096 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0x722 DUP2 PUSH2 0xED9 JUMP JUMPDEST PUSH2 0x74C PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP4 PUSH2 0xEED JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x77B DUP2 PUSH2 0xED9 JUMP JUMPDEST PUSH11 0x295BE96E64066972000000 DUP3 PUSH2 0x790 PUSH2 0x5F8 JUMP JUMPDEST PUSH2 0x79A SWAP2 SWAP1 PUSH2 0x2378 JUMP JUMPDEST GT ISZERO PUSH2 0x7DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D2 SWAP1 PUSH2 0x23F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH11 0x295BE96E64066972000000 PUSH2 0x7EF PUSH2 0x5F8 JUMP JUMPDEST GT ISZERO PUSH2 0x830 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x827 SWAP1 PUSH2 0x23F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x83A DUP4 DUP4 PUSH2 0x1189 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x30385C845B448A36257A6A1716E6AD2E1BC2CBE333CDE1E69FE849AD6511ADFE DUP4 PUSH1 0x40 MLOAD PUSH2 0x880 SWAP2 SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8E0 DUP3 PUSH2 0x120B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x8FB PUSH2 0x1254 JUMP JUMPDEST PUSH2 0x903 PUSH2 0x128F JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x924 JUMPI PUSH2 0x923 PUSH2 0x2418 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x952 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xA0B SWAP1 PUSH2 0x2318 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA37 SWAP1 PUSH2 0x2318 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA84 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA59 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA84 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA67 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAA0 PUSH2 0xD37 JUMP JUMPDEST SWAP1 POP PUSH2 0xAAD DUP2 DUP6 DUP6 PUSH2 0xDE5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xAFD JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF4 SWAP2 SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0xB2C DUP13 PUSH2 0x12CA JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB42 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xB65 DUP3 PUSH2 0x1321 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB75 DUP3 DUP8 DUP8 DUP8 PUSH2 0x133B JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBE9 JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBE0 SWAP3 SWAP2 SWAP1 PUSH2 0x24A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBF4 DUP11 DUP11 DUP11 PUSH2 0xD3F JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0xC2D DUP3 PUSH2 0x631 JUMP JUMPDEST PUSH2 0xC36 DUP2 PUSH2 0xED9 JUMP JUMPDEST PUSH2 0xC40 DUP4 DUP4 PUSH2 0x1096 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xD4C DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x136B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD5D DUP5 DUP5 PUSH2 0xC46 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xDDF JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xDCF JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDDE DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x136B JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE57 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE4E SWAP2 SWAP1 PUSH2 0x2508 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEC9 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEC0 SWAP2 SWAP1 PUSH2 0x2508 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xED4 DUP4 DUP4 DUP4 PUSH2 0x1542 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xEEA DUP2 PUSH2 0xEE5 PUSH2 0xD37 JUMP JUMPDEST PUSH2 0x1767 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEF9 DUP4 DUP4 PUSH2 0x991 JUMP JUMPDEST PUSH2 0xFD4 JUMPI PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xF71 PUSH2 0xD37 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xFD9 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x105B JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x1088 JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0x1093 JUMP JUMPDEST PUSH2 0x1090 PUSH2 0x17B8 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10A2 DUP4 DUP4 PUSH2 0x991 JUMP JUMPDEST ISZERO PUSH2 0x117E JUMPI PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x111B PUSH2 0xD37 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1183 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11FB JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11F2 SWAP2 SWAP1 PUSH2 0x2508 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1207 PUSH1 0x0 DUP4 DUP4 PUSH2 0x1542 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x128A PUSH1 0x6 PUSH32 0x0 PUSH2 0x184E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x12C5 PUSH1 0x7 PUSH32 0x0 PUSH2 0x184E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1334 PUSH2 0x132E PUSH2 0xFDF JUMP JUMPDEST DUP4 PUSH2 0x18FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x134D DUP9 DUP9 DUP9 DUP9 PUSH2 0x193F JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x135D DUP3 DUP3 PUSH2 0x1A33 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13DD JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13D4 SWAP2 SWAP1 PUSH2 0x2508 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x144F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1446 SWAP2 SWAP1 PUSH2 0x2508 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x153C JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1533 SWAP2 SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1594 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1588 SWAP2 SWAP1 PUSH2 0x2378 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1667 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1620 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1617 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16B0 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x16FD JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x175A SWAP2 SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1771 DUP3 DUP3 PUSH2 0x991 JUMP JUMPDEST PUSH2 0x17B4 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17AB SWAP3 SWAP2 SWAP1 PUSH2 0x2523 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1833 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x254C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH1 0x0 SHL DUP4 EQ PUSH2 0x186B JUMPI PUSH2 0x1864 DUP4 PUSH2 0x1B97 JUMP JUMPDEST SWAP1 POP PUSH2 0x18F8 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x1877 SWAP1 PUSH2 0x2318 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x18A3 SWAP1 PUSH2 0x2318 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x18F0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x18C5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x18F0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x18D3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x197F JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1A29 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x19A4 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x259F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x19C6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A1A JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x1A29 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1A47 JUMPI PUSH2 0x1A46 PUSH2 0x25E4 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1A5A JUMPI PUSH2 0x1A59 PUSH2 0x25E4 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x1B93 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1A74 JUMPI PUSH2 0x1A73 PUSH2 0x25E4 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1A87 JUMPI PUSH2 0x1A86 PUSH2 0x25E4 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1ABE JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1AD2 JUMPI PUSH2 0x1AD1 PUSH2 0x25E4 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1AE5 JUMPI PUSH2 0x1AE4 PUSH2 0x25E4 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1B2A JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B21 SWAP2 SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x1B3D JUMPI PUSH2 0x1B3C PUSH2 0x25E4 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1B50 JUMPI PUSH2 0x1B4F PUSH2 0x25E4 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1B92 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B89 SWAP2 SWAP1 PUSH2 0x1F90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1BA4 DUP4 PUSH2 0x1C0B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BC3 JUMPI PUSH2 0x1BC2 PUSH2 0x2418 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1BF5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 PUSH1 0x0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x1C52 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C95 DUP2 PUSH2 0x1C60 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CB2 DUP2 PUSH2 0x1C8C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CCE JUMPI PUSH2 0x1CCD PUSH2 0x1C5B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CDC DUP5 DUP3 DUP6 ADD PUSH2 0x1CA3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CFA DUP2 PUSH2 0x1CE5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D15 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1CF1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D55 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D3A JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D7D DUP3 PUSH2 0x1D1B JUMP JUMPDEST PUSH2 0x1D87 DUP2 DUP6 PUSH2 0x1D26 JUMP JUMPDEST SWAP4 POP PUSH2 0x1D97 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D37 JUMP JUMPDEST PUSH2 0x1DA0 DUP2 PUSH2 0x1D61 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DC5 DUP2 DUP5 PUSH2 0x1D72 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DF8 DUP3 PUSH2 0x1DCD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E08 DUP2 PUSH2 0x1DED JUMP JUMPDEST DUP2 EQ PUSH2 0x1E13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E25 DUP2 PUSH2 0x1DFF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E3E DUP2 PUSH2 0x1E2B JUMP JUMPDEST DUP2 EQ PUSH2 0x1E49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E5B DUP2 PUSH2 0x1E35 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E78 JUMPI PUSH2 0x1E77 PUSH2 0x1C5B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E86 DUP6 DUP3 DUP7 ADD PUSH2 0x1E16 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E97 DUP6 DUP3 DUP7 ADD PUSH2 0x1E4C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EAA DUP2 PUSH2 0x1E2B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EC5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1EA1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1EE4 JUMPI PUSH2 0x1EE3 PUSH2 0x1C5B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EF2 DUP7 DUP3 DUP8 ADD PUSH2 0x1E16 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1F03 DUP7 DUP3 DUP8 ADD PUSH2 0x1E16 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1F14 DUP7 DUP3 DUP8 ADD PUSH2 0x1E4C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F31 DUP2 PUSH2 0x1F1E JUMP JUMPDEST DUP2 EQ PUSH2 0x1F3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F4E DUP2 PUSH2 0x1F28 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F6A JUMPI PUSH2 0x1F69 PUSH2 0x1C5B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F78 DUP5 DUP3 DUP6 ADD PUSH2 0x1F3F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F8A DUP2 PUSH2 0x1F1E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FA5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F81 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FC2 JUMPI PUSH2 0x1FC1 PUSH2 0x1C5B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FD0 DUP6 DUP3 DUP7 ADD PUSH2 0x1F3F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1FE1 DUP6 DUP3 DUP7 ADD PUSH2 0x1E16 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2001 DUP2 PUSH2 0x1FEB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x201C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1FF8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2038 JUMPI PUSH2 0x2037 PUSH2 0x1C5B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2046 DUP5 DUP3 DUP6 ADD PUSH2 0x1E16 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2084 DUP2 PUSH2 0x204F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2093 DUP2 PUSH2 0x1DED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20CE DUP2 PUSH2 0x1E2B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20E0 DUP4 DUP4 PUSH2 0x20C5 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2104 DUP3 PUSH2 0x2099 JUMP JUMPDEST PUSH2 0x210E DUP2 DUP6 PUSH2 0x20A4 JUMP JUMPDEST SWAP4 POP PUSH2 0x2119 DUP4 PUSH2 0x20B5 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x214A JUMPI DUP2 MLOAD PUSH2 0x2131 DUP9 DUP3 PUSH2 0x20D4 JUMP JUMPDEST SWAP8 POP PUSH2 0x213C DUP4 PUSH2 0x20EC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x211D JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x216C PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x207B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x217E DUP2 DUP10 PUSH2 0x1D72 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2192 DUP2 DUP9 PUSH2 0x1D72 JUMP JUMPDEST SWAP1 POP PUSH2 0x21A1 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x1EA1 JUMP JUMPDEST PUSH2 0x21AE PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x208A JUMP JUMPDEST PUSH2 0x21BB PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x1F81 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x21CD DUP2 DUP5 PUSH2 0x20F9 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x21E4 DUP2 PUSH2 0x1FEB JUMP JUMPDEST DUP2 EQ PUSH2 0x21EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2201 DUP2 PUSH2 0x21DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x2226 JUMPI PUSH2 0x2225 PUSH2 0x1C5B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2234 DUP11 DUP3 DUP12 ADD PUSH2 0x1E16 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x2245 DUP11 DUP3 DUP12 ADD PUSH2 0x1E16 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x2256 DUP11 DUP3 DUP12 ADD PUSH2 0x1E4C JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x2267 DUP11 DUP3 DUP12 ADD PUSH2 0x1E4C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x2278 DUP11 DUP3 DUP12 ADD PUSH2 0x21F2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x2289 DUP11 DUP3 DUP12 ADD PUSH2 0x1F3F JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x229A DUP11 DUP3 DUP12 ADD PUSH2 0x1F3F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22C0 JUMPI PUSH2 0x22BF PUSH2 0x1C5B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22CE DUP6 DUP3 DUP7 ADD PUSH2 0x1E16 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x22DF DUP6 DUP3 DUP7 ADD PUSH2 0x1E16 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2330 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2343 JUMPI PUSH2 0x2342 PUSH2 0x22E9 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2383 DUP3 PUSH2 0x1E2B JUMP JUMPDEST SWAP2 POP PUSH2 0x238E DUP4 PUSH2 0x1E2B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x23A6 JUMPI PUSH2 0x23A5 PUSH2 0x2349 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x42617264546F6B656E3A206D617820737570706C792065786365656465640000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23E2 PUSH1 0x1E DUP4 PUSH2 0x1D26 JUMP JUMPDEST SWAP2 POP PUSH2 0x23ED DUP3 PUSH2 0x23AC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2411 DUP2 PUSH2 0x23D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x245C PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x1F81 JUMP JUMPDEST PUSH2 0x2469 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x208A JUMP JUMPDEST PUSH2 0x2476 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x208A JUMP JUMPDEST PUSH2 0x2483 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1EA1 JUMP JUMPDEST PUSH2 0x2490 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1EA1 JUMP JUMPDEST PUSH2 0x249D PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x1EA1 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x24BD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x208A JUMP JUMPDEST PUSH2 0x24CA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x208A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x24E6 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x208A JUMP JUMPDEST PUSH2 0x24F3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1EA1 JUMP JUMPDEST PUSH2 0x2500 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1EA1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x251D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x208A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2538 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x208A JUMP JUMPDEST PUSH2 0x2545 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F81 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2561 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1F81 JUMP JUMPDEST PUSH2 0x256E PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1F81 JUMP JUMPDEST PUSH2 0x257B PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1F81 JUMP JUMPDEST PUSH2 0x2588 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1EA1 JUMP JUMPDEST PUSH2 0x2595 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x208A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x25B4 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1F81 JUMP JUMPDEST PUSH2 0x25C1 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1FF8 JUMP JUMPDEST PUSH2 0x25CE PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1F81 JUMP JUMPDEST PUSH2 0x25DB PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1F81 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 DUP16 0x1E DUP10 0x26 MSTORE PUSH7 0x3DEB044D1BC4BD PUSH17 0x8AB02973D6D8AACB293A3605D552521BD9 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"246:882:30:-:0;;;436:190;;;;;;;;;;1574:52:11;;;;;;;;;;;;;;;;;1613:4;3328:431:23;;;;;;;;;;;;;;;;;1896:113:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;3401:45:23;3432:13;3401:4;:30;;;;:45;;;;:::i;:::-;3393:53;;;;;;3467:51;3501:16;3467:7;:33;;;;:51;;;;:::i;:::-;3456:62;;;;;;3558:4;3542:22;;;;;;3528:36;;;;;;3607:7;3591:25;;;;;;3574:42;;;;;;3644:13;3627:30;;;;;;3692:23;:21;;;:23;;:::i;:::-;3667:48;;;;;;3747:4;3725:27;;;;;;;;;;3328:431;;1574:52:11;532:42:30::2;2232:4:0;543:18:30::0;::::2;563:10;532;;;:42;;:::i;:::-;;584:35;347:24;608:10;584;;;:35;;:::i;:::-;;246:882:::0;;2914:340:19;3010:11;3059:2;3043:5;3037:19;:24;3033:215;;;3084:20;3098:5;3084:13;;;:20;;:::i;:::-;3077:27;;;;3033:215;3176:5;3135:32;3161:5;3135:25;;;:32;;:::i;:::-;:38;;:46;;;;;;:::i;:::-;;1390:66;3219:17;;3195:42;;2914:340;;;;;:::o;4113:179:23:-;4168:7;2079:95;4226:11;;4239:14;;4255:13;4278:4;4204:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;:::o;6179:316:0:-;6256:4;6277:22;6285:4;6291:7;6277;;;:22;;:::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;;;:12;;:::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;1708:286:19:-;1773:11;1796:17;1822:3;1796:30;;1854:2;1840:4;:11;:16;1836:72;;;1893:3;1879:18;;;;;;;;;;;:::i;:::-;;;;;;;;1836:72;1974:4;:11;1965:4;1957:13;;;:::i;:::-;1949:22;;:36;1941:45;;1917:70;;;1708:286;;;:::o;3135:202:20:-;3203:20;3311:10;3301:20;;3135:202;;;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;656:96:16:-;709:7;735:10;728:17;;656:96;:::o;7:99:33:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:77::-;5271:7;5300:5;5289:16;;5234:77;;;:::o;5317:118::-;5404:24;5422:5;5404:24;:::i;:::-;5399:3;5392:37;5317:118;;:::o;5441:::-;5528:24;5546:5;5528:24;:::i;:::-;5523:3;5516:37;5441:118;;:::o;5565:126::-;5602:7;5642:42;5635:5;5631:54;5620:65;;5565:126;;;:::o;5697:96::-;5734:7;5763:24;5781:5;5763:24;:::i;:::-;5752:35;;5697:96;;;:::o;5799:118::-;5886:24;5904:5;5886:24;:::i;:::-;5881:3;5874:37;5799:118;;:::o;5923:664::-;6128:4;6166:3;6155:9;6151:19;6143:27;;6180:71;6248:1;6237:9;6233:17;6224:6;6180:71;:::i;:::-;6261:72;6329:2;6318:9;6314:18;6305:6;6261:72;:::i;:::-;6343;6411:2;6400:9;6396:18;6387:6;6343:72;:::i;:::-;6425;6493:2;6482:9;6478:18;6469:6;6425:72;:::i;:::-;6507:73;6575:3;6564:9;6560:19;6551:6;6507:73;:::i;:::-;5923:664;;;;;;;;:::o;6593:169::-;6677:11;6711:6;6706:3;6699:19;6751:4;6746:3;6742:14;6727:29;;6593:169;;;;:::o;6768:246::-;6849:1;6859:113;6873:6;6870:1;6867:13;6859:113;;;6958:1;6953:3;6949:11;6943:18;6939:1;6934:3;6930:11;6923:39;6895:2;6892:1;6888:10;6883:15;;6859:113;;;7006:1;6997:6;6992:3;6988:16;6981:27;6830:184;6768:246;;;:::o;7020:102::-;7061:6;7112:2;7108:7;7103:2;7096:5;7092:14;7088:28;7078:38;;7020:102;;;:::o;7128:377::-;7216:3;7244:39;7277:5;7244:39;:::i;:::-;7299:71;7363:6;7358:3;7299:71;:::i;:::-;7292:78;;7379:65;7437:6;7432:3;7425:4;7418:5;7414:16;7379:65;:::i;:::-;7469:29;7491:6;7469:29;:::i;:::-;7464:3;7460:39;7453:46;;7220:285;7128:377;;;;:::o;7511:313::-;7624:4;7662:2;7651:9;7647:18;7639:26;;7711:9;7705:4;7701:20;7697:1;7686:9;7682:17;7675:47;7739:78;7812:4;7803:6;7739:78;:::i;:::-;7731:86;;7511:313;;;;:::o;7830:98::-;7881:6;7915:5;7909:12;7899:22;;7830:98;;;:::o;7934:116::-;7985:4;8008:3;8000:11;;8038:4;8033:3;8029:14;8021:22;;7934:116;;;:::o;8056:154::-;8099:11;8135:29;8159:3;8153:10;8135:29;:::i;:::-;8198:5;8174:29;;8111:99;8056:154;;;:::o;8216:594::-;8300:5;8331:38;8363:5;8331:38;:::i;:::-;8394:5;8421:40;8455:5;8421:40;:::i;:::-;8409:52;;8480:35;8506:8;8480:35;:::i;:::-;8471:44;;8539:2;8531:6;8528:14;8525:278;;;8610:169;8695:66;8665:6;8661:2;8657:15;8654:1;8650:23;8610:169;:::i;:::-;8587:5;8566:227;8557:236;;8525:278;8306:504;;8216:594;;;:::o;246:882:30:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DEFAULT_ADMIN_ROLE_29":{"entryPoint":2702,"id":29,"parameterSlots":0,"returnSlots":0},"@DOMAIN_SEPARATOR_2666":{"entryPoint":1675,"id":2666,"parameterSlots":0,"returnSlots":1},"@MAX_SUPPLY_5838":{"entryPoint":1660,"id":5838,"parameterSlots":0,"returnSlots":0},"@MINTER_ROLE_5831":{"entryPoint":3072,"id":5831,"parameterSlots":0,"returnSlots":0},"@_EIP712Name_4468":{"entryPoint":4692,"id":4468,"parameterSlots":0,"returnSlots":1},"@_EIP712Version_4480":{"entryPoint":4751,"id":4480,"parameterSlots":0,"returnSlots":1},"@_approve_2326":{"entryPoint":3391,"id":2326,"parameterSlots":3,"returnSlots":0},"@_approve_2386":{"entryPoint":4971,"id":2386,"parameterSlots":4,"returnSlots":0},"@_buildDomainSeparator_4398":{"entryPoint":6072,"id":4398,"parameterSlots":0,"returnSlots":1},"@_checkRole_114":{"entryPoint":5991,"id":114,"parameterSlots":2,"returnSlots":0},"@_checkRole_93":{"entryPoint":3801,"id":93,"parameterSlots":1,"returnSlots":0},"@_domainSeparatorV4_4377":{"entryPoint":4063,"id":4377,"parameterSlots":0,"returnSlots":1},"@_grantRole_256":{"entryPoint":3821,"id":256,"parameterSlots":2,"returnSlots":1},"@_hashTypedDataV4_4414":{"entryPoint":4897,"id":4414,"parameterSlots":1,"returnSlots":1},"@_mint_2275":{"entryPoint":4489,"id":2275,"parameterSlots":2,"returnSlots":0},"@_msgSender_3177":{"entryPoint":3383,"id":3177,"parameterSlots":0,"returnSlots":1},"@_revokeRole_294":{"entryPoint":4246,"id":294,"parameterSlots":2,"returnSlots":1},"@_spendAllowance_2434":{"entryPoint":3409,"id":2434,"parameterSlots":3,"returnSlots":0},"@_throwError_4253":{"entryPoint":6707,"id":4253,"parameterSlots":2,"returnSlots":0},"@_transfer_2165":{"entryPoint":3557,"id":2165,"parameterSlots":3,"returnSlots":0},"@_update_2242":{"entryPoint":5442,"id":2242,"parameterSlots":3,"returnSlots":0},"@_useNonce_3229":{"entryPoint":4810,"id":3229,"parameterSlots":1,"returnSlots":1},"@allowance_2062":{"entryPoint":3142,"id":2062,"parameterSlots":2,"returnSlots":1},"@approve_2086":{"entryPoint":1493,"id":2086,"parameterSlots":2,"returnSlots":1},"@balanceOf_2021":{"entryPoint":2189,"id":2021,"parameterSlots":1,"returnSlots":1},"@byteLength_3442":{"entryPoint":7179,"id":3442,"parameterSlots":1,"returnSlots":1},"@decimals_1999":{"entryPoint":1651,"id":1999,"parameterSlots":0,"returnSlots":1},"@eip712Domain_4456":{"entryPoint":2279,"id":4456,"parameterSlots":0,"returnSlots":7},"@getRoleAdmin_128":{"entryPoint":1585,"id":128,"parameterSlots":1,"returnSlots":1},"@grantMinterRole_5875":{"entryPoint":1813,"id":5875,"parameterSlots":1,"returnSlots":0},"@grantRole_147":{"entryPoint":1617,"id":147,"parameterSlots":2,"returnSlots":0},"@hasRole_80":{"entryPoint":2449,"id":80,"parameterSlots":2,"returnSlots":1},"@mint_5914":{"entryPoint":1873,"id":5914,"parameterSlots":2,"returnSlots":0},"@name_1981":{"entryPoint":1347,"id":1981,"parameterSlots":0,"returnSlots":1},"@nonces_2656":{"entryPoint":2261,"id":2656,"parameterSlots":1,"returnSlots":1},"@nonces_3214":{"entryPoint":4619,"id":3214,"parameterSlots":1,"returnSlots":1},"@permit_2639":{"entryPoint":2744,"id":2639,"parameterSlots":7,"returnSlots":0},"@recover_4204":{"entryPoint":4923,"id":4204,"parameterSlots":4,"returnSlots":1},"@renounceRole_189":{"entryPoint":1690,"id":189,"parameterSlots":2,"returnSlots":0},"@revokeRole_166":{"entryPoint":3108,"id":166,"parameterSlots":2,"returnSlots":0},"@supportsInterface_4578":{"entryPoint":3277,"id":4578,"parameterSlots":1,"returnSlots":1},"@supportsInterface_62":{"entryPoint":1225,"id":62,"parameterSlots":1,"returnSlots":1},"@symbol_1990":{"entryPoint":2556,"id":1990,"parameterSlots":0,"returnSlots":1},"@toStringWithFallback_3509":{"entryPoint":6222,"id":3509,"parameterSlots":2,"returnSlots":1},"@toString_3410":{"entryPoint":7063,"id":3410,"parameterSlots":1,"returnSlots":1},"@toTypedDataHash_4554":{"entryPoint":6398,"id":4554,"parameterSlots":2,"returnSlots":1},"@totalSupply_2008":{"entryPoint":1528,"id":2008,"parameterSlots":0,"returnSlots":1},"@transferFrom_2118":{"entryPoint":1538,"id":2118,"parameterSlots":3,"returnSlots":1},"@transfer_2045":{"entryPoint":2709,"id":2045,"parameterSlots":2,"returnSlots":1},"@tryRecover_4168":{"entryPoint":6463,"id":4168,"parameterSlots":4,"returnSlots":3},"abi_decode_t_address":{"entryPoint":7702,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":7999,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":7331,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":7756,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint8":{"entryPoint":8690,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":8226,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":8873,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":7883,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":8711,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":7777,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32":{"entryPoint":8020,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":8107,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":7352,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":8404,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":8330,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":8441,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":7409,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes1_to_t_bytes1_fromStack":{"entryPoint":8315,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":8065,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":7538,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_e4a161b26eb26ab0156b1351b0fe22ea7dfeeb342a09f3839aad0304de117d97_to_t_string_memory_ptr_fromStack":{"entryPoint":9173,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":8389,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":7841,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":8184,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":9480,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":9384,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed":{"entryPoint":9507,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":9425,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":7424,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":8535,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":8080,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":9287,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":9548,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":9631,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7595,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e4a161b26eb26ab0156b1351b0fe22ea7dfeeb342a09f3839aad0304de117d97__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9208,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":7856,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":8199,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":8373,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":8345,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":7451,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":8428,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":8356,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":7462,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":9080,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":7661,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":7397,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes1":{"entryPoint":8271,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":7966,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":7264,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":7629,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":7723,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":8171,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":7479,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":8984,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":9033,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":9700,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":8937,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":9240,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":7259,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":7521,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_e4a161b26eb26ab0156b1351b0fe22ea7dfeeb342a09f3839aad0304de117d97":{"entryPoint":9132,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":7679,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":7976,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":7308,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":7733,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint8":{"entryPoint":8667,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:18274:33","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:33","statements":[{"nodeType":"YulAssignment","src":"57:19:33","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:33","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:33"},"nodeType":"YulFunctionCall","src":"67:9:33"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:33"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:33","type":""}],"src":"7:75:33"},{"body":{"nodeType":"YulBlock","src":"177:28:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:33"},"nodeType":"YulFunctionCall","src":"187:12:33"},"nodeType":"YulExpressionStatement","src":"187:12:33"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:33"},{"body":{"nodeType":"YulBlock","src":"300:28:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:33"},"nodeType":"YulFunctionCall","src":"310:12:33"},"nodeType":"YulExpressionStatement","src":"310:12:33"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:33"},{"body":{"nodeType":"YulBlock","src":"378:105:33","statements":[{"nodeType":"YulAssignment","src":"388:89:33","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:33","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:33"},"nodeType":"YulFunctionCall","src":"399:78:33"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:33"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:33","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:33","type":""}],"src":"334:149:33"},{"body":{"nodeType":"YulBlock","src":"531:78:33","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:33"},"nodeType":"YulFunctionCall","src":"589:12:33"},"nodeType":"YulExpressionStatement","src":"589:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:33"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:33"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:33"},"nodeType":"YulFunctionCall","src":"561:23:33"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:33"},"nodeType":"YulFunctionCall","src":"551:34:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:33"},"nodeType":"YulFunctionCall","src":"544:42:33"},"nodeType":"YulIf","src":"541:62:33"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:33","type":""}],"src":"489:120:33"},{"body":{"nodeType":"YulBlock","src":"666:86:33","statements":[{"nodeType":"YulAssignment","src":"676:29:33","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:33"},"nodeType":"YulFunctionCall","src":"685:20:33"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:33"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:33"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:33"},"nodeType":"YulFunctionCall","src":"714:32:33"},"nodeType":"YulExpressionStatement","src":"714:32:33"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:33","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:33","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:33","type":""}],"src":"615:137:33"},{"body":{"nodeType":"YulBlock","src":"823:262:33","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:33"},"nodeType":"YulFunctionCall","src":"871:79:33"},"nodeType":"YulExpressionStatement","src":"871:79:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:33"},"nodeType":"YulFunctionCall","src":"840:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:33"},"nodeType":"YulFunctionCall","src":"836:32:33"},"nodeType":"YulIf","src":"833:119:33"},{"nodeType":"YulBlock","src":"962:116:33","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:33","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:33","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:33","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:33"},"nodeType":"YulFunctionCall","src":"1036:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:33"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:33"},"nodeType":"YulFunctionCall","src":"1016:52:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:33"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:33","type":""}],"src":"758:327:33"},{"body":{"nodeType":"YulBlock","src":"1133:48:33","statements":[{"nodeType":"YulAssignment","src":"1143:32:33","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:33"},"nodeType":"YulFunctionCall","src":"1161:13:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:33"},"nodeType":"YulFunctionCall","src":"1154:21:33"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:33"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:33","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:33","type":""}],"src":"1091:90:33"},{"body":{"nodeType":"YulBlock","src":"1246:50:33","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:33"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:33"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:33"},"nodeType":"YulFunctionCall","src":"1268:21:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:33"},"nodeType":"YulFunctionCall","src":"1256:34:33"},"nodeType":"YulExpressionStatement","src":"1256:34:33"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:33","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:33","type":""}],"src":"1187:109:33"},{"body":{"nodeType":"YulBlock","src":"1394:118:33","statements":[{"nodeType":"YulAssignment","src":"1404:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:33"},"nodeType":"YulFunctionCall","src":"1412:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:33"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:33","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:33"},"nodeType":"YulFunctionCall","src":"1487:17:33"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:33"},"nodeType":"YulFunctionCall","src":"1440:65:33"},"nodeType":"YulExpressionStatement","src":"1440:65:33"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:33","type":""}],"src":"1302:210:33"},{"body":{"nodeType":"YulBlock","src":"1577:40:33","statements":[{"nodeType":"YulAssignment","src":"1588:22:33","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1604:5:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1598:5:33"},"nodeType":"YulFunctionCall","src":"1598:12:33"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1588:6:33"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1560:5:33","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1570:6:33","type":""}],"src":"1518:99:33"},{"body":{"nodeType":"YulBlock","src":"1719:73:33","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1736:3:33"},{"name":"length","nodeType":"YulIdentifier","src":"1741:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1729:6:33"},"nodeType":"YulFunctionCall","src":"1729:19:33"},"nodeType":"YulExpressionStatement","src":"1729:19:33"},{"nodeType":"YulAssignment","src":"1757:29:33","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1776:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"1781:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:33"},"nodeType":"YulFunctionCall","src":"1772:14:33"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1757:11:33"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1691:3:33","type":""},{"name":"length","nodeType":"YulTypedName","src":"1696:6:33","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1707:11:33","type":""}],"src":"1623:169:33"},{"body":{"nodeType":"YulBlock","src":"1860:184:33","statements":[{"nodeType":"YulVariableDeclaration","src":"1870:10:33","value":{"kind":"number","nodeType":"YulLiteral","src":"1879:1:33","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1874:1:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"1939:63:33","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1964:3:33"},{"name":"i","nodeType":"YulIdentifier","src":"1969:1:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1960:3:33"},"nodeType":"YulFunctionCall","src":"1960:11:33"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1983:3:33"},{"name":"i","nodeType":"YulIdentifier","src":"1988:1:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1979:3:33"},"nodeType":"YulFunctionCall","src":"1979:11:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1973:5:33"},"nodeType":"YulFunctionCall","src":"1973:18:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1953:6:33"},"nodeType":"YulFunctionCall","src":"1953:39:33"},"nodeType":"YulExpressionStatement","src":"1953:39:33"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1900:1:33"},{"name":"length","nodeType":"YulIdentifier","src":"1903:6:33"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1897:2:33"},"nodeType":"YulFunctionCall","src":"1897:13:33"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1911:19:33","statements":[{"nodeType":"YulAssignment","src":"1913:15:33","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1922:1:33"},{"kind":"number","nodeType":"YulLiteral","src":"1925:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1918:3:33"},"nodeType":"YulFunctionCall","src":"1918:10:33"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1913:1:33"}]}]},"pre":{"nodeType":"YulBlock","src":"1893:3:33","statements":[]},"src":"1889:113:33"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2022:3:33"},{"name":"length","nodeType":"YulIdentifier","src":"2027:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2018:3:33"},"nodeType":"YulFunctionCall","src":"2018:16:33"},{"kind":"number","nodeType":"YulLiteral","src":"2036:1:33","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2011:6:33"},"nodeType":"YulFunctionCall","src":"2011:27:33"},"nodeType":"YulExpressionStatement","src":"2011:27:33"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1842:3:33","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1847:3:33","type":""},{"name":"length","nodeType":"YulTypedName","src":"1852:6:33","type":""}],"src":"1798:246:33"},{"body":{"nodeType":"YulBlock","src":"2098:54:33","statements":[{"nodeType":"YulAssignment","src":"2108:38:33","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2126:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"2133:2:33","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2122:3:33"},"nodeType":"YulFunctionCall","src":"2122:14:33"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2142:2:33","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2138:3:33"},"nodeType":"YulFunctionCall","src":"2138:7:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2118:3:33"},"nodeType":"YulFunctionCall","src":"2118:28:33"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2108:6:33"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2081:5:33","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2091:6:33","type":""}],"src":"2050:102:33"},{"body":{"nodeType":"YulBlock","src":"2250:285:33","statements":[{"nodeType":"YulVariableDeclaration","src":"2260:53:33","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2307:5:33"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2274:32:33"},"nodeType":"YulFunctionCall","src":"2274:39:33"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2264:6:33","type":""}]},{"nodeType":"YulAssignment","src":"2322:78:33","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2388:3:33"},{"name":"length","nodeType":"YulIdentifier","src":"2393:6:33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2329:58:33"},"nodeType":"YulFunctionCall","src":"2329:71:33"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2322:3:33"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2448:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"2455:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2444:3:33"},"nodeType":"YulFunctionCall","src":"2444:16:33"},{"name":"pos","nodeType":"YulIdentifier","src":"2462:3:33"},{"name":"length","nodeType":"YulIdentifier","src":"2467:6:33"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2409:34:33"},"nodeType":"YulFunctionCall","src":"2409:65:33"},"nodeType":"YulExpressionStatement","src":"2409:65:33"},{"nodeType":"YulAssignment","src":"2483:46:33","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2494:3:33"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2521:6:33"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2499:21:33"},"nodeType":"YulFunctionCall","src":"2499:29:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2490:3:33"},"nodeType":"YulFunctionCall","src":"2490:39:33"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2483:3:33"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2231:5:33","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2238:3:33","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2246:3:33","type":""}],"src":"2158:377:33"},{"body":{"nodeType":"YulBlock","src":"2659:195:33","statements":[{"nodeType":"YulAssignment","src":"2669:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2681:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"2692:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2677:3:33"},"nodeType":"YulFunctionCall","src":"2677:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2669:4:33"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2716:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"2727:1:33","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2712:3:33"},"nodeType":"YulFunctionCall","src":"2712:17:33"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2735:4:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"2741:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2731:3:33"},"nodeType":"YulFunctionCall","src":"2731:20:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2705:6:33"},"nodeType":"YulFunctionCall","src":"2705:47:33"},"nodeType":"YulExpressionStatement","src":"2705:47:33"},{"nodeType":"YulAssignment","src":"2761:86:33","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2833:6:33"},{"name":"tail","nodeType":"YulIdentifier","src":"2842:4:33"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2769:63:33"},"nodeType":"YulFunctionCall","src":"2769:78:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2761:4:33"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2631:9:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2643:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2654:4:33","type":""}],"src":"2541:313:33"},{"body":{"nodeType":"YulBlock","src":"2905:81:33","statements":[{"nodeType":"YulAssignment","src":"2915:65:33","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2930:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"2937:42:33","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2926:3:33"},"nodeType":"YulFunctionCall","src":"2926:54:33"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2915:7:33"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2887:5:33","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2897:7:33","type":""}],"src":"2860:126:33"},{"body":{"nodeType":"YulBlock","src":"3037:51:33","statements":[{"nodeType":"YulAssignment","src":"3047:35:33","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3076:5:33"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3058:17:33"},"nodeType":"YulFunctionCall","src":"3058:24:33"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3047:7:33"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3019:5:33","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3029:7:33","type":""}],"src":"2992:96:33"},{"body":{"nodeType":"YulBlock","src":"3137:79:33","statements":[{"body":{"nodeType":"YulBlock","src":"3194:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3203:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3206:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3196:6:33"},"nodeType":"YulFunctionCall","src":"3196:12:33"},"nodeType":"YulExpressionStatement","src":"3196:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3160:5:33"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3185:5:33"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3167:17:33"},"nodeType":"YulFunctionCall","src":"3167:24:33"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3157:2:33"},"nodeType":"YulFunctionCall","src":"3157:35:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3150:6:33"},"nodeType":"YulFunctionCall","src":"3150:43:33"},"nodeType":"YulIf","src":"3147:63:33"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3130:5:33","type":""}],"src":"3094:122:33"},{"body":{"nodeType":"YulBlock","src":"3274:87:33","statements":[{"nodeType":"YulAssignment","src":"3284:29:33","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3306:6:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3293:12:33"},"nodeType":"YulFunctionCall","src":"3293:20:33"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3284:5:33"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3349:5:33"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"3322:26:33"},"nodeType":"YulFunctionCall","src":"3322:33:33"},"nodeType":"YulExpressionStatement","src":"3322:33:33"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3252:6:33","type":""},{"name":"end","nodeType":"YulTypedName","src":"3260:3:33","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3268:5:33","type":""}],"src":"3222:139:33"},{"body":{"nodeType":"YulBlock","src":"3412:32:33","statements":[{"nodeType":"YulAssignment","src":"3422:16:33","value":{"name":"value","nodeType":"YulIdentifier","src":"3433:5:33"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3422:7:33"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3394:5:33","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3404:7:33","type":""}],"src":"3367:77:33"},{"body":{"nodeType":"YulBlock","src":"3493:79:33","statements":[{"body":{"nodeType":"YulBlock","src":"3550:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3559:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3562:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3552:6:33"},"nodeType":"YulFunctionCall","src":"3552:12:33"},"nodeType":"YulExpressionStatement","src":"3552:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3516:5:33"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3541:5:33"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3523:17:33"},"nodeType":"YulFunctionCall","src":"3523:24:33"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3513:2:33"},"nodeType":"YulFunctionCall","src":"3513:35:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3506:6:33"},"nodeType":"YulFunctionCall","src":"3506:43:33"},"nodeType":"YulIf","src":"3503:63:33"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3486:5:33","type":""}],"src":"3450:122:33"},{"body":{"nodeType":"YulBlock","src":"3630:87:33","statements":[{"nodeType":"YulAssignment","src":"3640:29:33","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3662:6:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3649:12:33"},"nodeType":"YulFunctionCall","src":"3649:20:33"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3640:5:33"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3705:5:33"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3678:26:33"},"nodeType":"YulFunctionCall","src":"3678:33:33"},"nodeType":"YulExpressionStatement","src":"3678:33:33"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3608:6:33","type":""},{"name":"end","nodeType":"YulTypedName","src":"3616:3:33","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3624:5:33","type":""}],"src":"3578:139:33"},{"body":{"nodeType":"YulBlock","src":"3806:391:33","statements":[{"body":{"nodeType":"YulBlock","src":"3852:83:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3854:77:33"},"nodeType":"YulFunctionCall","src":"3854:79:33"},"nodeType":"YulExpressionStatement","src":"3854:79:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3827:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"3836:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3823:3:33"},"nodeType":"YulFunctionCall","src":"3823:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"3848:2:33","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3819:3:33"},"nodeType":"YulFunctionCall","src":"3819:32:33"},"nodeType":"YulIf","src":"3816:119:33"},{"nodeType":"YulBlock","src":"3945:117:33","statements":[{"nodeType":"YulVariableDeclaration","src":"3960:15:33","value":{"kind":"number","nodeType":"YulLiteral","src":"3974:1:33","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3964:6:33","type":""}]},{"nodeType":"YulAssignment","src":"3989:63:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4024:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"4035:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4020:3:33"},"nodeType":"YulFunctionCall","src":"4020:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4044:7:33"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3999:20:33"},"nodeType":"YulFunctionCall","src":"3999:53:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3989:6:33"}]}]},{"nodeType":"YulBlock","src":"4072:118:33","statements":[{"nodeType":"YulVariableDeclaration","src":"4087:16:33","value":{"kind":"number","nodeType":"YulLiteral","src":"4101:2:33","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4091:6:33","type":""}]},{"nodeType":"YulAssignment","src":"4117:63:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4152:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"4163:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4148:3:33"},"nodeType":"YulFunctionCall","src":"4148:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4172:7:33"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4127:20:33"},"nodeType":"YulFunctionCall","src":"4127:53:33"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4117:6:33"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3768:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3779:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3791:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3799:6:33","type":""}],"src":"3723:474:33"},{"body":{"nodeType":"YulBlock","src":"4268:53:33","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4285:3:33"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4308:5:33"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4290:17:33"},"nodeType":"YulFunctionCall","src":"4290:24:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4278:6:33"},"nodeType":"YulFunctionCall","src":"4278:37:33"},"nodeType":"YulExpressionStatement","src":"4278:37:33"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4256:5:33","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4263:3:33","type":""}],"src":"4203:118:33"},{"body":{"nodeType":"YulBlock","src":"4425:124:33","statements":[{"nodeType":"YulAssignment","src":"4435:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4447:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"4458:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4443:3:33"},"nodeType":"YulFunctionCall","src":"4443:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4435:4:33"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4515:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4528:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"4539:1:33","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4524:3:33"},"nodeType":"YulFunctionCall","src":"4524:17:33"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"4471:43:33"},"nodeType":"YulFunctionCall","src":"4471:71:33"},"nodeType":"YulExpressionStatement","src":"4471:71:33"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4397:9:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4409:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4420:4:33","type":""}],"src":"4327:222:33"},{"body":{"nodeType":"YulBlock","src":"4655:519:33","statements":[{"body":{"nodeType":"YulBlock","src":"4701:83:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4703:77:33"},"nodeType":"YulFunctionCall","src":"4703:79:33"},"nodeType":"YulExpressionStatement","src":"4703:79:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4676:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"4685:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4672:3:33"},"nodeType":"YulFunctionCall","src":"4672:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"4697:2:33","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4668:3:33"},"nodeType":"YulFunctionCall","src":"4668:32:33"},"nodeType":"YulIf","src":"4665:119:33"},{"nodeType":"YulBlock","src":"4794:117:33","statements":[{"nodeType":"YulVariableDeclaration","src":"4809:15:33","value":{"kind":"number","nodeType":"YulLiteral","src":"4823:1:33","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4813:6:33","type":""}]},{"nodeType":"YulAssignment","src":"4838:63:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4873:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"4884:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4869:3:33"},"nodeType":"YulFunctionCall","src":"4869:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4893:7:33"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4848:20:33"},"nodeType":"YulFunctionCall","src":"4848:53:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4838:6:33"}]}]},{"nodeType":"YulBlock","src":"4921:118:33","statements":[{"nodeType":"YulVariableDeclaration","src":"4936:16:33","value":{"kind":"number","nodeType":"YulLiteral","src":"4950:2:33","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4940:6:33","type":""}]},{"nodeType":"YulAssignment","src":"4966:63:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5001:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"5012:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4997:3:33"},"nodeType":"YulFunctionCall","src":"4997:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5021:7:33"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4976:20:33"},"nodeType":"YulFunctionCall","src":"4976:53:33"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4966:6:33"}]}]},{"nodeType":"YulBlock","src":"5049:118:33","statements":[{"nodeType":"YulVariableDeclaration","src":"5064:16:33","value":{"kind":"number","nodeType":"YulLiteral","src":"5078:2:33","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5068:6:33","type":""}]},{"nodeType":"YulAssignment","src":"5094:63:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5129:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"5140:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5125:3:33"},"nodeType":"YulFunctionCall","src":"5125:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5149:7:33"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5104:20:33"},"nodeType":"YulFunctionCall","src":"5104:53:33"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5094:6:33"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4609:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4620:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4632:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4640:6:33","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4648:6:33","type":""}],"src":"4555:619:33"},{"body":{"nodeType":"YulBlock","src":"5225:32:33","statements":[{"nodeType":"YulAssignment","src":"5235:16:33","value":{"name":"value","nodeType":"YulIdentifier","src":"5246:5:33"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5235:7:33"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5207:5:33","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5217:7:33","type":""}],"src":"5180:77:33"},{"body":{"nodeType":"YulBlock","src":"5306:79:33","statements":[{"body":{"nodeType":"YulBlock","src":"5363:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5372:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5375:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5365:6:33"},"nodeType":"YulFunctionCall","src":"5365:12:33"},"nodeType":"YulExpressionStatement","src":"5365:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5329:5:33"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5354:5:33"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"5336:17:33"},"nodeType":"YulFunctionCall","src":"5336:24:33"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5326:2:33"},"nodeType":"YulFunctionCall","src":"5326:35:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5319:6:33"},"nodeType":"YulFunctionCall","src":"5319:43:33"},"nodeType":"YulIf","src":"5316:63:33"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5299:5:33","type":""}],"src":"5263:122:33"},{"body":{"nodeType":"YulBlock","src":"5443:87:33","statements":[{"nodeType":"YulAssignment","src":"5453:29:33","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5475:6:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5462:12:33"},"nodeType":"YulFunctionCall","src":"5462:20:33"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5453:5:33"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5518:5:33"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"5491:26:33"},"nodeType":"YulFunctionCall","src":"5491:33:33"},"nodeType":"YulExpressionStatement","src":"5491:33:33"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5421:6:33","type":""},{"name":"end","nodeType":"YulTypedName","src":"5429:3:33","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5437:5:33","type":""}],"src":"5391:139:33"},{"body":{"nodeType":"YulBlock","src":"5602:263:33","statements":[{"body":{"nodeType":"YulBlock","src":"5648:83:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5650:77:33"},"nodeType":"YulFunctionCall","src":"5650:79:33"},"nodeType":"YulExpressionStatement","src":"5650:79:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5623:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"5632:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5619:3:33"},"nodeType":"YulFunctionCall","src":"5619:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"5644:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5615:3:33"},"nodeType":"YulFunctionCall","src":"5615:32:33"},"nodeType":"YulIf","src":"5612:119:33"},{"nodeType":"YulBlock","src":"5741:117:33","statements":[{"nodeType":"YulVariableDeclaration","src":"5756:15:33","value":{"kind":"number","nodeType":"YulLiteral","src":"5770:1:33","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5760:6:33","type":""}]},{"nodeType":"YulAssignment","src":"5785:63:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5820:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"5831:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5816:3:33"},"nodeType":"YulFunctionCall","src":"5816:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5840:7:33"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"5795:20:33"},"nodeType":"YulFunctionCall","src":"5795:53:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5785:6:33"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5572:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5583:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5595:6:33","type":""}],"src":"5536:329:33"},{"body":{"nodeType":"YulBlock","src":"5936:53:33","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5953:3:33"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5976:5:33"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"5958:17:33"},"nodeType":"YulFunctionCall","src":"5958:24:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5946:6:33"},"nodeType":"YulFunctionCall","src":"5946:37:33"},"nodeType":"YulExpressionStatement","src":"5946:37:33"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5924:5:33","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5931:3:33","type":""}],"src":"5871:118:33"},{"body":{"nodeType":"YulBlock","src":"6093:124:33","statements":[{"nodeType":"YulAssignment","src":"6103:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6115:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"6126:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6111:3:33"},"nodeType":"YulFunctionCall","src":"6111:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6103:4:33"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6183:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6196:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"6207:1:33","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6192:3:33"},"nodeType":"YulFunctionCall","src":"6192:17:33"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"6139:43:33"},"nodeType":"YulFunctionCall","src":"6139:71:33"},"nodeType":"YulExpressionStatement","src":"6139:71:33"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6065:9:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6077:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6088:4:33","type":""}],"src":"5995:222:33"},{"body":{"nodeType":"YulBlock","src":"6306:391:33","statements":[{"body":{"nodeType":"YulBlock","src":"6352:83:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6354:77:33"},"nodeType":"YulFunctionCall","src":"6354:79:33"},"nodeType":"YulExpressionStatement","src":"6354:79:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6327:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"6336:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6323:3:33"},"nodeType":"YulFunctionCall","src":"6323:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"6348:2:33","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6319:3:33"},"nodeType":"YulFunctionCall","src":"6319:32:33"},"nodeType":"YulIf","src":"6316:119:33"},{"nodeType":"YulBlock","src":"6445:117:33","statements":[{"nodeType":"YulVariableDeclaration","src":"6460:15:33","value":{"kind":"number","nodeType":"YulLiteral","src":"6474:1:33","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6464:6:33","type":""}]},{"nodeType":"YulAssignment","src":"6489:63:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6524:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"6535:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6520:3:33"},"nodeType":"YulFunctionCall","src":"6520:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6544:7:33"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"6499:20:33"},"nodeType":"YulFunctionCall","src":"6499:53:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6489:6:33"}]}]},{"nodeType":"YulBlock","src":"6572:118:33","statements":[{"nodeType":"YulVariableDeclaration","src":"6587:16:33","value":{"kind":"number","nodeType":"YulLiteral","src":"6601:2:33","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6591:6:33","type":""}]},{"nodeType":"YulAssignment","src":"6617:63:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6652:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"6663:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6648:3:33"},"nodeType":"YulFunctionCall","src":"6648:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6672:7:33"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6627:20:33"},"nodeType":"YulFunctionCall","src":"6627:53:33"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6617:6:33"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6268:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6279:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6291:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6299:6:33","type":""}],"src":"6223:474:33"},{"body":{"nodeType":"YulBlock","src":"6746:43:33","statements":[{"nodeType":"YulAssignment","src":"6756:27:33","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6771:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"6778:4:33","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6767:3:33"},"nodeType":"YulFunctionCall","src":"6767:16:33"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6756:7:33"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6728:5:33","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6738:7:33","type":""}],"src":"6703:86:33"},{"body":{"nodeType":"YulBlock","src":"6856:51:33","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6873:3:33"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6894:5:33"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"6878:15:33"},"nodeType":"YulFunctionCall","src":"6878:22:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6866:6:33"},"nodeType":"YulFunctionCall","src":"6866:35:33"},"nodeType":"YulExpressionStatement","src":"6866:35:33"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6844:5:33","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6851:3:33","type":""}],"src":"6795:112:33"},{"body":{"nodeType":"YulBlock","src":"7007:120:33","statements":[{"nodeType":"YulAssignment","src":"7017:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7029:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"7040:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7025:3:33"},"nodeType":"YulFunctionCall","src":"7025:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7017:4:33"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7093:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7106:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"7117:1:33","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7102:3:33"},"nodeType":"YulFunctionCall","src":"7102:17:33"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"7053:39:33"},"nodeType":"YulFunctionCall","src":"7053:67:33"},"nodeType":"YulExpressionStatement","src":"7053:67:33"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6979:9:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6991:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7002:4:33","type":""}],"src":"6913:214:33"},{"body":{"nodeType":"YulBlock","src":"7199:263:33","statements":[{"body":{"nodeType":"YulBlock","src":"7245:83:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7247:77:33"},"nodeType":"YulFunctionCall","src":"7247:79:33"},"nodeType":"YulExpressionStatement","src":"7247:79:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7220:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"7229:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7216:3:33"},"nodeType":"YulFunctionCall","src":"7216:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"7241:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7212:3:33"},"nodeType":"YulFunctionCall","src":"7212:32:33"},"nodeType":"YulIf","src":"7209:119:33"},{"nodeType":"YulBlock","src":"7338:117:33","statements":[{"nodeType":"YulVariableDeclaration","src":"7353:15:33","value":{"kind":"number","nodeType":"YulLiteral","src":"7367:1:33","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7357:6:33","type":""}]},{"nodeType":"YulAssignment","src":"7382:63:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7417:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"7428:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7413:3:33"},"nodeType":"YulFunctionCall","src":"7413:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7437:7:33"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7392:20:33"},"nodeType":"YulFunctionCall","src":"7392:53:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7382:6:33"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7169:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7180:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7192:6:33","type":""}],"src":"7133:329:33"},{"body":{"nodeType":"YulBlock","src":"7512:105:33","statements":[{"nodeType":"YulAssignment","src":"7522:89:33","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7537:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"7544:66:33","type":"","value":"0xff00000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7533:3:33"},"nodeType":"YulFunctionCall","src":"7533:78:33"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7522:7:33"}]}]},"name":"cleanup_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7494:5:33","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7504:7:33","type":""}],"src":"7468:149:33"},{"body":{"nodeType":"YulBlock","src":"7686:52:33","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7703:3:33"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7725:5:33"}],"functionName":{"name":"cleanup_t_bytes1","nodeType":"YulIdentifier","src":"7708:16:33"},"nodeType":"YulFunctionCall","src":"7708:23:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7696:6:33"},"nodeType":"YulFunctionCall","src":"7696:36:33"},"nodeType":"YulExpressionStatement","src":"7696:36:33"}]},"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7674:5:33","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7681:3:33","type":""}],"src":"7623:115:33"},{"body":{"nodeType":"YulBlock","src":"7809:53:33","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7826:3:33"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7849:5:33"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"7831:17:33"},"nodeType":"YulFunctionCall","src":"7831:24:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7819:6:33"},"nodeType":"YulFunctionCall","src":"7819:37:33"},"nodeType":"YulExpressionStatement","src":"7819:37:33"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7797:5:33","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7804:3:33","type":""}],"src":"7744:118:33"},{"body":{"nodeType":"YulBlock","src":"7942:40:33","statements":[{"nodeType":"YulAssignment","src":"7953:22:33","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7969:5:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7963:5:33"},"nodeType":"YulFunctionCall","src":"7963:12:33"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7953:6:33"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7925:5:33","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"7935:6:33","type":""}],"src":"7868:114:33"},{"body":{"nodeType":"YulBlock","src":"8099:73:33","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8116:3:33"},{"name":"length","nodeType":"YulIdentifier","src":"8121:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8109:6:33"},"nodeType":"YulFunctionCall","src":"8109:19:33"},"nodeType":"YulExpressionStatement","src":"8109:19:33"},{"nodeType":"YulAssignment","src":"8137:29:33","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8156:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"8161:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8152:3:33"},"nodeType":"YulFunctionCall","src":"8152:14:33"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"8137:11:33"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8071:3:33","type":""},{"name":"length","nodeType":"YulTypedName","src":"8076:6:33","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"8087:11:33","type":""}],"src":"7988:184:33"},{"body":{"nodeType":"YulBlock","src":"8250:60:33","statements":[{"nodeType":"YulAssignment","src":"8260:11:33","value":{"name":"ptr","nodeType":"YulIdentifier","src":"8268:3:33"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8260:4:33"}]},{"nodeType":"YulAssignment","src":"8281:22:33","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8293:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"8298:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8289:3:33"},"nodeType":"YulFunctionCall","src":"8289:14:33"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8281:4:33"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"8237:3:33","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"8245:4:33","type":""}],"src":"8178:132:33"},{"body":{"nodeType":"YulBlock","src":"8371:53:33","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8388:3:33"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8411:5:33"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8393:17:33"},"nodeType":"YulFunctionCall","src":"8393:24:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8381:6:33"},"nodeType":"YulFunctionCall","src":"8381:37:33"},"nodeType":"YulExpressionStatement","src":"8381:37:33"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8359:5:33","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8366:3:33","type":""}],"src":"8316:108:33"},{"body":{"nodeType":"YulBlock","src":"8510:99:33","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8554:6:33"},{"name":"pos","nodeType":"YulIdentifier","src":"8562:3:33"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"8520:33:33"},"nodeType":"YulFunctionCall","src":"8520:46:33"},"nodeType":"YulExpressionStatement","src":"8520:46:33"},{"nodeType":"YulAssignment","src":"8575:28:33","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8593:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"8598:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8589:3:33"},"nodeType":"YulFunctionCall","src":"8589:14:33"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"8575:10:33"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"8483:6:33","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8491:3:33","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"8499:10:33","type":""}],"src":"8430:179:33"},{"body":{"nodeType":"YulBlock","src":"8690:38:33","statements":[{"nodeType":"YulAssignment","src":"8700:22:33","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8712:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"8717:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8708:3:33"},"nodeType":"YulFunctionCall","src":"8708:14:33"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"8700:4:33"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"8677:3:33","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"8685:4:33","type":""}],"src":"8615:113:33"},{"body":{"nodeType":"YulBlock","src":"8888:608:33","statements":[{"nodeType":"YulVariableDeclaration","src":"8898:68:33","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8960:5:33"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"8912:47:33"},"nodeType":"YulFunctionCall","src":"8912:54:33"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8902:6:33","type":""}]},{"nodeType":"YulAssignment","src":"8975:93:33","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9056:3:33"},{"name":"length","nodeType":"YulIdentifier","src":"9061:6:33"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8982:73:33"},"nodeType":"YulFunctionCall","src":"8982:86:33"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8975:3:33"}]},{"nodeType":"YulVariableDeclaration","src":"9077:71:33","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9142:5:33"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"9092:49:33"},"nodeType":"YulFunctionCall","src":"9092:56:33"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"9081:7:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9157:21:33","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"9171:7:33"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"9161:6:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"9247:224:33","statements":[{"nodeType":"YulVariableDeclaration","src":"9261:34:33","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"9288:6:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9282:5:33"},"nodeType":"YulFunctionCall","src":"9282:13:33"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"9265:13:33","type":""}]},{"nodeType":"YulAssignment","src":"9308:70:33","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"9359:13:33"},{"name":"pos","nodeType":"YulIdentifier","src":"9374:3:33"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"9315:43:33"},"nodeType":"YulFunctionCall","src":"9315:63:33"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9308:3:33"}]},{"nodeType":"YulAssignment","src":"9391:70:33","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"9454:6:33"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"9401:52:33"},"nodeType":"YulFunctionCall","src":"9401:60:33"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"9391:6:33"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9209:1:33"},{"name":"length","nodeType":"YulIdentifier","src":"9212:6:33"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9206:2:33"},"nodeType":"YulFunctionCall","src":"9206:13:33"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9220:18:33","statements":[{"nodeType":"YulAssignment","src":"9222:14:33","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9231:1:33"},{"kind":"number","nodeType":"YulLiteral","src":"9234:1:33","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9227:3:33"},"nodeType":"YulFunctionCall","src":"9227:9:33"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"9222:1:33"}]}]},"pre":{"nodeType":"YulBlock","src":"9191:14:33","statements":[{"nodeType":"YulVariableDeclaration","src":"9193:10:33","value":{"kind":"number","nodeType":"YulLiteral","src":"9202:1:33","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"9197:1:33","type":""}]}]},"src":"9187:284:33"},{"nodeType":"YulAssignment","src":"9480:10:33","value":{"name":"pos","nodeType":"YulIdentifier","src":"9487:3:33"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9480:3:33"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8867:5:33","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8874:3:33","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8883:3:33","type":""}],"src":"8764:732:33"},{"body":{"nodeType":"YulBlock","src":"9856:861:33","statements":[{"nodeType":"YulAssignment","src":"9866:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9878:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"9889:3:33","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9874:3:33"},"nodeType":"YulFunctionCall","src":"9874:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9866:4:33"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9945:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9958:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"9969:1:33","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9954:3:33"},"nodeType":"YulFunctionCall","src":"9954:17:33"}],"functionName":{"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nodeType":"YulIdentifier","src":"9903:41:33"},"nodeType":"YulFunctionCall","src":"9903:69:33"},"nodeType":"YulExpressionStatement","src":"9903:69:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9993:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"10004:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9989:3:33"},"nodeType":"YulFunctionCall","src":"9989:18:33"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10013:4:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"10019:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10009:3:33"},"nodeType":"YulFunctionCall","src":"10009:20:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9982:6:33"},"nodeType":"YulFunctionCall","src":"9982:48:33"},"nodeType":"YulExpressionStatement","src":"9982:48:33"},{"nodeType":"YulAssignment","src":"10039:86:33","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10111:6:33"},{"name":"tail","nodeType":"YulIdentifier","src":"10120:4:33"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10047:63:33"},"nodeType":"YulFunctionCall","src":"10047:78:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10039:4:33"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10146:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"10157:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10142:3:33"},"nodeType":"YulFunctionCall","src":"10142:18:33"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10166:4:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"10172:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10162:3:33"},"nodeType":"YulFunctionCall","src":"10162:20:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10135:6:33"},"nodeType":"YulFunctionCall","src":"10135:48:33"},"nodeType":"YulExpressionStatement","src":"10135:48:33"},{"nodeType":"YulAssignment","src":"10192:86:33","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"10264:6:33"},{"name":"tail","nodeType":"YulIdentifier","src":"10273:4:33"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10200:63:33"},"nodeType":"YulFunctionCall","src":"10200:78:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10192:4:33"}]},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"10332:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10345:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"10356:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10341:3:33"},"nodeType":"YulFunctionCall","src":"10341:18:33"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10288:43:33"},"nodeType":"YulFunctionCall","src":"10288:72:33"},"nodeType":"YulExpressionStatement","src":"10288:72:33"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"10414:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10427:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"10438:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10423:3:33"},"nodeType":"YulFunctionCall","src":"10423:19:33"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"10370:43:33"},"nodeType":"YulFunctionCall","src":"10370:73:33"},"nodeType":"YulExpressionStatement","src":"10370:73:33"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"10497:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10510:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"10521:3:33","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10506:3:33"},"nodeType":"YulFunctionCall","src":"10506:19:33"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"10453:43:33"},"nodeType":"YulFunctionCall","src":"10453:73:33"},"nodeType":"YulExpressionStatement","src":"10453:73:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10547:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"10558:3:33","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10543:3:33"},"nodeType":"YulFunctionCall","src":"10543:19:33"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10568:4:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"10574:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10564:3:33"},"nodeType":"YulFunctionCall","src":"10564:20:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10536:6:33"},"nodeType":"YulFunctionCall","src":"10536:49:33"},"nodeType":"YulExpressionStatement","src":"10536:49:33"},{"nodeType":"YulAssignment","src":"10594:116:33","value":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"10696:6:33"},{"name":"tail","nodeType":"YulIdentifier","src":"10705:4:33"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10602:93:33"},"nodeType":"YulFunctionCall","src":"10602:108:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10594:4:33"}]}]},"name":"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9780:9:33","type":""},{"name":"value6","nodeType":"YulTypedName","src":"9792:6:33","type":""},{"name":"value5","nodeType":"YulTypedName","src":"9800:6:33","type":""},{"name":"value4","nodeType":"YulTypedName","src":"9808:6:33","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9816:6:33","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9824:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9832:6:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9840:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9851:4:33","type":""}],"src":"9502:1215:33"},{"body":{"nodeType":"YulBlock","src":"10764:77:33","statements":[{"body":{"nodeType":"YulBlock","src":"10819:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10828:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10831:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10821:6:33"},"nodeType":"YulFunctionCall","src":"10821:12:33"},"nodeType":"YulExpressionStatement","src":"10821:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10787:5:33"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10810:5:33"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"10794:15:33"},"nodeType":"YulFunctionCall","src":"10794:22:33"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10784:2:33"},"nodeType":"YulFunctionCall","src":"10784:33:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10777:6:33"},"nodeType":"YulFunctionCall","src":"10777:41:33"},"nodeType":"YulIf","src":"10774:61:33"}]},"name":"validator_revert_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10757:5:33","type":""}],"src":"10723:118:33"},{"body":{"nodeType":"YulBlock","src":"10897:85:33","statements":[{"nodeType":"YulAssignment","src":"10907:29:33","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10929:6:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10916:12:33"},"nodeType":"YulFunctionCall","src":"10916:20:33"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10907:5:33"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10970:5:33"}],"functionName":{"name":"validator_revert_t_uint8","nodeType":"YulIdentifier","src":"10945:24:33"},"nodeType":"YulFunctionCall","src":"10945:31:33"},"nodeType":"YulExpressionStatement","src":"10945:31:33"}]},"name":"abi_decode_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"10875:6:33","type":""},{"name":"end","nodeType":"YulTypedName","src":"10883:3:33","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"10891:5:33","type":""}],"src":"10847:135:33"},{"body":{"nodeType":"YulBlock","src":"11154:1033:33","statements":[{"body":{"nodeType":"YulBlock","src":"11201:83:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11203:77:33"},"nodeType":"YulFunctionCall","src":"11203:79:33"},"nodeType":"YulExpressionStatement","src":"11203:79:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11175:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"11184:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11171:3:33"},"nodeType":"YulFunctionCall","src":"11171:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"11196:3:33","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11167:3:33"},"nodeType":"YulFunctionCall","src":"11167:33:33"},"nodeType":"YulIf","src":"11164:120:33"},{"nodeType":"YulBlock","src":"11294:117:33","statements":[{"nodeType":"YulVariableDeclaration","src":"11309:15:33","value":{"kind":"number","nodeType":"YulLiteral","src":"11323:1:33","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11313:6:33","type":""}]},{"nodeType":"YulAssignment","src":"11338:63:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11373:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"11384:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11369:3:33"},"nodeType":"YulFunctionCall","src":"11369:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11393:7:33"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11348:20:33"},"nodeType":"YulFunctionCall","src":"11348:53:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11338:6:33"}]}]},{"nodeType":"YulBlock","src":"11421:118:33","statements":[{"nodeType":"YulVariableDeclaration","src":"11436:16:33","value":{"kind":"number","nodeType":"YulLiteral","src":"11450:2:33","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11440:6:33","type":""}]},{"nodeType":"YulAssignment","src":"11466:63:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11501:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"11512:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11497:3:33"},"nodeType":"YulFunctionCall","src":"11497:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11521:7:33"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11476:20:33"},"nodeType":"YulFunctionCall","src":"11476:53:33"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11466:6:33"}]}]},{"nodeType":"YulBlock","src":"11549:118:33","statements":[{"nodeType":"YulVariableDeclaration","src":"11564:16:33","value":{"kind":"number","nodeType":"YulLiteral","src":"11578:2:33","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11568:6:33","type":""}]},{"nodeType":"YulAssignment","src":"11594:63:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11629:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"11640:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11625:3:33"},"nodeType":"YulFunctionCall","src":"11625:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11649:7:33"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"11604:20:33"},"nodeType":"YulFunctionCall","src":"11604:53:33"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"11594:6:33"}]}]},{"nodeType":"YulBlock","src":"11677:118:33","statements":[{"nodeType":"YulVariableDeclaration","src":"11692:16:33","value":{"kind":"number","nodeType":"YulLiteral","src":"11706:2:33","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11696:6:33","type":""}]},{"nodeType":"YulAssignment","src":"11722:63:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11757:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"11768:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11753:3:33"},"nodeType":"YulFunctionCall","src":"11753:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11777:7:33"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"11732:20:33"},"nodeType":"YulFunctionCall","src":"11732:53:33"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"11722:6:33"}]}]},{"nodeType":"YulBlock","src":"11805:117:33","statements":[{"nodeType":"YulVariableDeclaration","src":"11820:17:33","value":{"kind":"number","nodeType":"YulLiteral","src":"11834:3:33","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11824:6:33","type":""}]},{"nodeType":"YulAssignment","src":"11851:61:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11884:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"11895:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11880:3:33"},"nodeType":"YulFunctionCall","src":"11880:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11904:7:33"}],"functionName":{"name":"abi_decode_t_uint8","nodeType":"YulIdentifier","src":"11861:18:33"},"nodeType":"YulFunctionCall","src":"11861:51:33"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"11851:6:33"}]}]},{"nodeType":"YulBlock","src":"11932:119:33","statements":[{"nodeType":"YulVariableDeclaration","src":"11947:17:33","value":{"kind":"number","nodeType":"YulLiteral","src":"11961:3:33","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11951:6:33","type":""}]},{"nodeType":"YulAssignment","src":"11978:63:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12013:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"12024:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12009:3:33"},"nodeType":"YulFunctionCall","src":"12009:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12033:7:33"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"11988:20:33"},"nodeType":"YulFunctionCall","src":"11988:53:33"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"11978:6:33"}]}]},{"nodeType":"YulBlock","src":"12061:119:33","statements":[{"nodeType":"YulVariableDeclaration","src":"12076:17:33","value":{"kind":"number","nodeType":"YulLiteral","src":"12090:3:33","type":"","value":"192"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12080:6:33","type":""}]},{"nodeType":"YulAssignment","src":"12107:63:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12142:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"12153:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12138:3:33"},"nodeType":"YulFunctionCall","src":"12138:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12162:7:33"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"12117:20:33"},"nodeType":"YulFunctionCall","src":"12117:53:33"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"12107:6:33"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11076:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11087:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11099:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11107:6:33","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11115:6:33","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11123:6:33","type":""},{"name":"value4","nodeType":"YulTypedName","src":"11131:6:33","type":""},{"name":"value5","nodeType":"YulTypedName","src":"11139:6:33","type":""},{"name":"value6","nodeType":"YulTypedName","src":"11147:6:33","type":""}],"src":"10988:1199:33"},{"body":{"nodeType":"YulBlock","src":"12276:391:33","statements":[{"body":{"nodeType":"YulBlock","src":"12322:83:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12324:77:33"},"nodeType":"YulFunctionCall","src":"12324:79:33"},"nodeType":"YulExpressionStatement","src":"12324:79:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12297:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"12306:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12293:3:33"},"nodeType":"YulFunctionCall","src":"12293:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"12318:2:33","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12289:3:33"},"nodeType":"YulFunctionCall","src":"12289:32:33"},"nodeType":"YulIf","src":"12286:119:33"},{"nodeType":"YulBlock","src":"12415:117:33","statements":[{"nodeType":"YulVariableDeclaration","src":"12430:15:33","value":{"kind":"number","nodeType":"YulLiteral","src":"12444:1:33","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12434:6:33","type":""}]},{"nodeType":"YulAssignment","src":"12459:63:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12494:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"12505:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12490:3:33"},"nodeType":"YulFunctionCall","src":"12490:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12514:7:33"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"12469:20:33"},"nodeType":"YulFunctionCall","src":"12469:53:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12459:6:33"}]}]},{"nodeType":"YulBlock","src":"12542:118:33","statements":[{"nodeType":"YulVariableDeclaration","src":"12557:16:33","value":{"kind":"number","nodeType":"YulLiteral","src":"12571:2:33","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12561:6:33","type":""}]},{"nodeType":"YulAssignment","src":"12587:63:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12622:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"12633:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12618:3:33"},"nodeType":"YulFunctionCall","src":"12618:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12642:7:33"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"12597:20:33"},"nodeType":"YulFunctionCall","src":"12597:53:33"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12587:6:33"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12238:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12249:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12261:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12269:6:33","type":""}],"src":"12193:474:33"},{"body":{"nodeType":"YulBlock","src":"12701:152:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12718:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12721:77:33","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12711:6:33"},"nodeType":"YulFunctionCall","src":"12711:88:33"},"nodeType":"YulExpressionStatement","src":"12711:88:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12815:1:33","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12818:4:33","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12808:6:33"},"nodeType":"YulFunctionCall","src":"12808:15:33"},"nodeType":"YulExpressionStatement","src":"12808:15:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12839:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12842:4:33","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12832:6:33"},"nodeType":"YulFunctionCall","src":"12832:15:33"},"nodeType":"YulExpressionStatement","src":"12832:15:33"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"12673:180:33"},{"body":{"nodeType":"YulBlock","src":"12910:269:33","statements":[{"nodeType":"YulAssignment","src":"12920:22:33","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"12934:4:33"},{"kind":"number","nodeType":"YulLiteral","src":"12940:1:33","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"12930:3:33"},"nodeType":"YulFunctionCall","src":"12930:12:33"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"12920:6:33"}]},{"nodeType":"YulVariableDeclaration","src":"12951:38:33","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"12981:4:33"},{"kind":"number","nodeType":"YulLiteral","src":"12987:1:33","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12977:3:33"},"nodeType":"YulFunctionCall","src":"12977:12:33"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"12955:18:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"13028:51:33","statements":[{"nodeType":"YulAssignment","src":"13042:27:33","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13056:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"13064:4:33","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13052:3:33"},"nodeType":"YulFunctionCall","src":"13052:17:33"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"13042:6:33"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"13008:18:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13001:6:33"},"nodeType":"YulFunctionCall","src":"13001:26:33"},"nodeType":"YulIf","src":"12998:81:33"},{"body":{"nodeType":"YulBlock","src":"13131:42:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"13145:16:33"},"nodeType":"YulFunctionCall","src":"13145:18:33"},"nodeType":"YulExpressionStatement","src":"13145:18:33"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"13095:18:33"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13118:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"13126:2:33","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13115:2:33"},"nodeType":"YulFunctionCall","src":"13115:14:33"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"13092:2:33"},"nodeType":"YulFunctionCall","src":"13092:38:33"},"nodeType":"YulIf","src":"13089:84:33"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"12894:4:33","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"12903:6:33","type":""}],"src":"12859:320:33"},{"body":{"nodeType":"YulBlock","src":"13213:152:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13230:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13233:77:33","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13223:6:33"},"nodeType":"YulFunctionCall","src":"13223:88:33"},"nodeType":"YulExpressionStatement","src":"13223:88:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13327:1:33","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13330:4:33","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13320:6:33"},"nodeType":"YulFunctionCall","src":"13320:15:33"},"nodeType":"YulExpressionStatement","src":"13320:15:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13351:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13354:4:33","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13344:6:33"},"nodeType":"YulFunctionCall","src":"13344:15:33"},"nodeType":"YulExpressionStatement","src":"13344:15:33"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"13185:180:33"},{"body":{"nodeType":"YulBlock","src":"13415:147:33","statements":[{"nodeType":"YulAssignment","src":"13425:25:33","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"13448:1:33"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"13430:17:33"},"nodeType":"YulFunctionCall","src":"13430:20:33"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"13425:1:33"}]},{"nodeType":"YulAssignment","src":"13459:25:33","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"13482:1:33"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"13464:17:33"},"nodeType":"YulFunctionCall","src":"13464:20:33"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"13459:1:33"}]},{"nodeType":"YulAssignment","src":"13493:16:33","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"13504:1:33"},{"name":"y","nodeType":"YulIdentifier","src":"13507:1:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13500:3:33"},"nodeType":"YulFunctionCall","src":"13500:9:33"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"13493:3:33"}]},{"body":{"nodeType":"YulBlock","src":"13533:22:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"13535:16:33"},"nodeType":"YulFunctionCall","src":"13535:18:33"},"nodeType":"YulExpressionStatement","src":"13535:18:33"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"13525:1:33"},{"name":"sum","nodeType":"YulIdentifier","src":"13528:3:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13522:2:33"},"nodeType":"YulFunctionCall","src":"13522:10:33"},"nodeType":"YulIf","src":"13519:36:33"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"13402:1:33","type":""},{"name":"y","nodeType":"YulTypedName","src":"13405:1:33","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"13411:3:33","type":""}],"src":"13371:191:33"},{"body":{"nodeType":"YulBlock","src":"13674:74:33","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13696:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"13704:1:33","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13692:3:33"},"nodeType":"YulFunctionCall","src":"13692:14:33"},{"hexValue":"42617264546f6b656e3a206d617820737570706c79206578636565646564","kind":"string","nodeType":"YulLiteral","src":"13708:32:33","type":"","value":"BardToken: max supply exceeded"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13685:6:33"},"nodeType":"YulFunctionCall","src":"13685:56:33"},"nodeType":"YulExpressionStatement","src":"13685:56:33"}]},"name":"store_literal_in_memory_e4a161b26eb26ab0156b1351b0fe22ea7dfeeb342a09f3839aad0304de117d97","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13666:6:33","type":""}],"src":"13568:180:33"},{"body":{"nodeType":"YulBlock","src":"13900:220:33","statements":[{"nodeType":"YulAssignment","src":"13910:74:33","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13976:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"13981:2:33","type":"","value":"30"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13917:58:33"},"nodeType":"YulFunctionCall","src":"13917:67:33"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13910:3:33"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14082:3:33"}],"functionName":{"name":"store_literal_in_memory_e4a161b26eb26ab0156b1351b0fe22ea7dfeeb342a09f3839aad0304de117d97","nodeType":"YulIdentifier","src":"13993:88:33"},"nodeType":"YulFunctionCall","src":"13993:93:33"},"nodeType":"YulExpressionStatement","src":"13993:93:33"},{"nodeType":"YulAssignment","src":"14095:19:33","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14106:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"14111:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14102:3:33"},"nodeType":"YulFunctionCall","src":"14102:12:33"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14095:3:33"}]}]},"name":"abi_encode_t_stringliteral_e4a161b26eb26ab0156b1351b0fe22ea7dfeeb342a09f3839aad0304de117d97_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13888:3:33","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13896:3:33","type":""}],"src":"13754:366:33"},{"body":{"nodeType":"YulBlock","src":"14297:248:33","statements":[{"nodeType":"YulAssignment","src":"14307:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14319:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"14330:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14315:3:33"},"nodeType":"YulFunctionCall","src":"14315:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14307:4:33"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14354:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"14365:1:33","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14350:3:33"},"nodeType":"YulFunctionCall","src":"14350:17:33"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14373:4:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"14379:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14369:3:33"},"nodeType":"YulFunctionCall","src":"14369:20:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14343:6:33"},"nodeType":"YulFunctionCall","src":"14343:47:33"},"nodeType":"YulExpressionStatement","src":"14343:47:33"},{"nodeType":"YulAssignment","src":"14399:139:33","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14533:4:33"}],"functionName":{"name":"abi_encode_t_stringliteral_e4a161b26eb26ab0156b1351b0fe22ea7dfeeb342a09f3839aad0304de117d97_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14407:124:33"},"nodeType":"YulFunctionCall","src":"14407:131:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14399:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_e4a161b26eb26ab0156b1351b0fe22ea7dfeeb342a09f3839aad0304de117d97__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14277:9:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14292:4:33","type":""}],"src":"14126:419:33"},{"body":{"nodeType":"YulBlock","src":"14579:152:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14596:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14599:77:33","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14589:6:33"},"nodeType":"YulFunctionCall","src":"14589:88:33"},"nodeType":"YulExpressionStatement","src":"14589:88:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14693:1:33","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14696:4:33","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14686:6:33"},"nodeType":"YulFunctionCall","src":"14686:15:33"},"nodeType":"YulExpressionStatement","src":"14686:15:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14717:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14720:4:33","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14710:6:33"},"nodeType":"YulFunctionCall","src":"14710:15:33"},"nodeType":"YulExpressionStatement","src":"14710:15:33"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14551:180:33"},{"body":{"nodeType":"YulBlock","src":"14975:537:33","statements":[{"nodeType":"YulAssignment","src":"14985:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14997:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"15008:3:33","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14993:3:33"},"nodeType":"YulFunctionCall","src":"14993:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14985:4:33"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15066:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15079:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"15090:1:33","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15075:3:33"},"nodeType":"YulFunctionCall","src":"15075:17:33"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"15022:43:33"},"nodeType":"YulFunctionCall","src":"15022:71:33"},"nodeType":"YulExpressionStatement","src":"15022:71:33"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15147:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15160:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"15171:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15156:3:33"},"nodeType":"YulFunctionCall","src":"15156:18:33"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"15103:43:33"},"nodeType":"YulFunctionCall","src":"15103:72:33"},"nodeType":"YulExpressionStatement","src":"15103:72:33"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"15229:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15242:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"15253:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15238:3:33"},"nodeType":"YulFunctionCall","src":"15238:18:33"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"15185:43:33"},"nodeType":"YulFunctionCall","src":"15185:72:33"},"nodeType":"YulExpressionStatement","src":"15185:72:33"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"15311:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15324:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"15335:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15320:3:33"},"nodeType":"YulFunctionCall","src":"15320:18:33"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"15267:43:33"},"nodeType":"YulFunctionCall","src":"15267:72:33"},"nodeType":"YulExpressionStatement","src":"15267:72:33"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"15393:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15406:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"15417:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15402:3:33"},"nodeType":"YulFunctionCall","src":"15402:19:33"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"15349:43:33"},"nodeType":"YulFunctionCall","src":"15349:73:33"},"nodeType":"YulExpressionStatement","src":"15349:73:33"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"15476:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15489:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"15500:3:33","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15485:3:33"},"nodeType":"YulFunctionCall","src":"15485:19:33"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"15432:43:33"},"nodeType":"YulFunctionCall","src":"15432:73:33"},"nodeType":"YulExpressionStatement","src":"15432:73:33"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14907:9:33","type":""},{"name":"value5","nodeType":"YulTypedName","src":"14919:6:33","type":""},{"name":"value4","nodeType":"YulTypedName","src":"14927:6:33","type":""},{"name":"value3","nodeType":"YulTypedName","src":"14935:6:33","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14943:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14951:6:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14959:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14970:4:33","type":""}],"src":"14737:775:33"},{"body":{"nodeType":"YulBlock","src":"15644:206:33","statements":[{"nodeType":"YulAssignment","src":"15654:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15666:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"15677:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15662:3:33"},"nodeType":"YulFunctionCall","src":"15662:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15654:4:33"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15734:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15747:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"15758:1:33","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15743:3:33"},"nodeType":"YulFunctionCall","src":"15743:17:33"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"15690:43:33"},"nodeType":"YulFunctionCall","src":"15690:71:33"},"nodeType":"YulExpressionStatement","src":"15690:71:33"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15815:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15828:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"15839:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15824:3:33"},"nodeType":"YulFunctionCall","src":"15824:18:33"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"15771:43:33"},"nodeType":"YulFunctionCall","src":"15771:72:33"},"nodeType":"YulExpressionStatement","src":"15771:72:33"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15608:9:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15620:6:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15628:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15639:4:33","type":""}],"src":"15518:332:33"},{"body":{"nodeType":"YulBlock","src":"16010:288:33","statements":[{"nodeType":"YulAssignment","src":"16020:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16032:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"16043:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16028:3:33"},"nodeType":"YulFunctionCall","src":"16028:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16020:4:33"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16100:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16113:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"16124:1:33","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16109:3:33"},"nodeType":"YulFunctionCall","src":"16109:17:33"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"16056:43:33"},"nodeType":"YulFunctionCall","src":"16056:71:33"},"nodeType":"YulExpressionStatement","src":"16056:71:33"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16181:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16194:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"16205:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16190:3:33"},"nodeType":"YulFunctionCall","src":"16190:18:33"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"16137:43:33"},"nodeType":"YulFunctionCall","src":"16137:72:33"},"nodeType":"YulExpressionStatement","src":"16137:72:33"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"16263:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16276:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"16287:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16272:3:33"},"nodeType":"YulFunctionCall","src":"16272:18:33"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"16219:43:33"},"nodeType":"YulFunctionCall","src":"16219:72:33"},"nodeType":"YulExpressionStatement","src":"16219:72:33"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15966:9:33","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15978:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15986:6:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15994:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16005:4:33","type":""}],"src":"15856:442:33"},{"body":{"nodeType":"YulBlock","src":"16402:124:33","statements":[{"nodeType":"YulAssignment","src":"16412:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16424:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"16435:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16420:3:33"},"nodeType":"YulFunctionCall","src":"16420:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16412:4:33"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16492:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16505:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"16516:1:33","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16501:3:33"},"nodeType":"YulFunctionCall","src":"16501:17:33"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"16448:43:33"},"nodeType":"YulFunctionCall","src":"16448:71:33"},"nodeType":"YulExpressionStatement","src":"16448:71:33"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16374:9:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16386:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16397:4:33","type":""}],"src":"16304:222:33"},{"body":{"nodeType":"YulBlock","src":"16658:206:33","statements":[{"nodeType":"YulAssignment","src":"16668:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16680:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"16691:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16676:3:33"},"nodeType":"YulFunctionCall","src":"16676:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16668:4:33"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16748:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16761:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"16772:1:33","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16757:3:33"},"nodeType":"YulFunctionCall","src":"16757:17:33"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"16704:43:33"},"nodeType":"YulFunctionCall","src":"16704:71:33"},"nodeType":"YulExpressionStatement","src":"16704:71:33"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16829:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16842:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"16853:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16838:3:33"},"nodeType":"YulFunctionCall","src":"16838:18:33"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"16785:43:33"},"nodeType":"YulFunctionCall","src":"16785:72:33"},"nodeType":"YulExpressionStatement","src":"16785:72:33"}]},"name":"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16622:9:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16634:6:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16642:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16653:4:33","type":""}],"src":"16532:332:33"},{"body":{"nodeType":"YulBlock","src":"17080:454:33","statements":[{"nodeType":"YulAssignment","src":"17090:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17102:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"17113:3:33","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17098:3:33"},"nodeType":"YulFunctionCall","src":"17098:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17090:4:33"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17171:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17184:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"17195:1:33","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17180:3:33"},"nodeType":"YulFunctionCall","src":"17180:17:33"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"17127:43:33"},"nodeType":"YulFunctionCall","src":"17127:71:33"},"nodeType":"YulExpressionStatement","src":"17127:71:33"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17252:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17265:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"17276:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17261:3:33"},"nodeType":"YulFunctionCall","src":"17261:18:33"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"17208:43:33"},"nodeType":"YulFunctionCall","src":"17208:72:33"},"nodeType":"YulExpressionStatement","src":"17208:72:33"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"17334:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17347:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"17358:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17343:3:33"},"nodeType":"YulFunctionCall","src":"17343:18:33"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"17290:43:33"},"nodeType":"YulFunctionCall","src":"17290:72:33"},"nodeType":"YulExpressionStatement","src":"17290:72:33"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"17416:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17429:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"17440:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17425:3:33"},"nodeType":"YulFunctionCall","src":"17425:18:33"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"17372:43:33"},"nodeType":"YulFunctionCall","src":"17372:72:33"},"nodeType":"YulExpressionStatement","src":"17372:72:33"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"17498:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17511:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"17522:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17507:3:33"},"nodeType":"YulFunctionCall","src":"17507:19:33"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"17454:43:33"},"nodeType":"YulFunctionCall","src":"17454:73:33"},"nodeType":"YulExpressionStatement","src":"17454:73:33"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17020:9:33","type":""},{"name":"value4","nodeType":"YulTypedName","src":"17032:6:33","type":""},{"name":"value3","nodeType":"YulTypedName","src":"17040:6:33","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17048:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17056:6:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17064:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17075:4:33","type":""}],"src":"16870:664:33"},{"body":{"nodeType":"YulBlock","src":"17718:367:33","statements":[{"nodeType":"YulAssignment","src":"17728:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17740:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"17751:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17736:3:33"},"nodeType":"YulFunctionCall","src":"17736:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17728:4:33"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17809:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17822:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"17833:1:33","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17818:3:33"},"nodeType":"YulFunctionCall","src":"17818:17:33"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"17765:43:33"},"nodeType":"YulFunctionCall","src":"17765:71:33"},"nodeType":"YulExpressionStatement","src":"17765:71:33"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17886:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17899:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"17910:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17895:3:33"},"nodeType":"YulFunctionCall","src":"17895:18:33"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"17846:39:33"},"nodeType":"YulFunctionCall","src":"17846:68:33"},"nodeType":"YulExpressionStatement","src":"17846:68:33"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"17968:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17981:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"17992:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17977:3:33"},"nodeType":"YulFunctionCall","src":"17977:18:33"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"17924:43:33"},"nodeType":"YulFunctionCall","src":"17924:72:33"},"nodeType":"YulExpressionStatement","src":"17924:72:33"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"18050:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18063:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"18074:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18059:3:33"},"nodeType":"YulFunctionCall","src":"18059:18:33"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"18006:43:33"},"nodeType":"YulFunctionCall","src":"18006:72:33"},"nodeType":"YulExpressionStatement","src":"18006:72:33"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17666:9:33","type":""},{"name":"value3","nodeType":"YulTypedName","src":"17678:6:33","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17686:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17694:6:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17702:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17713:4:33","type":""}],"src":"17540:545:33"},{"body":{"nodeType":"YulBlock","src":"18119:152:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18136:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18139:77:33","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18129:6:33"},"nodeType":"YulFunctionCall","src":"18129:88:33"},"nodeType":"YulExpressionStatement","src":"18129:88:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18233:1:33","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"18236:4:33","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18226:6:33"},"nodeType":"YulFunctionCall","src":"18226:15:33"},"nodeType":"YulExpressionStatement","src":"18226:15:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18257:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18260:4:33","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18250:6:33"},"nodeType":"YulFunctionCall","src":"18250:15:33"},"nodeType":"YulExpressionStatement","src":"18250:15:33"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"18091:180:33"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes1(value) -> cleaned {\n        cleaned := and(value, 0xff00000000000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes1_to_t_bytes1_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes1(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_bytes1_to_t_bytes1_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value5,  add(headStart, 160))\n\n        mstore(add(headStart, 192), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value6,  tail)\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_e4a161b26eb26ab0156b1351b0fe22ea7dfeeb342a09f3839aad0304de117d97(memPtr) {\n\n        mstore(add(memPtr, 0), \"BardToken: max supply exceeded\")\n\n    }\n\n    function abi_encode_t_stringliteral_e4a161b26eb26ab0156b1351b0fe22ea7dfeeb342a09f3839aad0304de117d97_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_e4a161b26eb26ab0156b1351b0fe22ea7dfeeb342a09f3839aad0304de117d97(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e4a161b26eb26ab0156b1351b0fe22ea7dfeeb342a09f3839aad0304de117d97__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e4a161b26eb26ab0156b1351b0fe22ea7dfeeb342a09f3839aad0304de117d97_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n","id":33,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"4275":[{"length":32,"start":4194}],"4277":[{"length":32,"start":4153}],"4279":[{"length":32,"start":4067}],"4281":[{"length":32,"start":6109}],"4283":[{"length":32,"start":6142}],"4286":[{"length":32,"start":4701}],"4289":[{"length":32,"start":4760}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101585760003560e01c806340c10f19116100c3578063a217fddf1161007c578063a217fddf146103f5578063a9059cbb14610413578063d505accf14610443578063d53913931461045f578063d547741f1461047d578063dd62ed3e1461049957610158565b806340c10f191461030757806370a08231146103235780637ecebe001461035357806384b0196e1461038357806391d14854146103a757806395d89b41146103d757610158565b80632f2ff15d116101155780632f2ff15d14610259578063313ce5671461027557806332cb6b0c146102935780633644e515146102b157806336568abe146102cf5780633dd1eb61146102eb57610158565b806301ffc9a71461015d57806306fdde031461018d578063095ea7b3146101ab57806318160ddd146101db57806323b872dd146101f9578063248a9ca314610229575b600080fd5b61017760048036038101906101729190611cb8565b6104c9565b6040516101849190611d00565b60405180910390f35b610195610543565b6040516101a29190611dab565b60405180910390f35b6101c560048036038101906101c09190611e61565b6105d5565b6040516101d29190611d00565b60405180910390f35b6101e36105f8565b6040516101f09190611eb0565b60405180910390f35b610213600480360381019061020e9190611ecb565b610602565b6040516102209190611d00565b60405180910390f35b610243600480360381019061023e9190611f54565b610631565b6040516102509190611f90565b60405180910390f35b610273600480360381019061026e9190611fab565b610651565b005b61027d610673565b60405161028a9190612007565b60405180910390f35b61029b61067c565b6040516102a89190611eb0565b60405180910390f35b6102b961068b565b6040516102c69190611f90565b60405180910390f35b6102e960048036038101906102e49190611fab565b61069a565b005b61030560048036038101906103009190612022565b610715565b005b610321600480360381019061031c9190611e61565b610751565b005b61033d60048036038101906103389190612022565b61088d565b60405161034a9190611eb0565b60405180910390f35b61036d60048036038101906103689190612022565b6108d5565b60405161037a9190611eb0565b60405180910390f35b61038b6108e7565b60405161039e9796959493929190612157565b60405180910390f35b6103c160048036038101906103bc9190611fab565b610991565b6040516103ce9190611d00565b60405180910390f35b6103df6109fc565b6040516103ec9190611dab565b60405180910390f35b6103fd610a8e565b60405161040a9190611f90565b60405180910390f35b61042d60048036038101906104289190611e61565b610a95565b60405161043a9190611d00565b60405180910390f35b61045d60048036038101906104589190612207565b610ab8565b005b610467610c00565b6040516104749190611f90565b60405180910390f35b61049760048036038101906104929190611fab565b610c24565b005b6104b360048036038101906104ae91906122a9565b610c46565b6040516104c09190611eb0565b60405180910390f35b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061053c575061053b82610ccd565b5b9050919050565b60606003805461055290612318565b80601f016020809104026020016040519081016040528092919081815260200182805461057e90612318565b80156105cb5780601f106105a0576101008083540402835291602001916105cb565b820191906000526020600020905b8154815290600101906020018083116105ae57829003601f168201915b5050505050905090565b6000806105e0610d37565b90506105ed818585610d3f565b600191505092915050565b6000600254905090565b60008061060d610d37565b905061061a858285610d51565b610625858585610de5565b60019150509392505050565b600060056000838152602001908152602001600020600101549050919050565b61065a82610631565b61066381610ed9565b61066d8383610eed565b50505050565b60006012905090565b6a295be96e6406697200000081565b6000610695610fdf565b905090565b6106a2610d37565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610706576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107108282611096565b505050565b6000801b61072281610ed9565b61074c7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a683610eed565b505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661077b81610ed9565b6a295be96e64066972000000826107906105f8565b61079a9190612378565b11156107db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d2906123f8565b60405180910390fd5b6a295be96e640669720000006107ef6105f8565b1115610830576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610827906123f8565b60405180910390fd5b61083a8383611189565b8273ffffffffffffffffffffffffffffffffffffffff167f30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe836040516108809190611eb0565b60405180910390a2505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006108e08261120b565b9050919050565b6000606080600080600060606108fb611254565b61090361128f565b46306000801b600067ffffffffffffffff81111561092457610923612418565b5b6040519080825280602002602001820160405280156109525781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b60006005600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b606060048054610a0b90612318565b80601f0160208091040260200160405190810160405280929190818152602001828054610a3790612318565b8015610a845780601f10610a5957610100808354040283529160200191610a84565b820191906000526020600020905b815481529060010190602001808311610a6757829003601f168201915b5050505050905090565b6000801b81565b600080610aa0610d37565b9050610aad818585610de5565b600191505092915050565b83421115610afd57836040517f62791302000000000000000000000000000000000000000000000000000000008152600401610af49190611eb0565b60405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610b2c8c6112ca565b89604051602001610b4296959493929190612447565b6040516020818303038152906040528051906020012090506000610b6582611321565b90506000610b758287878761133b565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610be957808a6040517f4b800e46000000000000000000000000000000000000000000000000000000008152600401610be09291906124a8565b60405180910390fd5b610bf48a8a8a610d3f565b50505050505050505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b610c2d82610631565b610c3681610ed9565b610c408383611096565b50505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b610d4c838383600161136b565b505050565b6000610d5d8484610c46565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610ddf5781811015610dcf578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610dc6939291906124d1565b60405180910390fd5b610dde8484848403600061136b565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e575760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610e4e9190612508565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ec95760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610ec09190612508565b60405180910390fd5b610ed4838383611542565b505050565b610eea81610ee5610d37565b611767565b50565b6000610ef98383610991565b610fd45760016005600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610f71610d37565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610fd9565b600090505b92915050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614801561105b57507f000000000000000000000000000000000000000000000000000000000000000046145b15611088577f00000000000000000000000000000000000000000000000000000000000000009050611093565b6110906117b8565b90505b90565b60006110a28383610991565b1561117e5760006005600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555061111b610d37565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050611183565b600090505b92915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111fb5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016111f29190612508565b60405180910390fd5b61120760008383611542565b5050565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606061128a60067f000000000000000000000000000000000000000000000000000000000000000061184e90919063ffffffff16565b905090565b60606112c560077f000000000000000000000000000000000000000000000000000000000000000061184e90919063ffffffff16565b905090565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050559050919050565b600061133461132e610fdf565b836118fe565b9050919050565b60008060008061134d8888888861193f565b92509250925061135d8282611a33565b829350505050949350505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036113dd5760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016113d49190612508565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361144f5760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016114469190612508565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550801561153c578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516115339190611eb0565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036115945780600260008282546115889190612378565b92505081905550611667565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611620578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611617939291906124d1565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036116b057806002600082825403925050819055506116fd565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161175a9190611eb0565b60405180910390a3505050565b6117718282610991565b6117b45780826040517fe2517d3f0000000000000000000000000000000000000000000000000000000081526004016117ab929190612523565b60405180910390fd5b5050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000463060405160200161183395949392919061254c565b60405160208183030381529060405280519060200120905090565b606060ff60001b831461186b5761186483611b97565b90506118f8565b81805461187790612318565b80601f01602080910402602001604051908101604052809291908181526020018280546118a390612318565b80156118f05780601f106118c5576101008083540402835291602001916118f0565b820191906000526020600020905b8154815290600101906020018083116118d357829003601f168201915b505050505090505b92915050565b60006040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c111561197f576000600385925092509250611a29565b6000600188888888604051600081526020016040526040516119a4949392919061259f565b6020604051602081039080840390855afa1580156119c6573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611a1a57600060016000801b93509350935050611a29565b8060008060001b935093509350505b9450945094915050565b60006003811115611a4757611a466125e4565b5b826003811115611a5a57611a596125e4565b5b0315611b935760016003811115611a7457611a736125e4565b5b826003811115611a8757611a866125e4565b5b03611abe576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026003811115611ad257611ad16125e4565b5b826003811115611ae557611ae46125e4565b5b03611b2a578060001c6040517ffce698f7000000000000000000000000000000000000000000000000000000008152600401611b219190611eb0565b60405180910390fd5b600380811115611b3d57611b3c6125e4565b5b826003811115611b5057611b4f6125e4565b5b03611b9257806040517fd78bce0c000000000000000000000000000000000000000000000000000000008152600401611b899190611f90565b60405180910390fd5b5b5050565b60606000611ba483611c0b565b90506000602067ffffffffffffffff811115611bc357611bc2612418565b5b6040519080825280601f01601f191660200182016040528015611bf55781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b60008060ff8360001c169050601f811115611c52576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611c9581611c60565b8114611ca057600080fd5b50565b600081359050611cb281611c8c565b92915050565b600060208284031215611cce57611ccd611c5b565b5b6000611cdc84828501611ca3565b91505092915050565b60008115159050919050565b611cfa81611ce5565b82525050565b6000602082019050611d156000830184611cf1565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611d55578082015181840152602081019050611d3a565b60008484015250505050565b6000601f19601f8301169050919050565b6000611d7d82611d1b565b611d878185611d26565b9350611d97818560208601611d37565b611da081611d61565b840191505092915050565b60006020820190508181036000830152611dc58184611d72565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611df882611dcd565b9050919050565b611e0881611ded565b8114611e1357600080fd5b50565b600081359050611e2581611dff565b92915050565b6000819050919050565b611e3e81611e2b565b8114611e4957600080fd5b50565b600081359050611e5b81611e35565b92915050565b60008060408385031215611e7857611e77611c5b565b5b6000611e8685828601611e16565b9250506020611e9785828601611e4c565b9150509250929050565b611eaa81611e2b565b82525050565b6000602082019050611ec56000830184611ea1565b92915050565b600080600060608486031215611ee457611ee3611c5b565b5b6000611ef286828701611e16565b9350506020611f0386828701611e16565b9250506040611f1486828701611e4c565b9150509250925092565b6000819050919050565b611f3181611f1e565b8114611f3c57600080fd5b50565b600081359050611f4e81611f28565b92915050565b600060208284031215611f6a57611f69611c5b565b5b6000611f7884828501611f3f565b91505092915050565b611f8a81611f1e565b82525050565b6000602082019050611fa56000830184611f81565b92915050565b60008060408385031215611fc257611fc1611c5b565b5b6000611fd085828601611f3f565b9250506020611fe185828601611e16565b9150509250929050565b600060ff82169050919050565b61200181611feb565b82525050565b600060208201905061201c6000830184611ff8565b92915050565b60006020828403121561203857612037611c5b565b5b600061204684828501611e16565b91505092915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6120848161204f565b82525050565b61209381611ded565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6120ce81611e2b565b82525050565b60006120e083836120c5565b60208301905092915050565b6000602082019050919050565b600061210482612099565b61210e81856120a4565b9350612119836120b5565b8060005b8381101561214a57815161213188826120d4565b975061213c836120ec565b92505060018101905061211d565b5085935050505092915050565b600060e08201905061216c600083018a61207b565b818103602083015261217e8189611d72565b905081810360408301526121928188611d72565b90506121a16060830187611ea1565b6121ae608083018661208a565b6121bb60a0830185611f81565b81810360c08301526121cd81846120f9565b905098975050505050505050565b6121e481611feb565b81146121ef57600080fd5b50565b600081359050612201816121db565b92915050565b600080600080600080600060e0888a03121561222657612225611c5b565b5b60006122348a828b01611e16565b97505060206122458a828b01611e16565b96505060406122568a828b01611e4c565b95505060606122678a828b01611e4c565b94505060806122788a828b016121f2565b93505060a06122898a828b01611f3f565b92505060c061229a8a828b01611f3f565b91505092959891949750929550565b600080604083850312156122c0576122bf611c5b565b5b60006122ce85828601611e16565b92505060206122df85828601611e16565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061233057607f821691505b602082108103612343576123426122e9565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061238382611e2b565b915061238e83611e2b565b92508282019050808211156123a6576123a5612349565b5b92915050565b7f42617264546f6b656e3a206d617820737570706c792065786365656465640000600082015250565b60006123e2601e83611d26565b91506123ed826123ac565b602082019050919050565b60006020820190508181036000830152612411816123d5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060c08201905061245c6000830189611f81565b612469602083018861208a565b612476604083018761208a565b6124836060830186611ea1565b6124906080830185611ea1565b61249d60a0830184611ea1565b979650505050505050565b60006040820190506124bd600083018561208a565b6124ca602083018461208a565b9392505050565b60006060820190506124e6600083018661208a565b6124f36020830185611ea1565b6125006040830184611ea1565b949350505050565b600060208201905061251d600083018461208a565b92915050565b6000604082019050612538600083018561208a565b6125456020830184611f81565b9392505050565b600060a0820190506125616000830188611f81565b61256e6020830187611f81565b61257b6040830186611f81565b6125886060830185611ea1565b612595608083018461208a565b9695505050505050565b60006080820190506125b46000830187611f81565b6125c16020830186611ff8565b6125ce6040830185611f81565b6125db6060830184611f81565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea2646970667358221220208f1e892652663deb044d1bc4bd708ab02973d6d8aacb293a3605d552521bd964736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x158 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x3F5 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x413 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x443 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x45F JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x47D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x499 JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x353 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x3A7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3D7 JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0x3DD1EB61 EQ PUSH2 0x2EB JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x229 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x172 SWAP2 SWAP1 PUSH2 0x1CB8 JUMP JUMPDEST PUSH2 0x4C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x184 SWAP2 SWAP1 PUSH2 0x1D00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x195 PUSH2 0x543 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A2 SWAP2 SWAP1 PUSH2 0x1DAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x1E61 JUMP JUMPDEST PUSH2 0x5D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D2 SWAP2 SWAP1 PUSH2 0x1D00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E3 PUSH2 0x5F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x213 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x1ECB JUMP JUMPDEST PUSH2 0x602 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x1D00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x243 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x1F54 JUMP JUMPDEST PUSH2 0x631 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x1F90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x273 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26E SWAP2 SWAP1 PUSH2 0x1FAB JUMP JUMPDEST PUSH2 0x651 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27D PUSH2 0x673 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28A SWAP2 SWAP1 PUSH2 0x2007 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29B PUSH2 0x67C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B9 PUSH2 0x68B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C6 SWAP2 SWAP1 PUSH2 0x1F90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E4 SWAP2 SWAP1 PUSH2 0x1FAB JUMP JUMPDEST PUSH2 0x69A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x305 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x300 SWAP2 SWAP1 PUSH2 0x2022 JUMP JUMPDEST PUSH2 0x715 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x321 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31C SWAP2 SWAP1 PUSH2 0x1E61 JUMP JUMPDEST PUSH2 0x751 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x338 SWAP2 SWAP1 PUSH2 0x2022 JUMP JUMPDEST PUSH2 0x88D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34A SWAP2 SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x368 SWAP2 SWAP1 PUSH2 0x2022 JUMP JUMPDEST PUSH2 0x8D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37A SWAP2 SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38B PUSH2 0x8E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39E SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2157 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BC SWAP2 SWAP1 PUSH2 0x1FAB JUMP JUMPDEST PUSH2 0x991 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CE SWAP2 SWAP1 PUSH2 0x1D00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DF PUSH2 0x9FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EC SWAP2 SWAP1 PUSH2 0x1DAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FD PUSH2 0xA8E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x40A SWAP2 SWAP1 PUSH2 0x1F90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x42D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x428 SWAP2 SWAP1 PUSH2 0x1E61 JUMP JUMPDEST PUSH2 0xA95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43A SWAP2 SWAP1 PUSH2 0x1D00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x45D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x458 SWAP2 SWAP1 PUSH2 0x2207 JUMP JUMPDEST PUSH2 0xAB8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x467 PUSH2 0xC00 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x474 SWAP2 SWAP1 PUSH2 0x1F90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x497 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x492 SWAP2 SWAP1 PUSH2 0x1FAB JUMP JUMPDEST PUSH2 0xC24 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4AE SWAP2 SWAP1 PUSH2 0x22A9 JUMP JUMPDEST PUSH2 0xC46 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C0 SWAP2 SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x53C JUMPI POP PUSH2 0x53B DUP3 PUSH2 0xCCD JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x552 SWAP1 PUSH2 0x2318 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x57E SWAP1 PUSH2 0x2318 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5CB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5A0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5CB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5AE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5E0 PUSH2 0xD37 JUMP JUMPDEST SWAP1 POP PUSH2 0x5ED DUP2 DUP6 DUP6 PUSH2 0xD3F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x60D PUSH2 0xD37 JUMP JUMPDEST SWAP1 POP PUSH2 0x61A DUP6 DUP3 DUP6 PUSH2 0xD51 JUMP JUMPDEST PUSH2 0x625 DUP6 DUP6 DUP6 PUSH2 0xDE5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x65A DUP3 PUSH2 0x631 JUMP JUMPDEST PUSH2 0x663 DUP2 PUSH2 0xED9 JUMP JUMPDEST PUSH2 0x66D DUP4 DUP4 PUSH2 0xEED JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH11 0x295BE96E64066972000000 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x695 PUSH2 0xFDF JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6A2 PUSH2 0xD37 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x706 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x710 DUP3 DUP3 PUSH2 0x1096 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0x722 DUP2 PUSH2 0xED9 JUMP JUMPDEST PUSH2 0x74C PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP4 PUSH2 0xEED JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x77B DUP2 PUSH2 0xED9 JUMP JUMPDEST PUSH11 0x295BE96E64066972000000 DUP3 PUSH2 0x790 PUSH2 0x5F8 JUMP JUMPDEST PUSH2 0x79A SWAP2 SWAP1 PUSH2 0x2378 JUMP JUMPDEST GT ISZERO PUSH2 0x7DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D2 SWAP1 PUSH2 0x23F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH11 0x295BE96E64066972000000 PUSH2 0x7EF PUSH2 0x5F8 JUMP JUMPDEST GT ISZERO PUSH2 0x830 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x827 SWAP1 PUSH2 0x23F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x83A DUP4 DUP4 PUSH2 0x1189 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x30385C845B448A36257A6A1716E6AD2E1BC2CBE333CDE1E69FE849AD6511ADFE DUP4 PUSH1 0x40 MLOAD PUSH2 0x880 SWAP2 SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8E0 DUP3 PUSH2 0x120B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x8FB PUSH2 0x1254 JUMP JUMPDEST PUSH2 0x903 PUSH2 0x128F JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x924 JUMPI PUSH2 0x923 PUSH2 0x2418 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x952 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xA0B SWAP1 PUSH2 0x2318 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA37 SWAP1 PUSH2 0x2318 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA84 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA59 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA84 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA67 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAA0 PUSH2 0xD37 JUMP JUMPDEST SWAP1 POP PUSH2 0xAAD DUP2 DUP6 DUP6 PUSH2 0xDE5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xAFD JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF4 SWAP2 SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0xB2C DUP13 PUSH2 0x12CA JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB42 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xB65 DUP3 PUSH2 0x1321 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB75 DUP3 DUP8 DUP8 DUP8 PUSH2 0x133B JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBE9 JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBE0 SWAP3 SWAP2 SWAP1 PUSH2 0x24A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBF4 DUP11 DUP11 DUP11 PUSH2 0xD3F JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0xC2D DUP3 PUSH2 0x631 JUMP JUMPDEST PUSH2 0xC36 DUP2 PUSH2 0xED9 JUMP JUMPDEST PUSH2 0xC40 DUP4 DUP4 PUSH2 0x1096 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xD4C DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x136B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD5D DUP5 DUP5 PUSH2 0xC46 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xDDF JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xDCF JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDDE DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x136B JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE57 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE4E SWAP2 SWAP1 PUSH2 0x2508 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEC9 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEC0 SWAP2 SWAP1 PUSH2 0x2508 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xED4 DUP4 DUP4 DUP4 PUSH2 0x1542 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xEEA DUP2 PUSH2 0xEE5 PUSH2 0xD37 JUMP JUMPDEST PUSH2 0x1767 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEF9 DUP4 DUP4 PUSH2 0x991 JUMP JUMPDEST PUSH2 0xFD4 JUMPI PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xF71 PUSH2 0xD37 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xFD9 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x105B JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x1088 JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0x1093 JUMP JUMPDEST PUSH2 0x1090 PUSH2 0x17B8 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10A2 DUP4 DUP4 PUSH2 0x991 JUMP JUMPDEST ISZERO PUSH2 0x117E JUMPI PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x111B PUSH2 0xD37 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1183 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11FB JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11F2 SWAP2 SWAP1 PUSH2 0x2508 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1207 PUSH1 0x0 DUP4 DUP4 PUSH2 0x1542 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x128A PUSH1 0x6 PUSH32 0x0 PUSH2 0x184E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x12C5 PUSH1 0x7 PUSH32 0x0 PUSH2 0x184E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1334 PUSH2 0x132E PUSH2 0xFDF JUMP JUMPDEST DUP4 PUSH2 0x18FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x134D DUP9 DUP9 DUP9 DUP9 PUSH2 0x193F JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x135D DUP3 DUP3 PUSH2 0x1A33 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13DD JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13D4 SWAP2 SWAP1 PUSH2 0x2508 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x144F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1446 SWAP2 SWAP1 PUSH2 0x2508 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x153C JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1533 SWAP2 SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1594 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1588 SWAP2 SWAP1 PUSH2 0x2378 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1667 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1620 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1617 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16B0 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x16FD JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x175A SWAP2 SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1771 DUP3 DUP3 PUSH2 0x991 JUMP JUMPDEST PUSH2 0x17B4 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17AB SWAP3 SWAP2 SWAP1 PUSH2 0x2523 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1833 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x254C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH1 0x0 SHL DUP4 EQ PUSH2 0x186B JUMPI PUSH2 0x1864 DUP4 PUSH2 0x1B97 JUMP JUMPDEST SWAP1 POP PUSH2 0x18F8 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x1877 SWAP1 PUSH2 0x2318 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x18A3 SWAP1 PUSH2 0x2318 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x18F0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x18C5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x18F0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x18D3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x197F JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1A29 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x19A4 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x259F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x19C6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A1A JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x1A29 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1A47 JUMPI PUSH2 0x1A46 PUSH2 0x25E4 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1A5A JUMPI PUSH2 0x1A59 PUSH2 0x25E4 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x1B93 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1A74 JUMPI PUSH2 0x1A73 PUSH2 0x25E4 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1A87 JUMPI PUSH2 0x1A86 PUSH2 0x25E4 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1ABE JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1AD2 JUMPI PUSH2 0x1AD1 PUSH2 0x25E4 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1AE5 JUMPI PUSH2 0x1AE4 PUSH2 0x25E4 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1B2A JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B21 SWAP2 SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x1B3D JUMPI PUSH2 0x1B3C PUSH2 0x25E4 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1B50 JUMPI PUSH2 0x1B4F PUSH2 0x25E4 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1B92 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B89 SWAP2 SWAP1 PUSH2 0x1F90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1BA4 DUP4 PUSH2 0x1C0B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BC3 JUMPI PUSH2 0x1BC2 PUSH2 0x2418 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1BF5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 PUSH1 0x0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x1C52 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C95 DUP2 PUSH2 0x1C60 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CB2 DUP2 PUSH2 0x1C8C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CCE JUMPI PUSH2 0x1CCD PUSH2 0x1C5B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CDC DUP5 DUP3 DUP6 ADD PUSH2 0x1CA3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CFA DUP2 PUSH2 0x1CE5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D15 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1CF1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D55 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D3A JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D7D DUP3 PUSH2 0x1D1B JUMP JUMPDEST PUSH2 0x1D87 DUP2 DUP6 PUSH2 0x1D26 JUMP JUMPDEST SWAP4 POP PUSH2 0x1D97 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D37 JUMP JUMPDEST PUSH2 0x1DA0 DUP2 PUSH2 0x1D61 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DC5 DUP2 DUP5 PUSH2 0x1D72 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DF8 DUP3 PUSH2 0x1DCD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E08 DUP2 PUSH2 0x1DED JUMP JUMPDEST DUP2 EQ PUSH2 0x1E13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E25 DUP2 PUSH2 0x1DFF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E3E DUP2 PUSH2 0x1E2B JUMP JUMPDEST DUP2 EQ PUSH2 0x1E49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E5B DUP2 PUSH2 0x1E35 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E78 JUMPI PUSH2 0x1E77 PUSH2 0x1C5B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E86 DUP6 DUP3 DUP7 ADD PUSH2 0x1E16 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E97 DUP6 DUP3 DUP7 ADD PUSH2 0x1E4C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EAA DUP2 PUSH2 0x1E2B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EC5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1EA1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1EE4 JUMPI PUSH2 0x1EE3 PUSH2 0x1C5B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EF2 DUP7 DUP3 DUP8 ADD PUSH2 0x1E16 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1F03 DUP7 DUP3 DUP8 ADD PUSH2 0x1E16 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1F14 DUP7 DUP3 DUP8 ADD PUSH2 0x1E4C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F31 DUP2 PUSH2 0x1F1E JUMP JUMPDEST DUP2 EQ PUSH2 0x1F3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F4E DUP2 PUSH2 0x1F28 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F6A JUMPI PUSH2 0x1F69 PUSH2 0x1C5B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F78 DUP5 DUP3 DUP6 ADD PUSH2 0x1F3F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F8A DUP2 PUSH2 0x1F1E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FA5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F81 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FC2 JUMPI PUSH2 0x1FC1 PUSH2 0x1C5B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FD0 DUP6 DUP3 DUP7 ADD PUSH2 0x1F3F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1FE1 DUP6 DUP3 DUP7 ADD PUSH2 0x1E16 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2001 DUP2 PUSH2 0x1FEB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x201C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1FF8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2038 JUMPI PUSH2 0x2037 PUSH2 0x1C5B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2046 DUP5 DUP3 DUP6 ADD PUSH2 0x1E16 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2084 DUP2 PUSH2 0x204F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2093 DUP2 PUSH2 0x1DED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20CE DUP2 PUSH2 0x1E2B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20E0 DUP4 DUP4 PUSH2 0x20C5 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2104 DUP3 PUSH2 0x2099 JUMP JUMPDEST PUSH2 0x210E DUP2 DUP6 PUSH2 0x20A4 JUMP JUMPDEST SWAP4 POP PUSH2 0x2119 DUP4 PUSH2 0x20B5 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x214A JUMPI DUP2 MLOAD PUSH2 0x2131 DUP9 DUP3 PUSH2 0x20D4 JUMP JUMPDEST SWAP8 POP PUSH2 0x213C DUP4 PUSH2 0x20EC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x211D JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x216C PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x207B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x217E DUP2 DUP10 PUSH2 0x1D72 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2192 DUP2 DUP9 PUSH2 0x1D72 JUMP JUMPDEST SWAP1 POP PUSH2 0x21A1 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x1EA1 JUMP JUMPDEST PUSH2 0x21AE PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x208A JUMP JUMPDEST PUSH2 0x21BB PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x1F81 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x21CD DUP2 DUP5 PUSH2 0x20F9 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x21E4 DUP2 PUSH2 0x1FEB JUMP JUMPDEST DUP2 EQ PUSH2 0x21EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2201 DUP2 PUSH2 0x21DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x2226 JUMPI PUSH2 0x2225 PUSH2 0x1C5B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2234 DUP11 DUP3 DUP12 ADD PUSH2 0x1E16 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x2245 DUP11 DUP3 DUP12 ADD PUSH2 0x1E16 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x2256 DUP11 DUP3 DUP12 ADD PUSH2 0x1E4C JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x2267 DUP11 DUP3 DUP12 ADD PUSH2 0x1E4C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x2278 DUP11 DUP3 DUP12 ADD PUSH2 0x21F2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x2289 DUP11 DUP3 DUP12 ADD PUSH2 0x1F3F JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x229A DUP11 DUP3 DUP12 ADD PUSH2 0x1F3F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22C0 JUMPI PUSH2 0x22BF PUSH2 0x1C5B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22CE DUP6 DUP3 DUP7 ADD PUSH2 0x1E16 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x22DF DUP6 DUP3 DUP7 ADD PUSH2 0x1E16 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2330 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2343 JUMPI PUSH2 0x2342 PUSH2 0x22E9 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2383 DUP3 PUSH2 0x1E2B JUMP JUMPDEST SWAP2 POP PUSH2 0x238E DUP4 PUSH2 0x1E2B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x23A6 JUMPI PUSH2 0x23A5 PUSH2 0x2349 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x42617264546F6B656E3A206D617820737570706C792065786365656465640000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23E2 PUSH1 0x1E DUP4 PUSH2 0x1D26 JUMP JUMPDEST SWAP2 POP PUSH2 0x23ED DUP3 PUSH2 0x23AC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2411 DUP2 PUSH2 0x23D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x245C PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x1F81 JUMP JUMPDEST PUSH2 0x2469 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x208A JUMP JUMPDEST PUSH2 0x2476 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x208A JUMP JUMPDEST PUSH2 0x2483 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1EA1 JUMP JUMPDEST PUSH2 0x2490 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1EA1 JUMP JUMPDEST PUSH2 0x249D PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x1EA1 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x24BD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x208A JUMP JUMPDEST PUSH2 0x24CA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x208A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x24E6 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x208A JUMP JUMPDEST PUSH2 0x24F3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1EA1 JUMP JUMPDEST PUSH2 0x2500 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1EA1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x251D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x208A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2538 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x208A JUMP JUMPDEST PUSH2 0x2545 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F81 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2561 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1F81 JUMP JUMPDEST PUSH2 0x256E PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1F81 JUMP JUMPDEST PUSH2 0x257B PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1F81 JUMP JUMPDEST PUSH2 0x2588 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1EA1 JUMP JUMPDEST PUSH2 0x2595 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x208A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x25B4 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1F81 JUMP JUMPDEST PUSH2 0x25C1 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1FF8 JUMP JUMPDEST PUSH2 0x25CE PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1F81 JUMP JUMPDEST PUSH2 0x25DB PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1F81 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 DUP16 0x1E DUP10 0x26 MSTORE PUSH7 0x3DEB044D1BC4BD PUSH17 0x8AB02973D6D8AACB293A3605D552521BD9 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"246:882:30:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:89:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3810:120:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4226:136;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3002:82:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;377:53:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2656:112:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5328:245:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;632:127:30;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;764:306;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3299:116:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2406:143:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5144:557:23;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;2854:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2187:49:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:178:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1680:672:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;309:62:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4642:138:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3846:140:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2565:202:0;2650:4;2688:32;2673:47;;;:11;:47;;;;:87;;;;2724:36;2748:11;2724:23;:36::i;:::-;2673:87;2666:94;;2565:202;;;:::o;2074:89:9:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;3144:97::-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;3810:120:0:-;3875:7;3901:6;:12;3908:4;3901:12;;;;;;;;;;;:22;;;3894:29;;3810:120;;;:::o;4226:136::-;4300:18;4313:4;4300:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;3002:82:9:-;3051:5;3075:2;3068:9;;3002:82;:::o;377:53:30:-;411:19;377:53;:::o;2656:112:11:-;2715:7;2741:20;:18;:20::i;:::-;2734:27;;2656:112;:::o;5328:245:0:-;5443:12;:10;:12::i;:::-;5421:34;;:18;:34;;;5417:102;;5478:30;;;;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;632:127:30:-;2232:4:0;690:18:30;;2464:16:0;2475:4;2464:10;:16::i;:::-;720:32:30::1;347:24;744:7;720:10;:32::i;:::-;;632:127:::0;;:::o;764:306::-;347:24;2464:16:0;2475:4;2464:10;:16::i;:::-;411:19:30::1;869:6;853:13;:11;:13::i;:::-;:22;;;;:::i;:::-;:36;;845:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;411:19;942:13;:11;:13::i;:::-;:26;;934:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1013:17;1019:2;1023:6;1013:5;:17::i;:::-;1052:2;1045:18;;;1056:6;1045:18;;;;;;:::i;:::-;;;;;;;;764:306:::0;;;:::o;3299:116:9:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2406:143:11:-;2497:7;2523:19;2536:5;2523:12;:19::i;:::-;2516:26;;2406:143;;;:::o;5144:557:23:-;5242:13;5269:18;5301:21;5336:15;5365:25;5404:12;5430:27;5533:13;:11;:13::i;:::-;5560:16;:14;:16::i;:::-;5590:13;5625:4;5652:1;5644:10;;5682:1;5668:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5482:212;;;;;;;;;;;;;;;;;;;;;5144:557;;;;;;;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;2276:93:9:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;2187:49:0:-;2232:4;2187:49;;;:::o;3610:178:9:-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;1680:672:11:-;1901:8;1883:15;:26;1879:97;;;1956:8;1932:33;;;;;;;;;;;:::i;:::-;;;;;;;;1879:97;1986:18;1022:95;2045:5;2052:7;2061:5;2068:16;2078:5;2068:9;:16::i;:::-;2086:8;2017:78;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2007:89;;;;;;1986:110;;2107:12;2122:28;2139:10;2122:16;:28::i;:::-;2107:43;;2161:14;2178:28;2192:4;2198:1;2201;2204;2178:13;:28::i;:::-;2161:45;;2230:5;2220:15;;:6;:15;;;2216:88;;2279:6;2287:5;2258:35;;;;;;;;;;;;:::i;:::-;;;;;;;;2216:88;2314:31;2323:5;2330:7;2339:5;2314:8;:31::i;:::-;1869:483;;;1680:672;;;;;;;:::o;309:62:30:-;347:24;309:62;:::o;4642:138:0:-;4717:18;4730:4;4717:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;:::-;;4642:138:::0;;;:::o;3846:140:9:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;762:146:25:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;656:96:16:-;709:7;735:10;728:17;;656:96;:::o;8989:128:9:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;3199:103:0:-;3265:30;3276:4;3282:12;:10;:12::i;:::-;3265:10;:30::i;:::-;3199:103;:::o;6179:316::-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;:12::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;3845:262:23:-;3898:7;3938:11;3921:28;;3929:4;3921:28;;;:63;;;;;3970:14;3953:13;:31;3921:63;3917:184;;;4007:22;4000:29;;;;3917:184;4067:23;:21;:23::i;:::-;4060:30;;3845:262;;:::o;6730:317:0:-;6808:4;6828:22;6836:4;6842:7;6828;:22::i;:::-;6824:217;;;6898:5;6866:6;:12;6873:4;6866:12;;;;;;;;;;;:20;;:29;6887:7;6866:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6949:12;:10;:12::i;:::-;6922:40;;6940:7;6922:40;;6934:4;6922:40;;;;;;;;;;6983:4;6976:11;;;;6824:217;7025:5;7018:12;;6730:317;;;;;:::o;7721:208:9:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;538:107:17:-;598:7;624;:14;632:5;624:14;;;;;;;;;;;;;;;;617:21;;538:107;;;:::o;6021:126:23:-;6067:13;6099:41;6126:13;6099:5;:26;;:41;;;;:::i;:::-;6092:48;;6021:126;:::o;6473:135::-;6522:13;6554:47;6584:16;6554:8;:29;;:47;;;;:::i;:::-;6547:54;;6473:135;:::o;759:395:17:-;819:7;1121;:14;1129:5;1121:14;;;;;;;;;;;;;;;;:16;;;;;;;;;;;;1114:23;;759:395;;;:::o;4917:176:23:-;4994:7;5020:66;5053:20;:18;:20::i;:::-;5075:10;5020:32;:66::i;:::-;5013:73;;4917:176;;;:::o;6803:260:22:-;6888:7;6908:17;6927:18;6947:16;6967:25;6978:4;6984:1;6987;6990;6967:10;:25::i;:::-;6907:85;;;;;;7002:28;7014:5;7021:8;7002:11;:28::i;:::-;7047:9;7040:16;;;;;6803:260;;;;;;:::o;9949:432:9:-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;3432:197:0:-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3598:7;3607:4;3565:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3515:108;3432:197;;:::o;4113:179:23:-;4168:7;2079:95;4226:11;4239:14;4255:13;4278:4;4204:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;:::o;3385:267:19:-;3479:13;1390:66;3537:17;;3527:5;3508:46;3504:142;;3577:15;3586:5;3577:8;:15::i;:::-;3570:22;;;;3504:142;3630:5;3623:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3385:267;;;;;:::o;3353:401:24:-;3446:14;3555:4;3549:11;3585:10;3580:3;3573:23;3632:15;3625:4;3620:3;3616:14;3609:39;3684:10;3677:4;3672:3;3668:14;3661:34;3733:4;3728:3;3718:20;3708:30;;3524:224;3353:401;;;;:::o;5140:1530:22:-;5266:7;5275:12;5289:7;6199:66;6194:1;6186:10;;:79;6182:164;;;6297:1;6301:30;6333:1;6281:54;;;;;;;;6182:164;6440:14;6457:24;6467:4;6473:1;6476;6479;6457:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6440:41;;6513:1;6495:20;;:6;:20;;;6491:113;;6547:1;6551:29;6590:1;6582:10;;6531:62;;;;;;;;;6491:113;6622:6;6630:20;6660:1;6652:10;;6614:49;;;;;;;5140:1530;;;;;;;;;:::o;7196:532::-;7291:20;7282:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;7278:444;7327:7;7278:444;7387:29;7378:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;7374:348;;7439:23;;;;;;;;;;;;;;7374:348;7492:35;7483:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;7479:243;;7586:8;7578:17;;7550:46;;;;;;;;;;;:::i;:::-;;;;;;;;7479:243;7626:30;7617:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;7613:109;;7702:8;7679:32;;;;;;;;;;;:::i;:::-;;;;;;;;7613:109;7196:532;;;:::o;2078:405:19:-;2137:13;2162:11;2176:16;2187:4;2176:10;:16::i;:::-;2162:30;;2280:17;2311:2;2300:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2280:34;;2402:3;2397;2390:16;2442:4;2435;2430:3;2426:14;2419:28;2473:3;2466:10;;;;2078:405;;;:::o;2555:245::-;2616:7;2635:14;2688:4;2679;2652:33;;:40;2635:57;;2715:2;2706:6;:11;2702:69;;;2740:20;;;;;;;;;;;;;;2702:69;2787:6;2780:13;;;2555:245;;;:::o;88:117:33:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:126::-;2897:7;2937:42;2930:5;2926:54;2915:65;;2860:126;;;:::o;2992:96::-;3029:7;3058:24;3076:5;3058:24;:::i;:::-;3047:35;;2992:96;;;:::o;3094:122::-;3167:24;3185:5;3167:24;:::i;:::-;3160:5;3157:35;3147:63;;3206:1;3203;3196:12;3147:63;3094:122;:::o;3222:139::-;3268:5;3306:6;3293:20;3284:29;;3322:33;3349:5;3322:33;:::i;:::-;3222:139;;;;:::o;3367:77::-;3404:7;3433:5;3422:16;;3367:77;;;:::o;3450:122::-;3523:24;3541:5;3523:24;:::i;:::-;3516:5;3513:35;3503:63;;3562:1;3559;3552:12;3503:63;3450:122;:::o;3578:139::-;3624:5;3662:6;3649:20;3640:29;;3678:33;3705:5;3678:33;:::i;:::-;3578:139;;;;:::o;3723:474::-;3791:6;3799;3848:2;3836:9;3827:7;3823:23;3819:32;3816:119;;;3854:79;;:::i;:::-;3816:119;3974:1;3999:53;4044:7;4035:6;4024:9;4020:22;3999:53;:::i;:::-;3989:63;;3945:117;4101:2;4127:53;4172:7;4163:6;4152:9;4148:22;4127:53;:::i;:::-;4117:63;;4072:118;3723:474;;;;;:::o;4203:118::-;4290:24;4308:5;4290:24;:::i;:::-;4285:3;4278:37;4203:118;;:::o;4327:222::-;4420:4;4458:2;4447:9;4443:18;4435:26;;4471:71;4539:1;4528:9;4524:17;4515:6;4471:71;:::i;:::-;4327:222;;;;:::o;4555:619::-;4632:6;4640;4648;4697:2;4685:9;4676:7;4672:23;4668:32;4665:119;;;4703:79;;:::i;:::-;4665:119;4823:1;4848:53;4893:7;4884:6;4873:9;4869:22;4848:53;:::i;:::-;4838:63;;4794:117;4950:2;4976:53;5021:7;5012:6;5001:9;4997:22;4976:53;:::i;:::-;4966:63;;4921:118;5078:2;5104:53;5149:7;5140:6;5129:9;5125:22;5104:53;:::i;:::-;5094:63;;5049:118;4555:619;;;;;:::o;5180:77::-;5217:7;5246:5;5235:16;;5180:77;;;:::o;5263:122::-;5336:24;5354:5;5336:24;:::i;:::-;5329:5;5326:35;5316:63;;5375:1;5372;5365:12;5316:63;5263:122;:::o;5391:139::-;5437:5;5475:6;5462:20;5453:29;;5491:33;5518:5;5491:33;:::i;:::-;5391:139;;;;:::o;5536:329::-;5595:6;5644:2;5632:9;5623:7;5619:23;5615:32;5612:119;;;5650:79;;:::i;:::-;5612:119;5770:1;5795:53;5840:7;5831:6;5820:9;5816:22;5795:53;:::i;:::-;5785:63;;5741:117;5536:329;;;;:::o;5871:118::-;5958:24;5976:5;5958:24;:::i;:::-;5953:3;5946:37;5871:118;;:::o;5995:222::-;6088:4;6126:2;6115:9;6111:18;6103:26;;6139:71;6207:1;6196:9;6192:17;6183:6;6139:71;:::i;:::-;5995:222;;;;:::o;6223:474::-;6291:6;6299;6348:2;6336:9;6327:7;6323:23;6319:32;6316:119;;;6354:79;;:::i;:::-;6316:119;6474:1;6499:53;6544:7;6535:6;6524:9;6520:22;6499:53;:::i;:::-;6489:63;;6445:117;6601:2;6627:53;6672:7;6663:6;6652:9;6648:22;6627:53;:::i;:::-;6617:63;;6572:118;6223:474;;;;;:::o;6703:86::-;6738:7;6778:4;6771:5;6767:16;6756:27;;6703:86;;;:::o;6795:112::-;6878:22;6894:5;6878:22;:::i;:::-;6873:3;6866:35;6795:112;;:::o;6913:214::-;7002:4;7040:2;7029:9;7025:18;7017:26;;7053:67;7117:1;7106:9;7102:17;7093:6;7053:67;:::i;:::-;6913:214;;;;:::o;7133:329::-;7192:6;7241:2;7229:9;7220:7;7216:23;7212:32;7209:119;;;7247:79;;:::i;:::-;7209:119;7367:1;7392:53;7437:7;7428:6;7417:9;7413:22;7392:53;:::i;:::-;7382:63;;7338:117;7133:329;;;;:::o;7468:149::-;7504:7;7544:66;7537:5;7533:78;7522:89;;7468:149;;;:::o;7623:115::-;7708:23;7725:5;7708:23;:::i;:::-;7703:3;7696:36;7623:115;;:::o;7744:118::-;7831:24;7849:5;7831:24;:::i;:::-;7826:3;7819:37;7744:118;;:::o;7868:114::-;7935:6;7969:5;7963:12;7953:22;;7868:114;;;:::o;7988:184::-;8087:11;8121:6;8116:3;8109:19;8161:4;8156:3;8152:14;8137:29;;7988:184;;;;:::o;8178:132::-;8245:4;8268:3;8260:11;;8298:4;8293:3;8289:14;8281:22;;8178:132;;;:::o;8316:108::-;8393:24;8411:5;8393:24;:::i;:::-;8388:3;8381:37;8316:108;;:::o;8430:179::-;8499:10;8520:46;8562:3;8554:6;8520:46;:::i;:::-;8598:4;8593:3;8589:14;8575:28;;8430:179;;;;:::o;8615:113::-;8685:4;8717;8712:3;8708:14;8700:22;;8615:113;;;:::o;8764:732::-;8883:3;8912:54;8960:5;8912:54;:::i;:::-;8982:86;9061:6;9056:3;8982:86;:::i;:::-;8975:93;;9092:56;9142:5;9092:56;:::i;:::-;9171:7;9202:1;9187:284;9212:6;9209:1;9206:13;9187:284;;;9288:6;9282:13;9315:63;9374:3;9359:13;9315:63;:::i;:::-;9308:70;;9401:60;9454:6;9401:60;:::i;:::-;9391:70;;9247:224;9234:1;9231;9227:9;9222:14;;9187:284;;;9191:14;9487:3;9480:10;;8888:608;;;8764:732;;;;:::o;9502:1215::-;9851:4;9889:3;9878:9;9874:19;9866:27;;9903:69;9969:1;9958:9;9954:17;9945:6;9903:69;:::i;:::-;10019:9;10013:4;10009:20;10004:2;9993:9;9989:18;9982:48;10047:78;10120:4;10111:6;10047:78;:::i;:::-;10039:86;;10172:9;10166:4;10162:20;10157:2;10146:9;10142:18;10135:48;10200:78;10273:4;10264:6;10200:78;:::i;:::-;10192:86;;10288:72;10356:2;10345:9;10341:18;10332:6;10288:72;:::i;:::-;10370:73;10438:3;10427:9;10423:19;10414:6;10370:73;:::i;:::-;10453;10521:3;10510:9;10506:19;10497:6;10453:73;:::i;:::-;10574:9;10568:4;10564:20;10558:3;10547:9;10543:19;10536:49;10602:108;10705:4;10696:6;10602:108;:::i;:::-;10594:116;;9502:1215;;;;;;;;;;:::o;10723:118::-;10794:22;10810:5;10794:22;:::i;:::-;10787:5;10784:33;10774:61;;10831:1;10828;10821:12;10774:61;10723:118;:::o;10847:135::-;10891:5;10929:6;10916:20;10907:29;;10945:31;10970:5;10945:31;:::i;:::-;10847:135;;;;:::o;10988:1199::-;11099:6;11107;11115;11123;11131;11139;11147;11196:3;11184:9;11175:7;11171:23;11167:33;11164:120;;;11203:79;;:::i;:::-;11164:120;11323:1;11348:53;11393:7;11384:6;11373:9;11369:22;11348:53;:::i;:::-;11338:63;;11294:117;11450:2;11476:53;11521:7;11512:6;11501:9;11497:22;11476:53;:::i;:::-;11466:63;;11421:118;11578:2;11604:53;11649:7;11640:6;11629:9;11625:22;11604:53;:::i;:::-;11594:63;;11549:118;11706:2;11732:53;11777:7;11768:6;11757:9;11753:22;11732:53;:::i;:::-;11722:63;;11677:118;11834:3;11861:51;11904:7;11895:6;11884:9;11880:22;11861:51;:::i;:::-;11851:61;;11805:117;11961:3;11988:53;12033:7;12024:6;12013:9;12009:22;11988:53;:::i;:::-;11978:63;;11932:119;12090:3;12117:53;12162:7;12153:6;12142:9;12138:22;12117:53;:::i;:::-;12107:63;;12061:119;10988:1199;;;;;;;;;;:::o;12193:474::-;12261:6;12269;12318:2;12306:9;12297:7;12293:23;12289:32;12286:119;;;12324:79;;:::i;:::-;12286:119;12444:1;12469:53;12514:7;12505:6;12494:9;12490:22;12469:53;:::i;:::-;12459:63;;12415:117;12571:2;12597:53;12642:7;12633:6;12622:9;12618:22;12597:53;:::i;:::-;12587:63;;12542:118;12193:474;;;;;:::o;12673:180::-;12721:77;12718:1;12711:88;12818:4;12815:1;12808:15;12842:4;12839:1;12832:15;12859:320;12903:6;12940:1;12934:4;12930:12;12920:22;;12987:1;12981:4;12977:12;13008:18;12998:81;;13064:4;13056:6;13052:17;13042:27;;12998:81;13126:2;13118:6;13115:14;13095:18;13092:38;13089:84;;13145:18;;:::i;:::-;13089:84;12910:269;12859:320;;;:::o;13185:180::-;13233:77;13230:1;13223:88;13330:4;13327:1;13320:15;13354:4;13351:1;13344:15;13371:191;13411:3;13430:20;13448:1;13430:20;:::i;:::-;13425:25;;13464:20;13482:1;13464:20;:::i;:::-;13459:25;;13507:1;13504;13500:9;13493:16;;13528:3;13525:1;13522:10;13519:36;;;13535:18;;:::i;:::-;13519:36;13371:191;;;;:::o;13568:180::-;13708:32;13704:1;13696:6;13692:14;13685:56;13568:180;:::o;13754:366::-;13896:3;13917:67;13981:2;13976:3;13917:67;:::i;:::-;13910:74;;13993:93;14082:3;13993:93;:::i;:::-;14111:2;14106:3;14102:12;14095:19;;13754:366;;;:::o;14126:419::-;14292:4;14330:2;14319:9;14315:18;14307:26;;14379:9;14373:4;14369:20;14365:1;14354:9;14350:17;14343:47;14407:131;14533:4;14407:131;:::i;:::-;14399:139;;14126:419;;;:::o;14551:180::-;14599:77;14596:1;14589:88;14696:4;14693:1;14686:15;14720:4;14717:1;14710:15;14737:775;14970:4;15008:3;14997:9;14993:19;14985:27;;15022:71;15090:1;15079:9;15075:17;15066:6;15022:71;:::i;:::-;15103:72;15171:2;15160:9;15156:18;15147:6;15103:72;:::i;:::-;15185;15253:2;15242:9;15238:18;15229:6;15185:72;:::i;:::-;15267;15335:2;15324:9;15320:18;15311:6;15267:72;:::i;:::-;15349:73;15417:3;15406:9;15402:19;15393:6;15349:73;:::i;:::-;15432;15500:3;15489:9;15485:19;15476:6;15432:73;:::i;:::-;14737:775;;;;;;;;;:::o;15518:332::-;15639:4;15677:2;15666:9;15662:18;15654:26;;15690:71;15758:1;15747:9;15743:17;15734:6;15690:71;:::i;:::-;15771:72;15839:2;15828:9;15824:18;15815:6;15771:72;:::i;:::-;15518:332;;;;;:::o;15856:442::-;16005:4;16043:2;16032:9;16028:18;16020:26;;16056:71;16124:1;16113:9;16109:17;16100:6;16056:71;:::i;:::-;16137:72;16205:2;16194:9;16190:18;16181:6;16137:72;:::i;:::-;16219;16287:2;16276:9;16272:18;16263:6;16219:72;:::i;:::-;15856:442;;;;;;:::o;16304:222::-;16397:4;16435:2;16424:9;16420:18;16412:26;;16448:71;16516:1;16505:9;16501:17;16492:6;16448:71;:::i;:::-;16304:222;;;;:::o;16532:332::-;16653:4;16691:2;16680:9;16676:18;16668:26;;16704:71;16772:1;16761:9;16757:17;16748:6;16704:71;:::i;:::-;16785:72;16853:2;16842:9;16838:18;16829:6;16785:72;:::i;:::-;16532:332;;;;;:::o;16870:664::-;17075:4;17113:3;17102:9;17098:19;17090:27;;17127:71;17195:1;17184:9;17180:17;17171:6;17127:71;:::i;:::-;17208:72;17276:2;17265:9;17261:18;17252:6;17208:72;:::i;:::-;17290;17358:2;17347:9;17343:18;17334:6;17290:72;:::i;:::-;17372;17440:2;17429:9;17425:18;17416:6;17372:72;:::i;:::-;17454:73;17522:3;17511:9;17507:19;17498:6;17454:73;:::i;:::-;16870:664;;;;;;;;:::o;17540:545::-;17713:4;17751:3;17740:9;17736:19;17728:27;;17765:71;17833:1;17822:9;17818:17;17809:6;17765:71;:::i;:::-;17846:68;17910:2;17899:9;17895:18;17886:6;17846:68;:::i;:::-;17924:72;17992:2;17981:9;17977:18;17968:6;17924:72;:::i;:::-;18006;18074:2;18063:9;18059:18;18050:6;18006:72;:::i;:::-;17540:545;;;;;;;:::o;18091:180::-;18139:77;18136:1;18129:88;18236:4;18233:1;18226:15;18260:4;18257:1;18250:15"},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","DOMAIN_SEPARATOR()":"3644e515","MAX_SUPPLY()":"32cb6b0c","MINTER_ROLE()":"d5391393","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","eip712Domain()":"84b0196e","getRoleAdmin(bytes32)":"248a9ca3","grantMinterRole(address)":"3dd1eb61","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","mint(address,uint256)":"40c10f19","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_minter\",\"type\":\"address\"}],\"name\":\"grantMinterRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BardToken.sol\":\"BardToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xc858a86a35701004d89022a5e98819aac46ccbdc4072fc9dd43928a676b1a2ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18acebb483c512c0eaafcb437f09c839972c3f0d36f0201ea7baa2926b987dd2\",\"dweb:/ipfs/Qmd9bf2noaDSYDtf6FMSzKu7LPhuf91jsVNmcoCuTCuGic\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/BardToken.sol\":{\"keccak256\":\"0xdd7009832095a694c0e911d0408a8290be8982d6a6ce95b34d5849e7dc86a448\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61cf3f1a3f5fcd24b66ea53cd9d9238f25c152b34744b6d28ba756b2a14cce61\",\"dweb:/ipfs/QmW58Aj7g65x4QtwiCRV9JAW8Qu2D1emMYP3CwcWkf9x3Y\"]}},\"version\":1}"}},"contracts/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","mint(address,uint256)":"40c10f19","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"mint(address,uint256)\":{\"details\":\"Creates `amount` tokens and assigns them to `to`, increasing\",\"params\":{\"amount\":\"amount of tokens to mint  Emits a {Minted} event\",\"to\":\"destionation address\"}},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC20.sol\":{\"keccak256\":\"0x2768ef9bdbbcacdf918e9ae67b7f9a50ff4287e4e4e96f9d6ce17ec18ed1ee28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc557a66fce923f5bc2fe86e9f2d7f97089d96e5b87fc2b2cd8c13fe6e47d743\",\"dweb:/ipfs/QmNLnQju4t6e3kSMYhpsnuqKwtWzMBur23kAgkLXPdfcqx\"]}},\"version\":1}"}},"contracts/SubDaoToken.sol":{"MyToken":{"abi":[{"inputs":[{"internalType":"address","name":"defaultAdmin","type":"address"},{"internalType":"address","name":"minter","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[],"name":"BARDAOTOKEN","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MEMBER","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINTER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mintBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_6047":{"entryPoint":null,"id":6047,"parameterSlots":2,"returnSlots":0},"@_749":{"entryPoint":null,"id":749,"parameterSlots":1,"returnSlots":0},"@_grantRole_256":{"entryPoint":191,"id":256,"parameterSlots":2,"returnSlots":1},"@_msgSender_3177":{"entryPoint":558,"id":3177,"parameterSlots":0,"returnSlots":1},"@_setURI_1362":{"entryPoint":170,"id":1362,"parameterSlots":1,"returnSlots":0},"@hasRole_80":{"entryPoint":451,"id":80,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":649,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address_fromMemory":{"entryPoint":672,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":901,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":743,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1222,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":603,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":571,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1037,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1183,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":1057,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1377,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":922,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":848,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1347,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":1047,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1315,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":801,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":754,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":1097,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":566,"id":null,"parameterSlots":0,"returnSlots":0},"shift_left_dynamic":{"entryPoint":938,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1302,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1155,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":951,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":1107,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":623,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":1150,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:6582:33","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:33","statements":[{"nodeType":"YulAssignment","src":"57:19:33","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:33","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:33"},"nodeType":"YulFunctionCall","src":"67:9:33"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:33"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:33","type":""}],"src":"7:75:33"},{"body":{"nodeType":"YulBlock","src":"177:28:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:33"},"nodeType":"YulFunctionCall","src":"187:12:33"},"nodeType":"YulExpressionStatement","src":"187:12:33"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:33"},{"body":{"nodeType":"YulBlock","src":"300:28:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:33"},"nodeType":"YulFunctionCall","src":"310:12:33"},"nodeType":"YulExpressionStatement","src":"310:12:33"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:33"},{"body":{"nodeType":"YulBlock","src":"379:81:33","statements":[{"nodeType":"YulAssignment","src":"389:65:33","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:33","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:33"},"nodeType":"YulFunctionCall","src":"400:54:33"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:33"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:33","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:33","type":""}],"src":"334:126:33"},{"body":{"nodeType":"YulBlock","src":"511:51:33","statements":[{"nodeType":"YulAssignment","src":"521:35:33","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:33"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:33"},"nodeType":"YulFunctionCall","src":"532:24:33"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:33"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:33","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:33","type":""}],"src":"466:96:33"},{"body":{"nodeType":"YulBlock","src":"611:79:33","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:33"},"nodeType":"YulFunctionCall","src":"670:12:33"},"nodeType":"YulExpressionStatement","src":"670:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:33"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:33"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:33"},"nodeType":"YulFunctionCall","src":"641:24:33"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:33"},"nodeType":"YulFunctionCall","src":"631:35:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:33"},"nodeType":"YulFunctionCall","src":"624:43:33"},"nodeType":"YulIf","src":"621:63:33"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:33","type":""}],"src":"568:122:33"},{"body":{"nodeType":"YulBlock","src":"759:80:33","statements":[{"nodeType":"YulAssignment","src":"769:22:33","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:33"},"nodeType":"YulFunctionCall","src":"778:13:33"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:33"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:33"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:33"},"nodeType":"YulFunctionCall","src":"800:33:33"},"nodeType":"YulExpressionStatement","src":"800:33:33"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:33","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:33","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:33","type":""}],"src":"696:143:33"},{"body":{"nodeType":"YulBlock","src":"939:413:33","statements":[{"body":{"nodeType":"YulBlock","src":"985:83:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"987:77:33"},"nodeType":"YulFunctionCall","src":"987:79:33"},"nodeType":"YulExpressionStatement","src":"987:79:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"960:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"969:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"956:3:33"},"nodeType":"YulFunctionCall","src":"956:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"981:2:33","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"952:3:33"},"nodeType":"YulFunctionCall","src":"952:32:33"},"nodeType":"YulIf","src":"949:119:33"},{"nodeType":"YulBlock","src":"1078:128:33","statements":[{"nodeType":"YulVariableDeclaration","src":"1093:15:33","value":{"kind":"number","nodeType":"YulLiteral","src":"1107:1:33","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1097:6:33","type":""}]},{"nodeType":"YulAssignment","src":"1122:74:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1168:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"1179:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1164:3:33"},"nodeType":"YulFunctionCall","src":"1164:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1188:7:33"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1132:31:33"},"nodeType":"YulFunctionCall","src":"1132:64:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1122:6:33"}]}]},{"nodeType":"YulBlock","src":"1216:129:33","statements":[{"nodeType":"YulVariableDeclaration","src":"1231:16:33","value":{"kind":"number","nodeType":"YulLiteral","src":"1245:2:33","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1235:6:33","type":""}]},{"nodeType":"YulAssignment","src":"1261:74:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1307:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"1318:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1303:3:33"},"nodeType":"YulFunctionCall","src":"1303:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1327:7:33"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1271:31:33"},"nodeType":"YulFunctionCall","src":"1271:64:33"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1261:6:33"}]}]}]},"name":"abi_decode_tuple_t_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"901:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"912:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"924:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"932:6:33","type":""}],"src":"845:507:33"},{"body":{"nodeType":"YulBlock","src":"1417:40:33","statements":[{"nodeType":"YulAssignment","src":"1428:22:33","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1444:5:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1438:5:33"},"nodeType":"YulFunctionCall","src":"1438:12:33"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1428:6:33"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1400:5:33","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1410:6:33","type":""}],"src":"1358:99:33"},{"body":{"nodeType":"YulBlock","src":"1491:152:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1508:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1511:77:33","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1501:6:33"},"nodeType":"YulFunctionCall","src":"1501:88:33"},"nodeType":"YulExpressionStatement","src":"1501:88:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1605:1:33","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1608:4:33","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1598:6:33"},"nodeType":"YulFunctionCall","src":"1598:15:33"},"nodeType":"YulExpressionStatement","src":"1598:15:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1629:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1632:4:33","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1622:6:33"},"nodeType":"YulFunctionCall","src":"1622:15:33"},"nodeType":"YulExpressionStatement","src":"1622:15:33"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1463:180:33"},{"body":{"nodeType":"YulBlock","src":"1677:152:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1694:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1697:77:33","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1687:6:33"},"nodeType":"YulFunctionCall","src":"1687:88:33"},"nodeType":"YulExpressionStatement","src":"1687:88:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1791:1:33","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1794:4:33","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1784:6:33"},"nodeType":"YulFunctionCall","src":"1784:15:33"},"nodeType":"YulExpressionStatement","src":"1784:15:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1815:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1818:4:33","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1808:6:33"},"nodeType":"YulFunctionCall","src":"1808:15:33"},"nodeType":"YulExpressionStatement","src":"1808:15:33"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"1649:180:33"},{"body":{"nodeType":"YulBlock","src":"1886:269:33","statements":[{"nodeType":"YulAssignment","src":"1896:22:33","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1910:4:33"},{"kind":"number","nodeType":"YulLiteral","src":"1916:1:33","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1906:3:33"},"nodeType":"YulFunctionCall","src":"1906:12:33"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1896:6:33"}]},{"nodeType":"YulVariableDeclaration","src":"1927:38:33","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1957:4:33"},{"kind":"number","nodeType":"YulLiteral","src":"1963:1:33","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1953:3:33"},"nodeType":"YulFunctionCall","src":"1953:12:33"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1931:18:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"2004:51:33","statements":[{"nodeType":"YulAssignment","src":"2018:27:33","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2032:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"2040:4:33","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2028:3:33"},"nodeType":"YulFunctionCall","src":"2028:17:33"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2018:6:33"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1984:18:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1977:6:33"},"nodeType":"YulFunctionCall","src":"1977:26:33"},"nodeType":"YulIf","src":"1974:81:33"},{"body":{"nodeType":"YulBlock","src":"2107:42:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"2121:16:33"},"nodeType":"YulFunctionCall","src":"2121:18:33"},"nodeType":"YulExpressionStatement","src":"2121:18:33"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2071:18:33"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2094:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"2102:2:33","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2091:2:33"},"nodeType":"YulFunctionCall","src":"2091:14:33"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2068:2:33"},"nodeType":"YulFunctionCall","src":"2068:38:33"},"nodeType":"YulIf","src":"2065:84:33"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1870:4:33","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1879:6:33","type":""}],"src":"1835:320:33"},{"body":{"nodeType":"YulBlock","src":"2215:87:33","statements":[{"nodeType":"YulAssignment","src":"2225:11:33","value":{"name":"ptr","nodeType":"YulIdentifier","src":"2233:3:33"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2225:4:33"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2253:1:33","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"2256:3:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2246:6:33"},"nodeType":"YulFunctionCall","src":"2246:14:33"},"nodeType":"YulExpressionStatement","src":"2246:14:33"},{"nodeType":"YulAssignment","src":"2269:26:33","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2287:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2290:4:33","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2277:9:33"},"nodeType":"YulFunctionCall","src":"2277:18:33"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2269:4:33"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"2202:3:33","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"2210:4:33","type":""}],"src":"2161:141:33"},{"body":{"nodeType":"YulBlock","src":"2352:49:33","statements":[{"nodeType":"YulAssignment","src":"2362:33:33","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2380:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"2387:2:33","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2376:3:33"},"nodeType":"YulFunctionCall","src":"2376:14:33"},{"kind":"number","nodeType":"YulLiteral","src":"2392:2:33","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2372:3:33"},"nodeType":"YulFunctionCall","src":"2372:23:33"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2362:6:33"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2335:5:33","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2345:6:33","type":""}],"src":"2308:93:33"},{"body":{"nodeType":"YulBlock","src":"2460:54:33","statements":[{"nodeType":"YulAssignment","src":"2470:37:33","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"2495:4:33"},{"name":"value","nodeType":"YulIdentifier","src":"2501:5:33"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2491:3:33"},"nodeType":"YulFunctionCall","src":"2491:16:33"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"2470:8:33"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"2435:4:33","type":""},{"name":"value","nodeType":"YulTypedName","src":"2441:5:33","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"2451:8:33","type":""}],"src":"2407:107:33"},{"body":{"nodeType":"YulBlock","src":"2596:317:33","statements":[{"nodeType":"YulVariableDeclaration","src":"2606:35:33","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"2627:10:33"},{"kind":"number","nodeType":"YulLiteral","src":"2639:1:33","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2623:3:33"},"nodeType":"YulFunctionCall","src":"2623:18:33"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"2610:9:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2650:109:33","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"2681:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"2692:66:33","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"2662:18:33"},"nodeType":"YulFunctionCall","src":"2662:97:33"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"2654:4:33","type":""}]},{"nodeType":"YulAssignment","src":"2768:51:33","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"2799:9:33"},{"name":"toInsert","nodeType":"YulIdentifier","src":"2810:8:33"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"2780:18:33"},"nodeType":"YulFunctionCall","src":"2780:39:33"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"2768:8:33"}]},{"nodeType":"YulAssignment","src":"2828:30:33","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2841:5:33"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"2852:4:33"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2848:3:33"},"nodeType":"YulFunctionCall","src":"2848:9:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2837:3:33"},"nodeType":"YulFunctionCall","src":"2837:21:33"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2828:5:33"}]},{"nodeType":"YulAssignment","src":"2867:40:33","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2880:5:33"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"2891:8:33"},{"name":"mask","nodeType":"YulIdentifier","src":"2901:4:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2887:3:33"},"nodeType":"YulFunctionCall","src":"2887:19:33"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2877:2:33"},"nodeType":"YulFunctionCall","src":"2877:30:33"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2867:6:33"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2557:5:33","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"2564:10:33","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"2576:8:33","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2589:6:33","type":""}],"src":"2520:393:33"},{"body":{"nodeType":"YulBlock","src":"2964:32:33","statements":[{"nodeType":"YulAssignment","src":"2974:16:33","value":{"name":"value","nodeType":"YulIdentifier","src":"2985:5:33"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2974:7:33"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2946:5:33","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2956:7:33","type":""}],"src":"2919:77:33"},{"body":{"nodeType":"YulBlock","src":"3034:28:33","statements":[{"nodeType":"YulAssignment","src":"3044:12:33","value":{"name":"value","nodeType":"YulIdentifier","src":"3051:5:33"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3044:3:33"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3020:5:33","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3030:3:33","type":""}],"src":"3002:60:33"},{"body":{"nodeType":"YulBlock","src":"3128:82:33","statements":[{"nodeType":"YulAssignment","src":"3138:66:33","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3196:5:33"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3178:17:33"},"nodeType":"YulFunctionCall","src":"3178:24:33"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"3169:8:33"},"nodeType":"YulFunctionCall","src":"3169:34:33"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3151:17:33"},"nodeType":"YulFunctionCall","src":"3151:53:33"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"3138:9:33"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3108:5:33","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"3118:9:33","type":""}],"src":"3068:142:33"},{"body":{"nodeType":"YulBlock","src":"3263:28:33","statements":[{"nodeType":"YulAssignment","src":"3273:12:33","value":{"name":"value","nodeType":"YulIdentifier","src":"3280:5:33"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3273:3:33"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3249:5:33","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3259:3:33","type":""}],"src":"3216:75:33"},{"body":{"nodeType":"YulBlock","src":"3373:193:33","statements":[{"nodeType":"YulVariableDeclaration","src":"3383:63:33","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"3438:7:33"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3407:30:33"},"nodeType":"YulFunctionCall","src":"3407:39:33"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"3387:16:33","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3462:4:33"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3502:4:33"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3496:5:33"},"nodeType":"YulFunctionCall","src":"3496:11:33"},{"name":"offset","nodeType":"YulIdentifier","src":"3509:6:33"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"3541:16:33"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"3517:23:33"},"nodeType":"YulFunctionCall","src":"3517:41:33"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"3468:27:33"},"nodeType":"YulFunctionCall","src":"3468:91:33"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3455:6:33"},"nodeType":"YulFunctionCall","src":"3455:105:33"},"nodeType":"YulExpressionStatement","src":"3455:105:33"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3350:4:33","type":""},{"name":"offset","nodeType":"YulTypedName","src":"3356:6:33","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"3364:7:33","type":""}],"src":"3297:269:33"},{"body":{"nodeType":"YulBlock","src":"3621:24:33","statements":[{"nodeType":"YulAssignment","src":"3631:8:33","value":{"kind":"number","nodeType":"YulLiteral","src":"3638:1:33","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3631:3:33"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3617:3:33","type":""}],"src":"3572:73:33"},{"body":{"nodeType":"YulBlock","src":"3704:136:33","statements":[{"nodeType":"YulVariableDeclaration","src":"3714:46:33","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"3728:30:33"},"nodeType":"YulFunctionCall","src":"3728:32:33"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"3718:6:33","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3813:4:33"},{"name":"offset","nodeType":"YulIdentifier","src":"3819:6:33"},{"name":"zero_0","nodeType":"YulIdentifier","src":"3827:6:33"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3769:43:33"},"nodeType":"YulFunctionCall","src":"3769:65:33"},"nodeType":"YulExpressionStatement","src":"3769:65:33"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3690:4:33","type":""},{"name":"offset","nodeType":"YulTypedName","src":"3696:6:33","type":""}],"src":"3651:189:33"},{"body":{"nodeType":"YulBlock","src":"3896:136:33","statements":[{"body":{"nodeType":"YulBlock","src":"3963:63:33","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"4007:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"4014:1:33","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"3977:29:33"},"nodeType":"YulFunctionCall","src":"3977:39:33"},"nodeType":"YulExpressionStatement","src":"3977:39:33"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3916:5:33"},{"name":"end","nodeType":"YulIdentifier","src":"3923:3:33"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3913:2:33"},"nodeType":"YulFunctionCall","src":"3913:14:33"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3928:26:33","statements":[{"nodeType":"YulAssignment","src":"3930:22:33","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3943:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"3950:1:33","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3939:3:33"},"nodeType":"YulFunctionCall","src":"3939:13:33"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"3930:5:33"}]}]},"pre":{"nodeType":"YulBlock","src":"3910:2:33","statements":[]},"src":"3906:120:33"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"3884:5:33","type":""},{"name":"end","nodeType":"YulTypedName","src":"3891:3:33","type":""}],"src":"3846:186:33"},{"body":{"nodeType":"YulBlock","src":"4117:464:33","statements":[{"body":{"nodeType":"YulBlock","src":"4143:431:33","statements":[{"nodeType":"YulVariableDeclaration","src":"4157:54:33","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4205:5:33"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"4173:31:33"},"nodeType":"YulFunctionCall","src":"4173:38:33"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"4161:8:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4224:63:33","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"4247:8:33"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"4275:10:33"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"4257:17:33"},"nodeType":"YulFunctionCall","src":"4257:29:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4243:3:33"},"nodeType":"YulFunctionCall","src":"4243:44:33"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"4228:11:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"4444:27:33","statements":[{"nodeType":"YulAssignment","src":"4446:23:33","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"4461:8:33"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"4446:11:33"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"4428:10:33"},{"kind":"number","nodeType":"YulLiteral","src":"4440:2:33","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4425:2:33"},"nodeType":"YulFunctionCall","src":"4425:18:33"},"nodeType":"YulIf","src":"4422:49:33"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"4513:11:33"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"4530:8:33"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"4558:3:33"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"4540:17:33"},"nodeType":"YulFunctionCall","src":"4540:22:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4526:3:33"},"nodeType":"YulFunctionCall","src":"4526:37:33"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"4484:28:33"},"nodeType":"YulFunctionCall","src":"4484:80:33"},"nodeType":"YulExpressionStatement","src":"4484:80:33"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"4134:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"4139:2:33","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4131:2:33"},"nodeType":"YulFunctionCall","src":"4131:11:33"},"nodeType":"YulIf","src":"4128:446:33"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"4093:5:33","type":""},{"name":"len","nodeType":"YulTypedName","src":"4100:3:33","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"4105:10:33","type":""}],"src":"4038:543:33"},{"body":{"nodeType":"YulBlock","src":"4650:54:33","statements":[{"nodeType":"YulAssignment","src":"4660:37:33","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"4685:4:33"},{"name":"value","nodeType":"YulIdentifier","src":"4691:5:33"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4681:3:33"},"nodeType":"YulFunctionCall","src":"4681:16:33"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"4660:8:33"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"4625:4:33","type":""},{"name":"value","nodeType":"YulTypedName","src":"4631:5:33","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"4641:8:33","type":""}],"src":"4587:117:33"},{"body":{"nodeType":"YulBlock","src":"4761:118:33","statements":[{"nodeType":"YulVariableDeclaration","src":"4771:68:33","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4820:1:33","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"4823:5:33"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4816:3:33"},"nodeType":"YulFunctionCall","src":"4816:13:33"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4835:1:33","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4831:3:33"},"nodeType":"YulFunctionCall","src":"4831:6:33"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"4787:28:33"},"nodeType":"YulFunctionCall","src":"4787:51:33"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4783:3:33"},"nodeType":"YulFunctionCall","src":"4783:56:33"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"4775:4:33","type":""}]},{"nodeType":"YulAssignment","src":"4848:25:33","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4862:4:33"},{"name":"mask","nodeType":"YulIdentifier","src":"4868:4:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4858:3:33"},"nodeType":"YulFunctionCall","src":"4858:15:33"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4848:6:33"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4738:4:33","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"4744:5:33","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4754:6:33","type":""}],"src":"4710:169:33"},{"body":{"nodeType":"YulBlock","src":"4965:214:33","statements":[{"nodeType":"YulAssignment","src":"5098:37:33","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5125:4:33"},{"name":"len","nodeType":"YulIdentifier","src":"5131:3:33"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"5106:18:33"},"nodeType":"YulFunctionCall","src":"5106:29:33"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"5098:4:33"}]},{"nodeType":"YulAssignment","src":"5144:29:33","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5155:4:33"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5165:1:33","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"5168:3:33"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5161:3:33"},"nodeType":"YulFunctionCall","src":"5161:11:33"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5152:2:33"},"nodeType":"YulFunctionCall","src":"5152:21:33"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"5144:4:33"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4946:4:33","type":""},{"name":"len","nodeType":"YulTypedName","src":"4952:3:33","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"4960:4:33","type":""}],"src":"4884:295:33"},{"body":{"nodeType":"YulBlock","src":"5276:1303:33","statements":[{"nodeType":"YulVariableDeclaration","src":"5287:51:33","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5334:3:33"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5301:32:33"},"nodeType":"YulFunctionCall","src":"5301:37:33"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"5291:6:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"5423:22:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5425:16:33"},"nodeType":"YulFunctionCall","src":"5425:18:33"},"nodeType":"YulExpressionStatement","src":"5425:18:33"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5395:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"5403:18:33","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5392:2:33"},"nodeType":"YulFunctionCall","src":"5392:30:33"},"nodeType":"YulIf","src":"5389:56:33"},{"nodeType":"YulVariableDeclaration","src":"5455:52:33","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5501:4:33"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5495:5:33"},"nodeType":"YulFunctionCall","src":"5495:11:33"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"5469:25:33"},"nodeType":"YulFunctionCall","src":"5469:38:33"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"5459:6:33","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5600:4:33"},{"name":"oldLen","nodeType":"YulIdentifier","src":"5606:6:33"},{"name":"newLen","nodeType":"YulIdentifier","src":"5614:6:33"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"5554:45:33"},"nodeType":"YulFunctionCall","src":"5554:67:33"},"nodeType":"YulExpressionStatement","src":"5554:67:33"},{"nodeType":"YulVariableDeclaration","src":"5631:18:33","value":{"kind":"number","nodeType":"YulLiteral","src":"5648:1:33","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"5635:9:33","type":""}]},{"nodeType":"YulAssignment","src":"5659:17:33","value":{"kind":"number","nodeType":"YulLiteral","src":"5672:4:33","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"5659:9:33"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"5723:611:33","statements":[{"nodeType":"YulVariableDeclaration","src":"5737:37:33","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5756:6:33"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5768:4:33","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5764:3:33"},"nodeType":"YulFunctionCall","src":"5764:9:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5752:3:33"},"nodeType":"YulFunctionCall","src":"5752:22:33"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"5741:7:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5788:51:33","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5834:4:33"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"5802:31:33"},"nodeType":"YulFunctionCall","src":"5802:37:33"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"5792:6:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5852:10:33","value":{"kind":"number","nodeType":"YulLiteral","src":"5861:1:33","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5856:1:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"5920:163:33","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"5945:6:33"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5963:3:33"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5968:9:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5959:3:33"},"nodeType":"YulFunctionCall","src":"5959:19:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5953:5:33"},"nodeType":"YulFunctionCall","src":"5953:26:33"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5938:6:33"},"nodeType":"YulFunctionCall","src":"5938:42:33"},"nodeType":"YulExpressionStatement","src":"5938:42:33"},{"nodeType":"YulAssignment","src":"5997:24:33","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"6011:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"6019:1:33","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6007:3:33"},"nodeType":"YulFunctionCall","src":"6007:14:33"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"5997:6:33"}]},{"nodeType":"YulAssignment","src":"6038:31:33","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"6055:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"6066:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6051:3:33"},"nodeType":"YulFunctionCall","src":"6051:18:33"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"6038:9:33"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5886:1:33"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"5889:7:33"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5883:2:33"},"nodeType":"YulFunctionCall","src":"5883:14:33"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5898:21:33","statements":[{"nodeType":"YulAssignment","src":"5900:17:33","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5909:1:33"},{"kind":"number","nodeType":"YulLiteral","src":"5912:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5905:3:33"},"nodeType":"YulFunctionCall","src":"5905:12:33"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5900:1:33"}]}]},"pre":{"nodeType":"YulBlock","src":"5879:3:33","statements":[]},"src":"5875:208:33"},{"body":{"nodeType":"YulBlock","src":"6119:156:33","statements":[{"nodeType":"YulVariableDeclaration","src":"6137:43:33","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6164:3:33"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"6169:9:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6160:3:33"},"nodeType":"YulFunctionCall","src":"6160:19:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6154:5:33"},"nodeType":"YulFunctionCall","src":"6154:26:33"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"6141:9:33","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"6204:6:33"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"6231:9:33"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"6246:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"6254:4:33","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6242:3:33"},"nodeType":"YulFunctionCall","src":"6242:17:33"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"6212:18:33"},"nodeType":"YulFunctionCall","src":"6212:48:33"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6197:6:33"},"nodeType":"YulFunctionCall","src":"6197:64:33"},"nodeType":"YulExpressionStatement","src":"6197:64:33"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"6102:7:33"},{"name":"newLen","nodeType":"YulIdentifier","src":"6111:6:33"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6099:2:33"},"nodeType":"YulFunctionCall","src":"6099:19:33"},"nodeType":"YulIf","src":"6096:179:33"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6295:4:33"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"6309:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"6317:1:33","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6305:3:33"},"nodeType":"YulFunctionCall","src":"6305:14:33"},{"kind":"number","nodeType":"YulLiteral","src":"6321:1:33","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6301:3:33"},"nodeType":"YulFunctionCall","src":"6301:22:33"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6288:6:33"},"nodeType":"YulFunctionCall","src":"6288:36:33"},"nodeType":"YulExpressionStatement","src":"6288:36:33"}]},"nodeType":"YulCase","src":"5716:618:33","value":{"kind":"number","nodeType":"YulLiteral","src":"5721:1:33","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"6351:222:33","statements":[{"nodeType":"YulVariableDeclaration","src":"6365:14:33","value":{"kind":"number","nodeType":"YulLiteral","src":"6378:1:33","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"6369:5:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"6402:67:33","statements":[{"nodeType":"YulAssignment","src":"6420:35:33","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6439:3:33"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"6444:9:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6435:3:33"},"nodeType":"YulFunctionCall","src":"6435:19:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6429:5:33"},"nodeType":"YulFunctionCall","src":"6429:26:33"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6420:5:33"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"6395:6:33"},"nodeType":"YulIf","src":"6392:77:33"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6489:4:33"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6548:5:33"},{"name":"newLen","nodeType":"YulIdentifier","src":"6555:6:33"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"6495:52:33"},"nodeType":"YulFunctionCall","src":"6495:67:33"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6482:6:33"},"nodeType":"YulFunctionCall","src":"6482:81:33"},"nodeType":"YulExpressionStatement","src":"6482:81:33"}]},"nodeType":"YulCase","src":"6343:230:33","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5696:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"5704:2:33","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5693:2:33"},"nodeType":"YulFunctionCall","src":"5693:14:33"},"nodeType":"YulSwitch","src":"5686:887:33"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5265:4:33","type":""},{"name":"src","nodeType":"YulTypedName","src":"5271:3:33","type":""}],"src":"5184:1395:33"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":33,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162002fbc38038062002fbc8339818101604052810190620000379190620002a0565b604051806020016040528060008152506200005881620000aa60201b60201c565b506200006e6000801b83620000bf60201b60201c565b50620000a17f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a682620000bf60201b60201c565b50505062000648565b8060029081620000bb919062000561565b5050565b6000620000d38383620001c360201b60201c565b620001b85760016003600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550620001546200022e60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050620001bd565b600090505b92915050565b60006003600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000268826200023b565b9050919050565b6200027a816200025b565b81146200028657600080fd5b50565b6000815190506200029a816200026f565b92915050565b60008060408385031215620002ba57620002b962000236565b5b6000620002ca8582860162000289565b9250506020620002dd8582860162000289565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200036957607f821691505b6020821081036200037f576200037e62000321565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003e97fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620003aa565b620003f58683620003aa565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620004426200043c62000436846200040d565b62000417565b6200040d565b9050919050565b6000819050919050565b6200045e8362000421565b620004766200046d8262000449565b848454620003b7565b825550505050565b600090565b6200048d6200047e565b6200049a81848462000453565b505050565b5b81811015620004c257620004b660008262000483565b600181019050620004a0565b5050565b601f8211156200051157620004db8162000385565b620004e6846200039a565b81016020851015620004f6578190505b6200050e62000505856200039a565b8301826200049f565b50505b505050565b600082821c905092915050565b6000620005366000198460080262000516565b1980831691505092915050565b600062000551838362000523565b9150826002028217905092915050565b6200056c82620002e7565b67ffffffffffffffff811115620005885762000587620002f2565b5b62000594825462000350565b620005a1828285620004c6565b600060209050601f831160018114620005d95760008415620005c4578287015190505b620005d0858262000543565b86555062000640565b601f198416620005e98662000385565b60005b828110156200061357848901518255600182019150602085019450602081019050620005ec565b868310156200063357848901516200062f601f89168262000523565b8355505b6001600288020188555050505b505050505050565b61296480620006586000396000f3fe608060405234801561001057600080fd5b50600436106101205760003560e01c80634e1273f4116100ad578063d539139311610071578063d539139314610329578063d547741f14610347578063e985e9c514610363578063f242432a14610393578063fe829bc3146103af57610120565b80634e1273f414610273578063731133e9146102a357806391d14854146102bf578063a217fddf146102ef578063a22cb4651461030d57610120565b80631f7fdffa116100f45780631f7fdffa146101d3578063248a9ca3146101ef5780632eb2c2d61461021f5780632f2ff15d1461023b57806336568abe1461025757610120565b8062fdd58e1461012557806301ffc9a7146101555780630e89341c146101855780631c681a42146101b5575b600080fd5b61013f600480360381019061013a9190611b41565b6103cd565b60405161014c9190611b90565b60405180910390f35b61016f600480360381019061016a9190611c03565b610427565b60405161017c9190611c4b565b60405180910390f35b61019f600480360381019061019a9190611c66565b610439565b6040516101ac9190611d23565b60405180910390f35b6101bd6104cd565b6040516101ca9190611b90565b60405180910390f35b6101ed60048036038101906101e89190611f42565b6104d2565b005b61020960048036038101906102049190612033565b61050f565b604051610216919061206f565b60405180910390f35b6102396004803603810190610234919061208a565b61052f565b005b61025560048036038101906102509190612159565b6105d7565b005b610271600480360381019061026c9190612159565b6105f9565b005b61028d6004803603810190610288919061225c565b610674565b60405161029a9190612392565b60405180910390f35b6102bd60048036038101906102b891906123b4565b610783565b005b6102d960048036038101906102d49190612159565b6107c0565b6040516102e69190611c4b565b60405180910390f35b6102f761082b565b604051610304919061206f565b60405180910390f35b61032760048036038101906103229190612463565b610832565b005b610331610848565b60405161033e919061206f565b60405180910390f35b610361600480360381019061035c9190612159565b61086c565b005b61037d600480360381019061037891906124a3565b61088e565b60405161038a9190611c4b565b60405180910390f35b6103ad60048036038101906103a891906124e3565b610922565b005b6103b76109ca565b6040516103c49190611b90565b60405180910390f35b600080600083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000610432826109cf565b9050919050565b606060028054610448906125a9565b80601f0160208091040260200160405190810160405280929190818152602001828054610474906125a9565b80156104c15780601f10610496576101008083540402835291602001916104c1565b820191906000526020600020905b8154815290600101906020018083116104a457829003601f168201915b50505050509050919050565b600181565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66104fc81610a49565b61050885858585610a5d565b5050505050565b600060036000838152602001908152602001600020600101549050919050565b6000610539610ae3565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415801561057e575061057c868261088e565b155b156105c25780866040517fe237d9220000000000000000000000000000000000000000000000000000000081526004016105b99291906125e9565b60405180910390fd5b6105cf8686868686610aeb565b505050505050565b6105e08261050f565b6105e981610a49565b6105f38383610be3565b50505050565b610601610ae3565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610665576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61066f8282610cd5565b505050565b606081518351146106c057815183516040517f5b0599910000000000000000000000000000000000000000000000000000000081526004016106b7929190612612565b60405180910390fd5b6000835167ffffffffffffffff8111156106dd576106dc611d4a565b5b60405190808252806020026020018201604052801561070b5781602001602082028036833780820191505090505b50905060005b8451811015610778576107486107308287610dc890919063ffffffff16565b6107438387610ddc90919063ffffffff16565b6103cd565b82828151811061075b5761075a61263b565b5b6020026020010181815250508061077190612699565b9050610711565b508091505092915050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66107ad81610a49565b6107b985858585610df0565b5050505050565b60006003600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000801b81565b61084461083d610ae3565b8383610e89565b5050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6108758261050f565b61087e81610a49565b6108888383610cd5565b50505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600061092c610ae3565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614158015610971575061096f868261088e565b155b156109b55780866040517fe237d9220000000000000000000000000000000000000000000000000000000081526004016109ac9291906125e9565b60405180910390fd5b6109c28686868686610ff9565b505050505050565b600081565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610a425750610a4182611104565b5b9050919050565b610a5a81610a55610ae3565b6111e6565b50565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610acf5760006040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610ac691906126e1565b60405180910390fd5b610add600085858585611237565b50505050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610b5d5760006040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610b5491906126e1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610bcf5760006040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610bc691906126e1565b60405180910390fd5b610bdc8585858585611237565b5050505050565b6000610bef83836107c0565b610cca5760016003600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610c67610ae3565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610ccf565b600090505b92915050565b6000610ce183836107c0565b15610dbd5760006003600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610d5a610ae3565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050610dc2565b600090505b92915050565b600060208202602084010151905092915050565b600060208202602084010151905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610e625760006040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610e5991906126e1565b60405180910390fd5b600080610e6f85856112e9565b91509150610e81600087848487611237565b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610efb5760006040517fced3e100000000000000000000000000000000000000000000000000000000008152600401610ef291906126e1565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610fec9190611c4b565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361106b5760006040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161106291906126e1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036110dd5760006040517f01a835140000000000000000000000000000000000000000000000000000000081526004016110d491906126e1565b60405180910390fd5b6000806110ea85856112e9565b915091506110fb8787848487611237565b50505050505050565b60007fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806111cf57507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806111df57506111de82611319565b5b9050919050565b6111f082826107c0565b6112335780826040517fe2517d3f00000000000000000000000000000000000000000000000000000000815260040161122a9291906126fc565b60405180910390fd5b5050565b61124385858585611383565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146112e2576000611281610ae3565b905060018451036112d15760006112a2600086610ddc90919063ffffffff16565b905060006112ba600086610ddc90919063ffffffff16565b90506112ca838989858589611731565b50506112e0565b6112df8187878787876118e5565b5b505b5050505050565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b80518251146113cd57815181516040517f5b0599910000000000000000000000000000000000000000000000000000000081526004016113c4929190612612565b60405180910390fd5b60006113d7610ae3565b905060005b83518110156115ec5760006113fa8286610ddc90919063ffffffff16565b905060006114118386610ddc90919063ffffffff16565b9050600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff161461153e57600080600084815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156114e657888183856040517f03dee4c50000000000000000000000000000000000000000000000000000000081526004016114dd9493929190612725565b60405180910390fd5b81810360008085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16146115d9578060008084815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546115d1919061276a565b925050819055505b5050806115e590612699565b90506113dc565b5060018351036116ab57600061160c600085610ddc90919063ffffffff16565b90506000611624600085610ddc90919063ffffffff16565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62858560405161169c929190612612565b60405180910390a4505061172a565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb868660405161172192919061279e565b60405180910390a45b5050505050565b60008473ffffffffffffffffffffffffffffffffffffffff163b11156118dd578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b815260040161179295949392919061282a565b6020604051808303816000875af19250505080156117ce57506040513d601f19601f820116820180604052508101906117cb9190612899565b60015b611852573d80600081146117fe576040519150601f19603f3d011682016040523d82523d6000602084013e611803565b606091505b50600081510361184a57846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161184191906126e1565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146118db57846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016118d291906126e1565b60405180910390fd5b505b505050505050565b60008473ffffffffffffffffffffffffffffffffffffffff163b1115611a91578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b81526004016119469594939291906128c6565b6020604051808303816000875af192505050801561198257506040513d601f19601f8201168201806040525081019061197f9190612899565b60015b611a06573d80600081146119b2576040519150601f19603f3d011682016040523d82523d6000602084013e6119b7565b606091505b5060008151036119fe57846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016119f591906126e1565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611a8f57846040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401611a8691906126e1565b60405180910390fd5b505b505050505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611ad882611aad565b9050919050565b611ae881611acd565b8114611af357600080fd5b50565b600081359050611b0581611adf565b92915050565b6000819050919050565b611b1e81611b0b565b8114611b2957600080fd5b50565b600081359050611b3b81611b15565b92915050565b60008060408385031215611b5857611b57611aa3565b5b6000611b6685828601611af6565b9250506020611b7785828601611b2c565b9150509250929050565b611b8a81611b0b565b82525050565b6000602082019050611ba56000830184611b81565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611be081611bab565b8114611beb57600080fd5b50565b600081359050611bfd81611bd7565b92915050565b600060208284031215611c1957611c18611aa3565b5b6000611c2784828501611bee565b91505092915050565b60008115159050919050565b611c4581611c30565b82525050565b6000602082019050611c606000830184611c3c565b92915050565b600060208284031215611c7c57611c7b611aa3565b5b6000611c8a84828501611b2c565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611ccd578082015181840152602081019050611cb2565b60008484015250505050565b6000601f19601f8301169050919050565b6000611cf582611c93565b611cff8185611c9e565b9350611d0f818560208601611caf565b611d1881611cd9565b840191505092915050565b60006020820190508181036000830152611d3d8184611cea565b905092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611d8282611cd9565b810181811067ffffffffffffffff82111715611da157611da0611d4a565b5b80604052505050565b6000611db4611a99565b9050611dc08282611d79565b919050565b600067ffffffffffffffff821115611de057611ddf611d4a565b5b602082029050602081019050919050565b600080fd5b6000611e09611e0484611dc5565b611daa565b90508083825260208201905060208402830185811115611e2c57611e2b611df1565b5b835b81811015611e555780611e418882611b2c565b845260208401935050602081019050611e2e565b5050509392505050565b600082601f830112611e7457611e73611d45565b5b8135611e84848260208601611df6565b91505092915050565b600080fd5b600067ffffffffffffffff821115611ead57611eac611d4a565b5b611eb682611cd9565b9050602081019050919050565b82818337600083830152505050565b6000611ee5611ee084611e92565b611daa565b905082815260208101848484011115611f0157611f00611e8d565b5b611f0c848285611ec3565b509392505050565b600082601f830112611f2957611f28611d45565b5b8135611f39848260208601611ed2565b91505092915050565b60008060008060808587031215611f5c57611f5b611aa3565b5b6000611f6a87828801611af6565b945050602085013567ffffffffffffffff811115611f8b57611f8a611aa8565b5b611f9787828801611e5f565b935050604085013567ffffffffffffffff811115611fb857611fb7611aa8565b5b611fc487828801611e5f565b925050606085013567ffffffffffffffff811115611fe557611fe4611aa8565b5b611ff187828801611f14565b91505092959194509250565b6000819050919050565b61201081611ffd565b811461201b57600080fd5b50565b60008135905061202d81612007565b92915050565b60006020828403121561204957612048611aa3565b5b60006120578482850161201e565b91505092915050565b61206981611ffd565b82525050565b60006020820190506120846000830184612060565b92915050565b600080600080600060a086880312156120a6576120a5611aa3565b5b60006120b488828901611af6565b95505060206120c588828901611af6565b945050604086013567ffffffffffffffff8111156120e6576120e5611aa8565b5b6120f288828901611e5f565b935050606086013567ffffffffffffffff81111561211357612112611aa8565b5b61211f88828901611e5f565b925050608086013567ffffffffffffffff8111156121405761213f611aa8565b5b61214c88828901611f14565b9150509295509295909350565b600080604083850312156121705761216f611aa3565b5b600061217e8582860161201e565b925050602061218f85828601611af6565b9150509250929050565b600067ffffffffffffffff8211156121b4576121b3611d4a565b5b602082029050602081019050919050565b60006121d86121d384612199565b611daa565b905080838252602082019050602084028301858111156121fb576121fa611df1565b5b835b8181101561222457806122108882611af6565b8452602084019350506020810190506121fd565b5050509392505050565b600082601f83011261224357612242611d45565b5b81356122538482602086016121c5565b91505092915050565b6000806040838503121561227357612272611aa3565b5b600083013567ffffffffffffffff81111561229157612290611aa8565b5b61229d8582860161222e565b925050602083013567ffffffffffffffff8111156122be576122bd611aa8565b5b6122ca85828601611e5f565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61230981611b0b565b82525050565b600061231b8383612300565b60208301905092915050565b6000602082019050919050565b600061233f826122d4565b61234981856122df565b9350612354836122f0565b8060005b8381101561238557815161236c888261230f565b975061237783612327565b925050600181019050612358565b5085935050505092915050565b600060208201905081810360008301526123ac8184612334565b905092915050565b600080600080608085870312156123ce576123cd611aa3565b5b60006123dc87828801611af6565b94505060206123ed87828801611b2c565b93505060406123fe87828801611b2c565b925050606085013567ffffffffffffffff81111561241f5761241e611aa8565b5b61242b87828801611f14565b91505092959194509250565b61244081611c30565b811461244b57600080fd5b50565b60008135905061245d81612437565b92915050565b6000806040838503121561247a57612479611aa3565b5b600061248885828601611af6565b92505060206124998582860161244e565b9150509250929050565b600080604083850312156124ba576124b9611aa3565b5b60006124c885828601611af6565b92505060206124d985828601611af6565b9150509250929050565b600080600080600060a086880312156124ff576124fe611aa3565b5b600061250d88828901611af6565b955050602061251e88828901611af6565b945050604061252f88828901611b2c565b935050606061254088828901611b2c565b925050608086013567ffffffffffffffff81111561256157612560611aa8565b5b61256d88828901611f14565b9150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806125c157607f821691505b6020821081036125d4576125d361257a565b5b50919050565b6125e381611acd565b82525050565b60006040820190506125fe60008301856125da565b61260b60208301846125da565b9392505050565b60006040820190506126276000830185611b81565b6126346020830184611b81565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006126a482611b0b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036126d6576126d561266a565b5b600182019050919050565b60006020820190506126f660008301846125da565b92915050565b600060408201905061271160008301856125da565b61271e6020830184612060565b9392505050565b600060808201905061273a60008301876125da565b6127476020830186611b81565b6127546040830185611b81565b6127616060830184611b81565b95945050505050565b600061277582611b0b565b915061278083611b0b565b92508282019050808211156127985761279761266a565b5b92915050565b600060408201905081810360008301526127b88185612334565b905081810360208301526127cc8184612334565b90509392505050565b600081519050919050565b600082825260208201905092915050565b60006127fc826127d5565b61280681856127e0565b9350612816818560208601611caf565b61281f81611cd9565b840191505092915050565b600060a08201905061283f60008301886125da565b61284c60208301876125da565b6128596040830186611b81565b6128666060830185611b81565b818103608083015261287881846127f1565b90509695505050505050565b60008151905061289381611bd7565b92915050565b6000602082840312156128af576128ae611aa3565b5b60006128bd84828501612884565b91505092915050565b600060a0820190506128db60008301886125da565b6128e860208301876125da565b81810360408301526128fa8186612334565b9050818103606083015261290e8185612334565b9050818103608083015261292281846127f1565b9050969550505050505056fea2646970667358221220f21da37b672c21c72a7d7fb6ca7e1bc5ddc41e192acc589beb0467c7e3393c3664736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2FBC CODESIZE SUB DUP1 PUSH3 0x2FBC DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x2A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH3 0x58 DUP2 PUSH3 0xAA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x6E PUSH1 0x0 DUP1 SHL DUP4 PUSH3 0xBF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0xA1 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP3 PUSH3 0xBF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP PUSH3 0x648 JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH3 0xBB SWAP2 SWAP1 PUSH3 0x561 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xD3 DUP4 DUP4 PUSH3 0x1C3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1B8 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x154 PUSH3 0x22E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH3 0x1BD JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x268 DUP3 PUSH3 0x23B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x27A DUP2 PUSH3 0x25B JUMP JUMPDEST DUP2 EQ PUSH3 0x286 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x29A DUP2 PUSH3 0x26F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x2BA JUMPI PUSH3 0x2B9 PUSH3 0x236 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2CA DUP6 DUP3 DUP7 ADD PUSH3 0x289 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x2DD DUP6 DUP3 DUP7 ADD PUSH3 0x289 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x369 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x37F JUMPI PUSH3 0x37E PUSH3 0x321 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x3E9 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x3AA JUMP JUMPDEST PUSH3 0x3F5 DUP7 DUP4 PUSH3 0x3AA JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x442 PUSH3 0x43C PUSH3 0x436 DUP5 PUSH3 0x40D JUMP JUMPDEST PUSH3 0x417 JUMP JUMPDEST PUSH3 0x40D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x45E DUP4 PUSH3 0x421 JUMP JUMPDEST PUSH3 0x476 PUSH3 0x46D DUP3 PUSH3 0x449 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x3B7 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x48D PUSH3 0x47E JUMP JUMPDEST PUSH3 0x49A DUP2 DUP5 DUP5 PUSH3 0x453 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x4C2 JUMPI PUSH3 0x4B6 PUSH1 0x0 DUP3 PUSH3 0x483 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x4A0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x511 JUMPI PUSH3 0x4DB DUP2 PUSH3 0x385 JUMP JUMPDEST PUSH3 0x4E6 DUP5 PUSH3 0x39A JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x4F6 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x50E PUSH3 0x505 DUP6 PUSH3 0x39A JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x49F JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x536 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x516 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x551 DUP4 DUP4 PUSH3 0x523 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x56C DUP3 PUSH3 0x2E7 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x588 JUMPI PUSH3 0x587 PUSH3 0x2F2 JUMP JUMPDEST JUMPDEST PUSH3 0x594 DUP3 SLOAD PUSH3 0x350 JUMP JUMPDEST PUSH3 0x5A1 DUP3 DUP3 DUP6 PUSH3 0x4C6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x5D9 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x5C4 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x5D0 DUP6 DUP3 PUSH3 0x543 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x640 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x5E9 DUP7 PUSH3 0x385 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x613 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x5EC JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x633 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x62F PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x523 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2964 DUP1 PUSH3 0x658 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x120 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD5391393 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x393 JUMPI DUP1 PUSH4 0xFE829BC3 EQ PUSH2 0x3AF JUMPI PUSH2 0x120 JUMP JUMPDEST DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0x731133E9 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x30D JUMPI PUSH2 0x120 JUMP JUMPDEST DUP1 PUSH4 0x1F7FDFFA GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x1F7FDFFA EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x257 JUMPI PUSH2 0x120 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x1C681A42 EQ PUSH2 0x1B5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x1B41 JUMP JUMPDEST PUSH2 0x3CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C SWAP2 SWAP1 PUSH2 0x1B90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16A SWAP2 SWAP1 PUSH2 0x1C03 JUMP JUMPDEST PUSH2 0x427 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17C SWAP2 SWAP1 PUSH2 0x1C4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19A SWAP2 SWAP1 PUSH2 0x1C66 JUMP JUMPDEST PUSH2 0x439 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0x1D23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BD PUSH2 0x4CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x1B90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x1F42 JUMP JUMPDEST PUSH2 0x4D2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x2033 JUMP JUMPDEST PUSH2 0x50F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x206F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x239 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x208A JUMP JUMPDEST PUSH2 0x52F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x255 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x2159 JUMP JUMPDEST PUSH2 0x5D7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x271 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26C SWAP2 SWAP1 PUSH2 0x2159 JUMP JUMPDEST PUSH2 0x5F9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x225C JUMP JUMPDEST PUSH2 0x674 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x2392 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x23B4 JUMP JUMPDEST PUSH2 0x783 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0x2159 JUMP JUMPDEST PUSH2 0x7C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x1C4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F7 PUSH2 0x82B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x304 SWAP2 SWAP1 PUSH2 0x206F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x327 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x322 SWAP2 SWAP1 PUSH2 0x2463 JUMP JUMPDEST PUSH2 0x832 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x331 PUSH2 0x848 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33E SWAP2 SWAP1 PUSH2 0x206F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x361 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35C SWAP2 SWAP1 PUSH2 0x2159 JUMP JUMPDEST PUSH2 0x86C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x37D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x378 SWAP2 SWAP1 PUSH2 0x24A3 JUMP JUMPDEST PUSH2 0x88E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38A SWAP2 SWAP1 PUSH2 0x1C4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A8 SWAP2 SWAP1 PUSH2 0x24E3 JUMP JUMPDEST PUSH2 0x922 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B7 PUSH2 0x9CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C4 SWAP2 SWAP1 PUSH2 0x1B90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x432 DUP3 PUSH2 0x9CF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x448 SWAP1 PUSH2 0x25A9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x474 SWAP1 PUSH2 0x25A9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4C1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x496 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4C1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4A4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x4FC DUP2 PUSH2 0xA49 JUMP JUMPDEST PUSH2 0x508 DUP6 DUP6 DUP6 DUP6 PUSH2 0xA5D JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x539 PUSH2 0xAE3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x57E JUMPI POP PUSH2 0x57C DUP7 DUP3 PUSH2 0x88E JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x5C2 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B9 SWAP3 SWAP2 SWAP1 PUSH2 0x25E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5CF DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xAEB JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5E0 DUP3 PUSH2 0x50F JUMP JUMPDEST PUSH2 0x5E9 DUP2 PUSH2 0xA49 JUMP JUMPDEST PUSH2 0x5F3 DUP4 DUP4 PUSH2 0xBE3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x601 PUSH2 0xAE3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x665 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x66F DUP3 DUP3 PUSH2 0xCD5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x6C0 JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B7 SWAP3 SWAP2 SWAP1 PUSH2 0x2612 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6DD JUMPI PUSH2 0x6DC PUSH2 0x1D4A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x70B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x778 JUMPI PUSH2 0x748 PUSH2 0x730 DUP3 DUP8 PUSH2 0xDC8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x743 DUP4 DUP8 PUSH2 0xDDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x3CD JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x75B JUMPI PUSH2 0x75A PUSH2 0x263B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x771 SWAP1 PUSH2 0x2699 JUMP JUMPDEST SWAP1 POP PUSH2 0x711 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x7AD DUP2 PUSH2 0xA49 JUMP JUMPDEST PUSH2 0x7B9 DUP6 DUP6 DUP6 DUP6 PUSH2 0xDF0 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH2 0x844 PUSH2 0x83D PUSH2 0xAE3 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xE89 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x875 DUP3 PUSH2 0x50F JUMP JUMPDEST PUSH2 0x87E DUP2 PUSH2 0xA49 JUMP JUMPDEST PUSH2 0x888 DUP4 DUP4 PUSH2 0xCD5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x92C PUSH2 0xAE3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x971 JUMPI POP PUSH2 0x96F DUP7 DUP3 PUSH2 0x88E JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x9B5 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9AC SWAP3 SWAP2 SWAP1 PUSH2 0x25E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9C2 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xFF9 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xA42 JUMPI POP PUSH2 0xA41 DUP3 PUSH2 0x1104 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA5A DUP2 PUSH2 0xA55 PUSH2 0xAE3 JUMP JUMPDEST PUSH2 0x11E6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xACF JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC6 SWAP2 SWAP1 PUSH2 0x26E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xADD PUSH1 0x0 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1237 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB5D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB54 SWAP2 SWAP1 PUSH2 0x26E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBCF JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC6 SWAP2 SWAP1 PUSH2 0x26E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBDC DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1237 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBEF DUP4 DUP4 PUSH2 0x7C0 JUMP JUMPDEST PUSH2 0xCCA JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xC67 PUSH2 0xAE3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xCCF JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCE1 DUP4 DUP4 PUSH2 0x7C0 JUMP JUMPDEST ISZERO PUSH2 0xDBD JUMPI PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xD5A PUSH2 0xAE3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xDC2 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE62 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE59 SWAP2 SWAP1 PUSH2 0x26E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE6F DUP6 DUP6 PUSH2 0x12E9 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xE81 PUSH1 0x0 DUP8 DUP5 DUP5 DUP8 PUSH2 0x1237 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEFB JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xCED3E10000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF2 SWAP2 SWAP1 PUSH2 0x26E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFEC SWAP2 SWAP1 PUSH2 0x1C4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x106B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1062 SWAP2 SWAP1 PUSH2 0x26E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10DD JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D4 SWAP2 SWAP1 PUSH2 0x26E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x10EA DUP6 DUP6 PUSH2 0x12E9 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x10FB DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0x1237 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x11CF JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x11DF JUMPI POP PUSH2 0x11DE DUP3 PUSH2 0x1319 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11F0 DUP3 DUP3 PUSH2 0x7C0 JUMP JUMPDEST PUSH2 0x1233 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x122A SWAP3 SWAP2 SWAP1 PUSH2 0x26FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1243 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1383 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12E2 JUMPI PUSH1 0x0 PUSH2 0x1281 PUSH2 0xAE3 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP5 MLOAD SUB PUSH2 0x12D1 JUMPI PUSH1 0x0 PUSH2 0x12A2 PUSH1 0x0 DUP7 PUSH2 0xDDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x12BA PUSH1 0x0 DUP7 PUSH2 0xDDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x12CA DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x1731 JUMP JUMPDEST POP POP PUSH2 0x12E0 JUMP JUMPDEST PUSH2 0x12DF DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x18E5 JUMP JUMPDEST JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH1 0x1 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x13CD JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13C4 SWAP3 SWAP2 SWAP1 PUSH2 0x2612 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x13D7 PUSH2 0xAE3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x15EC JUMPI PUSH1 0x0 PUSH2 0x13FA DUP3 DUP7 PUSH2 0xDDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1411 DUP4 DUP7 PUSH2 0xDDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x153E JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x14E6 JUMPI DUP9 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x3DEE4C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14DD SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2725 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x15D9 JUMPI DUP1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x15D1 SWAP2 SWAP1 PUSH2 0x276A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 PUSH2 0x15E5 SWAP1 PUSH2 0x2699 JUMP JUMPDEST SWAP1 POP PUSH2 0x13DC JUMP JUMPDEST POP PUSH1 0x1 DUP4 MLOAD SUB PUSH2 0x16AB JUMPI PUSH1 0x0 PUSH2 0x160C PUSH1 0x0 DUP6 PUSH2 0xDDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1624 PUSH1 0x0 DUP6 PUSH2 0xDDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x169C SWAP3 SWAP2 SWAP1 PUSH2 0x2612 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x172A JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1721 SWAP3 SWAP2 SWAP1 PUSH2 0x279E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x18DD JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1792 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x282A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x17CE JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17CB SWAP2 SWAP1 PUSH2 0x2899 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1852 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x17FE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1803 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x184A JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1841 SWAP2 SWAP1 PUSH2 0x26E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x18DB JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18D2 SWAP2 SWAP1 PUSH2 0x26E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1A91 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1946 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x28C6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1982 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x197F SWAP2 SWAP1 PUSH2 0x2899 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1A06 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x19B2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x19B7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x19FE JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19F5 SWAP2 SWAP1 PUSH2 0x26E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1A8F JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A86 SWAP2 SWAP1 PUSH2 0x26E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AD8 DUP3 PUSH2 0x1AAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AE8 DUP2 PUSH2 0x1ACD JUMP JUMPDEST DUP2 EQ PUSH2 0x1AF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B05 DUP2 PUSH2 0x1ADF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B1E DUP2 PUSH2 0x1B0B JUMP JUMPDEST DUP2 EQ PUSH2 0x1B29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B3B DUP2 PUSH2 0x1B15 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B58 JUMPI PUSH2 0x1B57 PUSH2 0x1AA3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B66 DUP6 DUP3 DUP7 ADD PUSH2 0x1AF6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B77 DUP6 DUP3 DUP7 ADD PUSH2 0x1B2C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B8A DUP2 PUSH2 0x1B0B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BA5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B81 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BE0 DUP2 PUSH2 0x1BAB JUMP JUMPDEST DUP2 EQ PUSH2 0x1BEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BFD DUP2 PUSH2 0x1BD7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C19 JUMPI PUSH2 0x1C18 PUSH2 0x1AA3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C27 DUP5 DUP3 DUP6 ADD PUSH2 0x1BEE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C45 DUP2 PUSH2 0x1C30 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C60 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C3C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C7C JUMPI PUSH2 0x1C7B PUSH2 0x1AA3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C8A DUP5 DUP3 DUP6 ADD PUSH2 0x1B2C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1CCD JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1CB2 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CF5 DUP3 PUSH2 0x1C93 JUMP JUMPDEST PUSH2 0x1CFF DUP2 DUP6 PUSH2 0x1C9E JUMP JUMPDEST SWAP4 POP PUSH2 0x1D0F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CAF JUMP JUMPDEST PUSH2 0x1D18 DUP2 PUSH2 0x1CD9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D3D DUP2 DUP5 PUSH2 0x1CEA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1D82 DUP3 PUSH2 0x1CD9 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1DA1 JUMPI PUSH2 0x1DA0 PUSH2 0x1D4A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DB4 PUSH2 0x1A99 JUMP JUMPDEST SWAP1 POP PUSH2 0x1DC0 DUP3 DUP3 PUSH2 0x1D79 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1DE0 JUMPI PUSH2 0x1DDF PUSH2 0x1D4A JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1E09 PUSH2 0x1E04 DUP5 PUSH2 0x1DC5 JUMP JUMPDEST PUSH2 0x1DAA JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1E2C JUMPI PUSH2 0x1E2B PUSH2 0x1DF1 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1E55 JUMPI DUP1 PUSH2 0x1E41 DUP9 DUP3 PUSH2 0x1B2C JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1E2E JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1E74 JUMPI PUSH2 0x1E73 PUSH2 0x1D45 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1E84 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1DF6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1EAD JUMPI PUSH2 0x1EAC PUSH2 0x1D4A JUMP JUMPDEST JUMPDEST PUSH2 0x1EB6 DUP3 PUSH2 0x1CD9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EE5 PUSH2 0x1EE0 DUP5 PUSH2 0x1E92 JUMP JUMPDEST PUSH2 0x1DAA JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1F01 JUMPI PUSH2 0x1F00 PUSH2 0x1E8D JUMP JUMPDEST JUMPDEST PUSH2 0x1F0C DUP5 DUP3 DUP6 PUSH2 0x1EC3 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1F29 JUMPI PUSH2 0x1F28 PUSH2 0x1D45 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1F39 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1ED2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1F5C JUMPI PUSH2 0x1F5B PUSH2 0x1AA3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F6A DUP8 DUP3 DUP9 ADD PUSH2 0x1AF6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F8B JUMPI PUSH2 0x1F8A PUSH2 0x1AA8 JUMP JUMPDEST JUMPDEST PUSH2 0x1F97 DUP8 DUP3 DUP9 ADD PUSH2 0x1E5F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FB8 JUMPI PUSH2 0x1FB7 PUSH2 0x1AA8 JUMP JUMPDEST JUMPDEST PUSH2 0x1FC4 DUP8 DUP3 DUP9 ADD PUSH2 0x1E5F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FE5 JUMPI PUSH2 0x1FE4 PUSH2 0x1AA8 JUMP JUMPDEST JUMPDEST PUSH2 0x1FF1 DUP8 DUP3 DUP9 ADD PUSH2 0x1F14 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2010 DUP2 PUSH2 0x1FFD JUMP JUMPDEST DUP2 EQ PUSH2 0x201B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x202D DUP2 PUSH2 0x2007 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2049 JUMPI PUSH2 0x2048 PUSH2 0x1AA3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2057 DUP5 DUP3 DUP6 ADD PUSH2 0x201E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2069 DUP2 PUSH2 0x1FFD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2084 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2060 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x20A6 JUMPI PUSH2 0x20A5 PUSH2 0x1AA3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20B4 DUP9 DUP3 DUP10 ADD PUSH2 0x1AF6 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x20C5 DUP9 DUP3 DUP10 ADD PUSH2 0x1AF6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20E6 JUMPI PUSH2 0x20E5 PUSH2 0x1AA8 JUMP JUMPDEST JUMPDEST PUSH2 0x20F2 DUP9 DUP3 DUP10 ADD PUSH2 0x1E5F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2113 JUMPI PUSH2 0x2112 PUSH2 0x1AA8 JUMP JUMPDEST JUMPDEST PUSH2 0x211F DUP9 DUP3 DUP10 ADD PUSH2 0x1E5F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2140 JUMPI PUSH2 0x213F PUSH2 0x1AA8 JUMP JUMPDEST JUMPDEST PUSH2 0x214C DUP9 DUP3 DUP10 ADD PUSH2 0x1F14 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2170 JUMPI PUSH2 0x216F PUSH2 0x1AA3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x217E DUP6 DUP3 DUP7 ADD PUSH2 0x201E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x218F DUP6 DUP3 DUP7 ADD PUSH2 0x1AF6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x21B4 JUMPI PUSH2 0x21B3 PUSH2 0x1D4A JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21D8 PUSH2 0x21D3 DUP5 PUSH2 0x2199 JUMP JUMPDEST PUSH2 0x1DAA JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x21FB JUMPI PUSH2 0x21FA PUSH2 0x1DF1 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2224 JUMPI DUP1 PUSH2 0x2210 DUP9 DUP3 PUSH2 0x1AF6 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x21FD JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2243 JUMPI PUSH2 0x2242 PUSH2 0x1D45 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2253 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x21C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2273 JUMPI PUSH2 0x2272 PUSH2 0x1AA3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2291 JUMPI PUSH2 0x2290 PUSH2 0x1AA8 JUMP JUMPDEST JUMPDEST PUSH2 0x229D DUP6 DUP3 DUP7 ADD PUSH2 0x222E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22BE JUMPI PUSH2 0x22BD PUSH2 0x1AA8 JUMP JUMPDEST JUMPDEST PUSH2 0x22CA DUP6 DUP3 DUP7 ADD PUSH2 0x1E5F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2309 DUP2 PUSH2 0x1B0B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x231B DUP4 DUP4 PUSH2 0x2300 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x233F DUP3 PUSH2 0x22D4 JUMP JUMPDEST PUSH2 0x2349 DUP2 DUP6 PUSH2 0x22DF JUMP JUMPDEST SWAP4 POP PUSH2 0x2354 DUP4 PUSH2 0x22F0 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2385 JUMPI DUP2 MLOAD PUSH2 0x236C DUP9 DUP3 PUSH2 0x230F JUMP JUMPDEST SWAP8 POP PUSH2 0x2377 DUP4 PUSH2 0x2327 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2358 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23AC DUP2 DUP5 PUSH2 0x2334 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x23CE JUMPI PUSH2 0x23CD PUSH2 0x1AA3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23DC DUP8 DUP3 DUP9 ADD PUSH2 0x1AF6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x23ED DUP8 DUP3 DUP9 ADD PUSH2 0x1B2C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x23FE DUP8 DUP3 DUP9 ADD PUSH2 0x1B2C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x241F JUMPI PUSH2 0x241E PUSH2 0x1AA8 JUMP JUMPDEST JUMPDEST PUSH2 0x242B DUP8 DUP3 DUP9 ADD PUSH2 0x1F14 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x2440 DUP2 PUSH2 0x1C30 JUMP JUMPDEST DUP2 EQ PUSH2 0x244B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x245D DUP2 PUSH2 0x2437 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x247A JUMPI PUSH2 0x2479 PUSH2 0x1AA3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2488 DUP6 DUP3 DUP7 ADD PUSH2 0x1AF6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2499 DUP6 DUP3 DUP7 ADD PUSH2 0x244E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x24BA JUMPI PUSH2 0x24B9 PUSH2 0x1AA3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x24C8 DUP6 DUP3 DUP7 ADD PUSH2 0x1AF6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x24D9 DUP6 DUP3 DUP7 ADD PUSH2 0x1AF6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x24FF JUMPI PUSH2 0x24FE PUSH2 0x1AA3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x250D DUP9 DUP3 DUP10 ADD PUSH2 0x1AF6 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x251E DUP9 DUP3 DUP10 ADD PUSH2 0x1AF6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x252F DUP9 DUP3 DUP10 ADD PUSH2 0x1B2C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2540 DUP9 DUP3 DUP10 ADD PUSH2 0x1B2C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2561 JUMPI PUSH2 0x2560 PUSH2 0x1AA8 JUMP JUMPDEST JUMPDEST PUSH2 0x256D DUP9 DUP3 DUP10 ADD PUSH2 0x1F14 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x25C1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x25D4 JUMPI PUSH2 0x25D3 PUSH2 0x257A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25E3 DUP2 PUSH2 0x1ACD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x25FE PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x25DA JUMP JUMPDEST PUSH2 0x260B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x25DA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2627 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1B81 JUMP JUMPDEST PUSH2 0x2634 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B81 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x26A4 DUP3 PUSH2 0x1B0B JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x26D6 JUMPI PUSH2 0x26D5 PUSH2 0x266A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x26F6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x25DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2711 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x25DA JUMP JUMPDEST PUSH2 0x271E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2060 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x273A PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x25DA JUMP JUMPDEST PUSH2 0x2747 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1B81 JUMP JUMPDEST PUSH2 0x2754 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1B81 JUMP JUMPDEST PUSH2 0x2761 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1B81 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2775 DUP3 PUSH2 0x1B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x2780 DUP4 PUSH2 0x1B0B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2798 JUMPI PUSH2 0x2797 PUSH2 0x266A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x27B8 DUP2 DUP6 PUSH2 0x2334 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x27CC DUP2 DUP5 PUSH2 0x2334 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27FC DUP3 PUSH2 0x27D5 JUMP JUMPDEST PUSH2 0x2806 DUP2 DUP6 PUSH2 0x27E0 JUMP JUMPDEST SWAP4 POP PUSH2 0x2816 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CAF JUMP JUMPDEST PUSH2 0x281F DUP2 PUSH2 0x1CD9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x283F PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x25DA JUMP JUMPDEST PUSH2 0x284C PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x25DA JUMP JUMPDEST PUSH2 0x2859 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1B81 JUMP JUMPDEST PUSH2 0x2866 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1B81 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2878 DUP2 DUP5 PUSH2 0x27F1 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2893 DUP2 PUSH2 0x1BD7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28AF JUMPI PUSH2 0x28AE PUSH2 0x1AA3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28BD DUP5 DUP3 DUP6 ADD PUSH2 0x2884 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x28DB PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x25DA JUMP JUMPDEST PUSH2 0x28E8 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x25DA JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x28FA DUP2 DUP7 PUSH2 0x2334 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x290E DUP2 DUP6 PUSH2 0x2334 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2922 DUP2 DUP5 PUSH2 0x27F1 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE SAR LOG3 PUSH28 0x672C21C72A7D7FB6CA7E1BC5DDC41E192ACC589BEB0467C7E3393C36 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"177:1047:32:-:0;;;381:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1251:62:5;;;;;;;;;;;;1293:13;1301:4;1293:7;;;:13;;:::i;:::-;1251:62;453:44:32::1;2232:4:0;464:18:32::0;::::1;484:12;453:10;;;:44;;:::i;:::-;;507:31;350:24;531:6;507:10;;;:31;;:::i;:::-;;381:164:::0;;177:1047;;10282:86:5;10355:6;10348:4;:13;;;;;;:::i;:::-;;10282:86;:::o;6179:316:0:-;6256:4;6277:22;6285:4;6291:7;6277;;;:22;;:::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;;;:12;;:::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;2854:136::-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;656:96:16:-;709:7;735:10;728:17;;656:96;:::o;88:117:33:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:99::-;1410:6;1444:5;1438:12;1428:22;;1358:99;;;:::o;1463:180::-;1511:77;1508:1;1501:88;1608:4;1605:1;1598:15;1632:4;1629:1;1622:15;1649:180;1697:77;1694:1;1687:88;1794:4;1791:1;1784:15;1818:4;1815:1;1808:15;1835:320;1879:6;1916:1;1910:4;1906:12;1896:22;;1963:1;1957:4;1953:12;1984:18;1974:81;;2040:4;2032:6;2028:17;2018:27;;1974:81;2102:2;2094:6;2091:14;2071:18;2068:38;2065:84;;2121:18;;:::i;:::-;2065:84;1886:269;1835:320;;;:::o;2161:141::-;2210:4;2233:3;2225:11;;2256:3;2253:1;2246:14;2290:4;2287:1;2277:18;2269:26;;2161:141;;;:::o;2308:93::-;2345:6;2392:2;2387;2380:5;2376:14;2372:23;2362:33;;2308:93;;;:::o;2407:107::-;2451:8;2501:5;2495:4;2491:16;2470:37;;2407:107;;;;:::o;2520:393::-;2589:6;2639:1;2627:10;2623:18;2662:97;2692:66;2681:9;2662:97;:::i;:::-;2780:39;2810:8;2799:9;2780:39;:::i;:::-;2768:51;;2852:4;2848:9;2841:5;2837:21;2828:30;;2901:4;2891:8;2887:19;2880:5;2877:30;2867:40;;2596:317;;2520:393;;;;;:::o;2919:77::-;2956:7;2985:5;2974:16;;2919:77;;;:::o;3002:60::-;3030:3;3051:5;3044:12;;3002:60;;;:::o;3068:142::-;3118:9;3151:53;3169:34;3178:24;3196:5;3178:24;:::i;:::-;3169:34;:::i;:::-;3151:53;:::i;:::-;3138:66;;3068:142;;;:::o;3216:75::-;3259:3;3280:5;3273:12;;3216:75;;;:::o;3297:269::-;3407:39;3438:7;3407:39;:::i;:::-;3468:91;3517:41;3541:16;3517:41;:::i;:::-;3509:6;3502:4;3496:11;3468:91;:::i;:::-;3462:4;3455:105;3373:193;3297:269;;;:::o;3572:73::-;3617:3;3572:73;:::o;3651:189::-;3728:32;;:::i;:::-;3769:65;3827:6;3819;3813:4;3769:65;:::i;:::-;3704:136;3651:189;;:::o;3846:186::-;3906:120;3923:3;3916:5;3913:14;3906:120;;;3977:39;4014:1;4007:5;3977:39;:::i;:::-;3950:1;3943:5;3939:13;3930:22;;3906:120;;;3846:186;;:::o;4038:543::-;4139:2;4134:3;4131:11;4128:446;;;4173:38;4205:5;4173:38;:::i;:::-;4257:29;4275:10;4257:29;:::i;:::-;4247:8;4243:44;4440:2;4428:10;4425:18;4422:49;;;4461:8;4446:23;;4422:49;4484:80;4540:22;4558:3;4540:22;:::i;:::-;4530:8;4526:37;4513:11;4484:80;:::i;:::-;4143:431;;4128:446;4038:543;;;:::o;4587:117::-;4641:8;4691:5;4685:4;4681:16;4660:37;;4587:117;;;;:::o;4710:169::-;4754:6;4787:51;4835:1;4831:6;4823:5;4820:1;4816:13;4787:51;:::i;:::-;4783:56;4868:4;4862;4858:15;4848:25;;4761:118;4710:169;;;;:::o;4884:295::-;4960:4;5106:29;5131:3;5125:4;5106:29;:::i;:::-;5098:37;;5168:3;5165:1;5161:11;5155:4;5152:21;5144:29;;4884:295;;;;:::o;5184:1395::-;5301:37;5334:3;5301:37;:::i;:::-;5403:18;5395:6;5392:30;5389:56;;;5425:18;;:::i;:::-;5389:56;5469:38;5501:4;5495:11;5469:38;:::i;:::-;5554:67;5614:6;5606;5600:4;5554:67;:::i;:::-;5648:1;5672:4;5659:17;;5704:2;5696:6;5693:14;5721:1;5716:618;;;;6378:1;6395:6;6392:77;;;6444:9;6439:3;6435:19;6429:26;6420:35;;6392:77;6495:67;6555:6;6548:5;6495:67;:::i;:::-;6489:4;6482:81;6351:222;5686:887;;5716:618;5768:4;5764:9;5756:6;5752:22;5802:37;5834:4;5802:37;:::i;:::-;5861:1;5875:208;5889:7;5886:1;5883:14;5875:208;;;5968:9;5963:3;5959:19;5953:26;5945:6;5938:42;6019:1;6011:6;6007:14;5997:24;;6066:2;6055:9;6051:18;6038:31;;5912:4;5909:1;5905:12;5900:17;;5875:208;;;6111:6;6102:7;6099:19;6096:179;;;6169:9;6164:3;6160:19;6154:26;6212:48;6254:4;6246:6;6242:17;6231:9;6212:48;:::i;:::-;6204:6;6197:64;6119:156;6096:179;6321:1;6317;6309:6;6305:14;6301:22;6295:4;6288:36;5723:611;;;5686:887;;5276:1303;;;5184:1395;;:::o;177:1047:32:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@BARDAOTOKEN_6018":{"entryPoint":2506,"id":6018,"parameterSlots":0,"returnSlots":0},"@DEFAULT_ADMIN_ROLE_29":{"entryPoint":2091,"id":29,"parameterSlots":0,"returnSlots":0},"@MEMBER_6021":{"entryPoint":1229,"id":6021,"parameterSlots":0,"returnSlots":0},"@MINTER_ROLE_6026":{"entryPoint":2120,"id":6026,"parameterSlots":0,"returnSlots":0},"@_asSingletonArrays_1738":{"entryPoint":4841,"id":1738,"parameterSlots":2,"returnSlots":2},"@_checkRole_114":{"entryPoint":4582,"id":114,"parameterSlots":2,"returnSlots":0},"@_checkRole_93":{"entryPoint":2633,"id":93,"parameterSlots":1,"returnSlots":0},"@_doSafeBatchTransferAcceptanceCheck_1722":{"entryPoint":6373,"id":1722,"parameterSlots":6,"returnSlots":0},"@_doSafeTransferAcceptanceCheck_1652":{"entryPoint":5937,"id":1652,"parameterSlots":6,"returnSlots":0},"@_grantRole_256":{"entryPoint":3043,"id":256,"parameterSlots":2,"returnSlots":1},"@_mintBatch_1455":{"entryPoint":2653,"id":1455,"parameterSlots":4,"returnSlots":0},"@_mint_1414":{"entryPoint":3568,"id":1414,"parameterSlots":4,"returnSlots":0},"@_msgSender_3177":{"entryPoint":2787,"id":3177,"parameterSlots":0,"returnSlots":1},"@_revokeRole_294":{"entryPoint":3285,"id":294,"parameterSlots":2,"returnSlots":1},"@_safeBatchTransferFrom_1351":{"entryPoint":2795,"id":1351,"parameterSlots":5,"returnSlots":0},"@_safeTransferFrom_1296":{"entryPoint":4089,"id":1296,"parameterSlots":5,"returnSlots":0},"@_setApprovalForAll_1584":{"entryPoint":3721,"id":1584,"parameterSlots":3,"returnSlots":0},"@_updateWithAcceptanceCheck_1230":{"entryPoint":4663,"id":1230,"parameterSlots":5,"returnSlots":0},"@_update_1154":{"entryPoint":4995,"id":1154,"parameterSlots":4,"returnSlots":0},"@balanceOfBatch_878":{"entryPoint":1652,"id":878,"parameterSlots":2,"returnSlots":1},"@balanceOf_808":{"entryPoint":973,"id":808,"parameterSlots":2,"returnSlots":1},"@getRoleAdmin_128":{"entryPoint":1295,"id":128,"parameterSlots":1,"returnSlots":1},"@grantRole_147":{"entryPoint":1495,"id":147,"parameterSlots":2,"returnSlots":0},"@hasRole_80":{"entryPoint":1984,"id":80,"parameterSlots":2,"returnSlots":1},"@isApprovedForAll_911":{"entryPoint":2190,"id":911,"parameterSlots":2,"returnSlots":1},"@mintBatch_6093":{"entryPoint":1234,"id":6093,"parameterSlots":4,"returnSlots":0},"@mint_6069":{"entryPoint":1923,"id":6069,"parameterSlots":4,"returnSlots":0},"@renounceRole_189":{"entryPoint":1529,"id":189,"parameterSlots":2,"returnSlots":0},"@revokeRole_166":{"entryPoint":2156,"id":166,"parameterSlots":2,"returnSlots":0},"@safeBatchTransferFrom_1001":{"entryPoint":1327,"id":1001,"parameterSlots":5,"returnSlots":0},"@safeTransferFrom_955":{"entryPoint":2338,"id":955,"parameterSlots":5,"returnSlots":0},"@setApprovalForAll_894":{"entryPoint":2098,"id":894,"parameterSlots":2,"returnSlots":0},"@supportsInterface_4578":{"entryPoint":4889,"id":4578,"parameterSlots":1,"returnSlots":1},"@supportsInterface_6109":{"entryPoint":1063,"id":6109,"parameterSlots":1,"returnSlots":1},"@supportsInterface_62":{"entryPoint":2511,"id":62,"parameterSlots":1,"returnSlots":1},"@supportsInterface_780":{"entryPoint":4356,"id":780,"parameterSlots":1,"returnSlots":1},"@unsafeMemoryAccess_3151":{"entryPoint":3548,"id":3151,"parameterSlots":2,"returnSlots":1},"@unsafeMemoryAccess_3164":{"entryPoint":3528,"id":3164,"parameterSlots":2,"returnSlots":1},"@uri_791":{"entryPoint":1081,"id":791,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":8645,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":7670,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":7890,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":6902,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":8750,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":7775,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":9294,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":8222,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":7150,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":10372,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":7956,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":6956,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":9379,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr":{"entryPoint":8330,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr":{"entryPoint":9443,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr":{"entryPoint":8002,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":9315,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":6977,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr":{"entryPoint":9140,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":8796,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32":{"entryPoint":8243,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":8537,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":7171,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":10393,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":7270,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":8975,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":9690,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":9012,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":7228,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":8288,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":10225,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":7402,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":8960,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":7041,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":9953,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":9705,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":10438,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":10282,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed":{"entryPoint":9980,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":10021,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":9106,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":10142,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":7243,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":8303,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7459,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":7056,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":9746,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_memory":{"entryPoint":7594,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":6809,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":8601,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":7621,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":7826,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":8944,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":8916,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":10197,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":7315,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":8999,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":8927,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":10208,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":7326,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":10090,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":6861,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":7216,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":8189,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":7083,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":6829,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":6923,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":7875,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":7343,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":9641,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":7545,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":9881,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":9834,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":9594,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":9787,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":7498,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":7493,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":7665,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":7821,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":6824,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":6819,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":7385,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":6879,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":9271,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":8199,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":7127,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":6933,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:27440:33","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:33","statements":[{"nodeType":"YulAssignment","src":"57:19:33","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:33","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:33"},"nodeType":"YulFunctionCall","src":"67:9:33"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:33"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:33","type":""}],"src":"7:75:33"},{"body":{"nodeType":"YulBlock","src":"177:28:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:33"},"nodeType":"YulFunctionCall","src":"187:12:33"},"nodeType":"YulExpressionStatement","src":"187:12:33"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:33"},{"body":{"nodeType":"YulBlock","src":"300:28:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:33"},"nodeType":"YulFunctionCall","src":"310:12:33"},"nodeType":"YulExpressionStatement","src":"310:12:33"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:33"},{"body":{"nodeType":"YulBlock","src":"379:81:33","statements":[{"nodeType":"YulAssignment","src":"389:65:33","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:33","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:33"},"nodeType":"YulFunctionCall","src":"400:54:33"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:33"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:33","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:33","type":""}],"src":"334:126:33"},{"body":{"nodeType":"YulBlock","src":"511:51:33","statements":[{"nodeType":"YulAssignment","src":"521:35:33","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:33"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:33"},"nodeType":"YulFunctionCall","src":"532:24:33"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:33"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:33","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:33","type":""}],"src":"466:96:33"},{"body":{"nodeType":"YulBlock","src":"611:79:33","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:33"},"nodeType":"YulFunctionCall","src":"670:12:33"},"nodeType":"YulExpressionStatement","src":"670:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:33"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:33"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:33"},"nodeType":"YulFunctionCall","src":"641:24:33"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:33"},"nodeType":"YulFunctionCall","src":"631:35:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:33"},"nodeType":"YulFunctionCall","src":"624:43:33"},"nodeType":"YulIf","src":"621:63:33"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:33","type":""}],"src":"568:122:33"},{"body":{"nodeType":"YulBlock","src":"748:87:33","statements":[{"nodeType":"YulAssignment","src":"758:29:33","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"780:6:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"767:12:33"},"nodeType":"YulFunctionCall","src":"767:20:33"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"758:5:33"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"823:5:33"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"796:26:33"},"nodeType":"YulFunctionCall","src":"796:33:33"},"nodeType":"YulExpressionStatement","src":"796:33:33"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"726:6:33","type":""},{"name":"end","nodeType":"YulTypedName","src":"734:3:33","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"742:5:33","type":""}],"src":"696:139:33"},{"body":{"nodeType":"YulBlock","src":"886:32:33","statements":[{"nodeType":"YulAssignment","src":"896:16:33","value":{"name":"value","nodeType":"YulIdentifier","src":"907:5:33"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"896:7:33"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"868:5:33","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"878:7:33","type":""}],"src":"841:77:33"},{"body":{"nodeType":"YulBlock","src":"967:79:33","statements":[{"body":{"nodeType":"YulBlock","src":"1024:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1033:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1036:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1026:6:33"},"nodeType":"YulFunctionCall","src":"1026:12:33"},"nodeType":"YulExpressionStatement","src":"1026:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"990:5:33"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1015:5:33"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"997:17:33"},"nodeType":"YulFunctionCall","src":"997:24:33"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"987:2:33"},"nodeType":"YulFunctionCall","src":"987:35:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"980:6:33"},"nodeType":"YulFunctionCall","src":"980:43:33"},"nodeType":"YulIf","src":"977:63:33"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"960:5:33","type":""}],"src":"924:122:33"},{"body":{"nodeType":"YulBlock","src":"1104:87:33","statements":[{"nodeType":"YulAssignment","src":"1114:29:33","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1136:6:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1123:12:33"},"nodeType":"YulFunctionCall","src":"1123:20:33"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1114:5:33"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1179:5:33"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1152:26:33"},"nodeType":"YulFunctionCall","src":"1152:33:33"},"nodeType":"YulExpressionStatement","src":"1152:33:33"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1082:6:33","type":""},{"name":"end","nodeType":"YulTypedName","src":"1090:3:33","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1098:5:33","type":""}],"src":"1052:139:33"},{"body":{"nodeType":"YulBlock","src":"1280:391:33","statements":[{"body":{"nodeType":"YulBlock","src":"1326:83:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1328:77:33"},"nodeType":"YulFunctionCall","src":"1328:79:33"},"nodeType":"YulExpressionStatement","src":"1328:79:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1301:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"1310:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1297:3:33"},"nodeType":"YulFunctionCall","src":"1297:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"1322:2:33","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1293:3:33"},"nodeType":"YulFunctionCall","src":"1293:32:33"},"nodeType":"YulIf","src":"1290:119:33"},{"nodeType":"YulBlock","src":"1419:117:33","statements":[{"nodeType":"YulVariableDeclaration","src":"1434:15:33","value":{"kind":"number","nodeType":"YulLiteral","src":"1448:1:33","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1438:6:33","type":""}]},{"nodeType":"YulAssignment","src":"1463:63:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1498:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"1509:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1494:3:33"},"nodeType":"YulFunctionCall","src":"1494:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1518:7:33"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1473:20:33"},"nodeType":"YulFunctionCall","src":"1473:53:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1463:6:33"}]}]},{"nodeType":"YulBlock","src":"1546:118:33","statements":[{"nodeType":"YulVariableDeclaration","src":"1561:16:33","value":{"kind":"number","nodeType":"YulLiteral","src":"1575:2:33","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1565:6:33","type":""}]},{"nodeType":"YulAssignment","src":"1591:63:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1626:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"1637:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1622:3:33"},"nodeType":"YulFunctionCall","src":"1622:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1646:7:33"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1601:20:33"},"nodeType":"YulFunctionCall","src":"1601:53:33"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1591:6:33"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1242:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1253:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1265:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1273:6:33","type":""}],"src":"1197:474:33"},{"body":{"nodeType":"YulBlock","src":"1742:53:33","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1759:3:33"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1782:5:33"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1764:17:33"},"nodeType":"YulFunctionCall","src":"1764:24:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1752:6:33"},"nodeType":"YulFunctionCall","src":"1752:37:33"},"nodeType":"YulExpressionStatement","src":"1752:37:33"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1730:5:33","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1737:3:33","type":""}],"src":"1677:118:33"},{"body":{"nodeType":"YulBlock","src":"1899:124:33","statements":[{"nodeType":"YulAssignment","src":"1909:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1921:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"1932:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1917:3:33"},"nodeType":"YulFunctionCall","src":"1917:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1909:4:33"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1989:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2002:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"2013:1:33","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1998:3:33"},"nodeType":"YulFunctionCall","src":"1998:17:33"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"1945:43:33"},"nodeType":"YulFunctionCall","src":"1945:71:33"},"nodeType":"YulExpressionStatement","src":"1945:71:33"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1871:9:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1883:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1894:4:33","type":""}],"src":"1801:222:33"},{"body":{"nodeType":"YulBlock","src":"2073:105:33","statements":[{"nodeType":"YulAssignment","src":"2083:89:33","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2098:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"2105:66:33","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2094:3:33"},"nodeType":"YulFunctionCall","src":"2094:78:33"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2083:7:33"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2055:5:33","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2065:7:33","type":""}],"src":"2029:149:33"},{"body":{"nodeType":"YulBlock","src":"2226:78:33","statements":[{"body":{"nodeType":"YulBlock","src":"2282:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2291:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2294:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2284:6:33"},"nodeType":"YulFunctionCall","src":"2284:12:33"},"nodeType":"YulExpressionStatement","src":"2284:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2249:5:33"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2273:5:33"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"2256:16:33"},"nodeType":"YulFunctionCall","src":"2256:23:33"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2246:2:33"},"nodeType":"YulFunctionCall","src":"2246:34:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2239:6:33"},"nodeType":"YulFunctionCall","src":"2239:42:33"},"nodeType":"YulIf","src":"2236:62:33"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2219:5:33","type":""}],"src":"2184:120:33"},{"body":{"nodeType":"YulBlock","src":"2361:86:33","statements":[{"nodeType":"YulAssignment","src":"2371:29:33","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2393:6:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2380:12:33"},"nodeType":"YulFunctionCall","src":"2380:20:33"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2371:5:33"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2435:5:33"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"2409:25:33"},"nodeType":"YulFunctionCall","src":"2409:32:33"},"nodeType":"YulExpressionStatement","src":"2409:32:33"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2339:6:33","type":""},{"name":"end","nodeType":"YulTypedName","src":"2347:3:33","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2355:5:33","type":""}],"src":"2310:137:33"},{"body":{"nodeType":"YulBlock","src":"2518:262:33","statements":[{"body":{"nodeType":"YulBlock","src":"2564:83:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2566:77:33"},"nodeType":"YulFunctionCall","src":"2566:79:33"},"nodeType":"YulExpressionStatement","src":"2566:79:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2539:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"2548:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2535:3:33"},"nodeType":"YulFunctionCall","src":"2535:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"2560:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2531:3:33"},"nodeType":"YulFunctionCall","src":"2531:32:33"},"nodeType":"YulIf","src":"2528:119:33"},{"nodeType":"YulBlock","src":"2657:116:33","statements":[{"nodeType":"YulVariableDeclaration","src":"2672:15:33","value":{"kind":"number","nodeType":"YulLiteral","src":"2686:1:33","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2676:6:33","type":""}]},{"nodeType":"YulAssignment","src":"2701:62:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2735:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"2746:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2731:3:33"},"nodeType":"YulFunctionCall","src":"2731:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2755:7:33"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"2711:19:33"},"nodeType":"YulFunctionCall","src":"2711:52:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2701:6:33"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2488:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2499:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2511:6:33","type":""}],"src":"2453:327:33"},{"body":{"nodeType":"YulBlock","src":"2828:48:33","statements":[{"nodeType":"YulAssignment","src":"2838:32:33","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2863:5:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2856:6:33"},"nodeType":"YulFunctionCall","src":"2856:13:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2849:6:33"},"nodeType":"YulFunctionCall","src":"2849:21:33"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2838:7:33"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2810:5:33","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2820:7:33","type":""}],"src":"2786:90:33"},{"body":{"nodeType":"YulBlock","src":"2941:50:33","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2958:3:33"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2978:5:33"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"2963:14:33"},"nodeType":"YulFunctionCall","src":"2963:21:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2951:6:33"},"nodeType":"YulFunctionCall","src":"2951:34:33"},"nodeType":"YulExpressionStatement","src":"2951:34:33"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2929:5:33","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2936:3:33","type":""}],"src":"2882:109:33"},{"body":{"nodeType":"YulBlock","src":"3089:118:33","statements":[{"nodeType":"YulAssignment","src":"3099:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3111:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"3122:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3107:3:33"},"nodeType":"YulFunctionCall","src":"3107:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3099:4:33"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3173:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3186:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"3197:1:33","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3182:3:33"},"nodeType":"YulFunctionCall","src":"3182:17:33"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3135:37:33"},"nodeType":"YulFunctionCall","src":"3135:65:33"},"nodeType":"YulExpressionStatement","src":"3135:65:33"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3061:9:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3073:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3084:4:33","type":""}],"src":"2997:210:33"},{"body":{"nodeType":"YulBlock","src":"3279:263:33","statements":[{"body":{"nodeType":"YulBlock","src":"3325:83:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3327:77:33"},"nodeType":"YulFunctionCall","src":"3327:79:33"},"nodeType":"YulExpressionStatement","src":"3327:79:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3300:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"3309:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3296:3:33"},"nodeType":"YulFunctionCall","src":"3296:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"3321:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3292:3:33"},"nodeType":"YulFunctionCall","src":"3292:32:33"},"nodeType":"YulIf","src":"3289:119:33"},{"nodeType":"YulBlock","src":"3418:117:33","statements":[{"nodeType":"YulVariableDeclaration","src":"3433:15:33","value":{"kind":"number","nodeType":"YulLiteral","src":"3447:1:33","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3437:6:33","type":""}]},{"nodeType":"YulAssignment","src":"3462:63:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3497:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"3508:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3493:3:33"},"nodeType":"YulFunctionCall","src":"3493:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3517:7:33"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3472:20:33"},"nodeType":"YulFunctionCall","src":"3472:53:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3462:6:33"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3249:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3260:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3272:6:33","type":""}],"src":"3213:329:33"},{"body":{"nodeType":"YulBlock","src":"3607:40:33","statements":[{"nodeType":"YulAssignment","src":"3618:22:33","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3634:5:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3628:5:33"},"nodeType":"YulFunctionCall","src":"3628:12:33"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3618:6:33"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3590:5:33","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3600:6:33","type":""}],"src":"3548:99:33"},{"body":{"nodeType":"YulBlock","src":"3749:73:33","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3766:3:33"},{"name":"length","nodeType":"YulIdentifier","src":"3771:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3759:6:33"},"nodeType":"YulFunctionCall","src":"3759:19:33"},"nodeType":"YulExpressionStatement","src":"3759:19:33"},{"nodeType":"YulAssignment","src":"3787:29:33","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3806:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"3811:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3802:3:33"},"nodeType":"YulFunctionCall","src":"3802:14:33"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"3787:11:33"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3721:3:33","type":""},{"name":"length","nodeType":"YulTypedName","src":"3726:6:33","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"3737:11:33","type":""}],"src":"3653:169:33"},{"body":{"nodeType":"YulBlock","src":"3890:184:33","statements":[{"nodeType":"YulVariableDeclaration","src":"3900:10:33","value":{"kind":"number","nodeType":"YulLiteral","src":"3909:1:33","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3904:1:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"3969:63:33","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3994:3:33"},{"name":"i","nodeType":"YulIdentifier","src":"3999:1:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3990:3:33"},"nodeType":"YulFunctionCall","src":"3990:11:33"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4013:3:33"},{"name":"i","nodeType":"YulIdentifier","src":"4018:1:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4009:3:33"},"nodeType":"YulFunctionCall","src":"4009:11:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4003:5:33"},"nodeType":"YulFunctionCall","src":"4003:18:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3983:6:33"},"nodeType":"YulFunctionCall","src":"3983:39:33"},"nodeType":"YulExpressionStatement","src":"3983:39:33"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3930:1:33"},{"name":"length","nodeType":"YulIdentifier","src":"3933:6:33"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3927:2:33"},"nodeType":"YulFunctionCall","src":"3927:13:33"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3941:19:33","statements":[{"nodeType":"YulAssignment","src":"3943:15:33","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3952:1:33"},{"kind":"number","nodeType":"YulLiteral","src":"3955:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3948:3:33"},"nodeType":"YulFunctionCall","src":"3948:10:33"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3943:1:33"}]}]},"pre":{"nodeType":"YulBlock","src":"3923:3:33","statements":[]},"src":"3919:113:33"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4052:3:33"},{"name":"length","nodeType":"YulIdentifier","src":"4057:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4048:3:33"},"nodeType":"YulFunctionCall","src":"4048:16:33"},{"kind":"number","nodeType":"YulLiteral","src":"4066:1:33","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4041:6:33"},"nodeType":"YulFunctionCall","src":"4041:27:33"},"nodeType":"YulExpressionStatement","src":"4041:27:33"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"3872:3:33","type":""},{"name":"dst","nodeType":"YulTypedName","src":"3877:3:33","type":""},{"name":"length","nodeType":"YulTypedName","src":"3882:6:33","type":""}],"src":"3828:246:33"},{"body":{"nodeType":"YulBlock","src":"4128:54:33","statements":[{"nodeType":"YulAssignment","src":"4138:38:33","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4156:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"4163:2:33","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4152:3:33"},"nodeType":"YulFunctionCall","src":"4152:14:33"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4172:2:33","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4168:3:33"},"nodeType":"YulFunctionCall","src":"4168:7:33"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4148:3:33"},"nodeType":"YulFunctionCall","src":"4148:28:33"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4138:6:33"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4111:5:33","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4121:6:33","type":""}],"src":"4080:102:33"},{"body":{"nodeType":"YulBlock","src":"4280:285:33","statements":[{"nodeType":"YulVariableDeclaration","src":"4290:53:33","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4337:5:33"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4304:32:33"},"nodeType":"YulFunctionCall","src":"4304:39:33"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4294:6:33","type":""}]},{"nodeType":"YulAssignment","src":"4352:78:33","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4418:3:33"},{"name":"length","nodeType":"YulIdentifier","src":"4423:6:33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4359:58:33"},"nodeType":"YulFunctionCall","src":"4359:71:33"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4352:3:33"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4478:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"4485:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4474:3:33"},"nodeType":"YulFunctionCall","src":"4474:16:33"},{"name":"pos","nodeType":"YulIdentifier","src":"4492:3:33"},{"name":"length","nodeType":"YulIdentifier","src":"4497:6:33"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"4439:34:33"},"nodeType":"YulFunctionCall","src":"4439:65:33"},"nodeType":"YulExpressionStatement","src":"4439:65:33"},{"nodeType":"YulAssignment","src":"4513:46:33","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4524:3:33"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4551:6:33"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4529:21:33"},"nodeType":"YulFunctionCall","src":"4529:29:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4520:3:33"},"nodeType":"YulFunctionCall","src":"4520:39:33"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4513:3:33"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4261:5:33","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4268:3:33","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4276:3:33","type":""}],"src":"4188:377:33"},{"body":{"nodeType":"YulBlock","src":"4689:195:33","statements":[{"nodeType":"YulAssignment","src":"4699:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4711:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"4722:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4707:3:33"},"nodeType":"YulFunctionCall","src":"4707:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4699:4:33"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4746:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"4757:1:33","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4742:3:33"},"nodeType":"YulFunctionCall","src":"4742:17:33"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4765:4:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"4771:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4761:3:33"},"nodeType":"YulFunctionCall","src":"4761:20:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4735:6:33"},"nodeType":"YulFunctionCall","src":"4735:47:33"},"nodeType":"YulExpressionStatement","src":"4735:47:33"},{"nodeType":"YulAssignment","src":"4791:86:33","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4863:6:33"},{"name":"tail","nodeType":"YulIdentifier","src":"4872:4:33"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4799:63:33"},"nodeType":"YulFunctionCall","src":"4799:78:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4791:4:33"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4661:9:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4673:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4684:4:33","type":""}],"src":"4571:313:33"},{"body":{"nodeType":"YulBlock","src":"4979:28:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4996:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4999:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4989:6:33"},"nodeType":"YulFunctionCall","src":"4989:12:33"},"nodeType":"YulExpressionStatement","src":"4989:12:33"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"4890:117:33"},{"body":{"nodeType":"YulBlock","src":"5041:152:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5058:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5061:77:33","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5051:6:33"},"nodeType":"YulFunctionCall","src":"5051:88:33"},"nodeType":"YulExpressionStatement","src":"5051:88:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5155:1:33","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5158:4:33","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5148:6:33"},"nodeType":"YulFunctionCall","src":"5148:15:33"},"nodeType":"YulExpressionStatement","src":"5148:15:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5179:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5182:4:33","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5172:6:33"},"nodeType":"YulFunctionCall","src":"5172:15:33"},"nodeType":"YulExpressionStatement","src":"5172:15:33"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"5013:180:33"},{"body":{"nodeType":"YulBlock","src":"5242:238:33","statements":[{"nodeType":"YulVariableDeclaration","src":"5252:58:33","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5274:6:33"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"5304:4:33"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5282:21:33"},"nodeType":"YulFunctionCall","src":"5282:27:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5270:3:33"},"nodeType":"YulFunctionCall","src":"5270:40:33"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"5256:10:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"5421:22:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5423:16:33"},"nodeType":"YulFunctionCall","src":"5423:18:33"},"nodeType":"YulExpressionStatement","src":"5423:18:33"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5364:10:33"},{"kind":"number","nodeType":"YulLiteral","src":"5376:18:33","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5361:2:33"},"nodeType":"YulFunctionCall","src":"5361:34:33"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5400:10:33"},{"name":"memPtr","nodeType":"YulIdentifier","src":"5412:6:33"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5397:2:33"},"nodeType":"YulFunctionCall","src":"5397:22:33"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5358:2:33"},"nodeType":"YulFunctionCall","src":"5358:62:33"},"nodeType":"YulIf","src":"5355:88:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5459:2:33","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5463:10:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5452:6:33"},"nodeType":"YulFunctionCall","src":"5452:22:33"},"nodeType":"YulExpressionStatement","src":"5452:22:33"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"5228:6:33","type":""},{"name":"size","nodeType":"YulTypedName","src":"5236:4:33","type":""}],"src":"5199:281:33"},{"body":{"nodeType":"YulBlock","src":"5527:88:33","statements":[{"nodeType":"YulAssignment","src":"5537:30:33","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"5547:18:33"},"nodeType":"YulFunctionCall","src":"5547:20:33"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5537:6:33"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5596:6:33"},{"name":"size","nodeType":"YulIdentifier","src":"5604:4:33"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"5576:19:33"},"nodeType":"YulFunctionCall","src":"5576:33:33"},"nodeType":"YulExpressionStatement","src":"5576:33:33"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"5511:4:33","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"5520:6:33","type":""}],"src":"5486:129:33"},{"body":{"nodeType":"YulBlock","src":"5703:229:33","statements":[{"body":{"nodeType":"YulBlock","src":"5808:22:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5810:16:33"},"nodeType":"YulFunctionCall","src":"5810:18:33"},"nodeType":"YulExpressionStatement","src":"5810:18:33"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5780:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"5788:18:33","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5777:2:33"},"nodeType":"YulFunctionCall","src":"5777:30:33"},"nodeType":"YulIf","src":"5774:56:33"},{"nodeType":"YulAssignment","src":"5840:25:33","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5852:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"5860:4:33","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5848:3:33"},"nodeType":"YulFunctionCall","src":"5848:17:33"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"5840:4:33"}]},{"nodeType":"YulAssignment","src":"5902:23:33","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"5914:4:33"},{"kind":"number","nodeType":"YulLiteral","src":"5920:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5910:3:33"},"nodeType":"YulFunctionCall","src":"5910:15:33"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"5902:4:33"}]}]},"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"5687:6:33","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"5698:4:33","type":""}],"src":"5621:311:33"},{"body":{"nodeType":"YulBlock","src":"6027:28:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6044:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6047:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6037:6:33"},"nodeType":"YulFunctionCall","src":"6037:12:33"},"nodeType":"YulExpressionStatement","src":"6037:12:33"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"5938:117:33"},{"body":{"nodeType":"YulBlock","src":"6180:608:33","statements":[{"nodeType":"YulAssignment","src":"6190:90:33","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6272:6:33"}],"functionName":{"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"6215:56:33"},"nodeType":"YulFunctionCall","src":"6215:64:33"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"6199:15:33"},"nodeType":"YulFunctionCall","src":"6199:81:33"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"6190:5:33"}]},{"nodeType":"YulVariableDeclaration","src":"6289:16:33","value":{"name":"array","nodeType":"YulIdentifier","src":"6300:5:33"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"6293:3:33","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6322:5:33"},{"name":"length","nodeType":"YulIdentifier","src":"6329:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6315:6:33"},"nodeType":"YulFunctionCall","src":"6315:21:33"},"nodeType":"YulExpressionStatement","src":"6315:21:33"},{"nodeType":"YulAssignment","src":"6345:23:33","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6356:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"6363:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6352:3:33"},"nodeType":"YulFunctionCall","src":"6352:16:33"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"6345:3:33"}]},{"nodeType":"YulVariableDeclaration","src":"6378:44:33","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6396:6:33"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6408:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"6416:4:33","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6404:3:33"},"nodeType":"YulFunctionCall","src":"6404:17:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6392:3:33"},"nodeType":"YulFunctionCall","src":"6392:30:33"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"6382:6:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"6450:103:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"6464:77:33"},"nodeType":"YulFunctionCall","src":"6464:79:33"},"nodeType":"YulExpressionStatement","src":"6464:79:33"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"6437:6:33"},{"name":"end","nodeType":"YulIdentifier","src":"6445:3:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6434:2:33"},"nodeType":"YulFunctionCall","src":"6434:15:33"},"nodeType":"YulIf","src":"6431:122:33"},{"body":{"nodeType":"YulBlock","src":"6638:144:33","statements":[{"nodeType":"YulVariableDeclaration","src":"6653:21:33","value":{"name":"src","nodeType":"YulIdentifier","src":"6671:3:33"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"6657:10:33","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6695:3:33"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"6721:10:33"},{"name":"end","nodeType":"YulIdentifier","src":"6733:3:33"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6700:20:33"},"nodeType":"YulFunctionCall","src":"6700:37:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6688:6:33"},"nodeType":"YulFunctionCall","src":"6688:50:33"},"nodeType":"YulExpressionStatement","src":"6688:50:33"},{"nodeType":"YulAssignment","src":"6751:21:33","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6762:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"6767:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6758:3:33"},"nodeType":"YulFunctionCall","src":"6758:14:33"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"6751:3:33"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6591:3:33"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"6596:6:33"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6588:2:33"},"nodeType":"YulFunctionCall","src":"6588:15:33"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6604:25:33","statements":[{"nodeType":"YulAssignment","src":"6606:21:33","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6617:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"6622:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6613:3:33"},"nodeType":"YulFunctionCall","src":"6613:14:33"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"6606:3:33"}]}]},"pre":{"nodeType":"YulBlock","src":"6566:21:33","statements":[{"nodeType":"YulVariableDeclaration","src":"6568:17:33","value":{"name":"offset","nodeType":"YulIdentifier","src":"6579:6:33"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"6572:3:33","type":""}]}]},"src":"6562:220:33"}]},"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6150:6:33","type":""},{"name":"length","nodeType":"YulTypedName","src":"6158:6:33","type":""},{"name":"end","nodeType":"YulTypedName","src":"6166:3:33","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"6174:5:33","type":""}],"src":"6078:710:33"},{"body":{"nodeType":"YulBlock","src":"6888:293:33","statements":[{"body":{"nodeType":"YulBlock","src":"6937:83:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"6939:77:33"},"nodeType":"YulFunctionCall","src":"6939:79:33"},"nodeType":"YulExpressionStatement","src":"6939:79:33"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6916:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"6924:4:33","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6912:3:33"},"nodeType":"YulFunctionCall","src":"6912:17:33"},{"name":"end","nodeType":"YulIdentifier","src":"6931:3:33"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6908:3:33"},"nodeType":"YulFunctionCall","src":"6908:27:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6901:6:33"},"nodeType":"YulFunctionCall","src":"6901:35:33"},"nodeType":"YulIf","src":"6898:122:33"},{"nodeType":"YulVariableDeclaration","src":"7029:34:33","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7056:6:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7043:12:33"},"nodeType":"YulFunctionCall","src":"7043:20:33"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7033:6:33","type":""}]},{"nodeType":"YulAssignment","src":"7072:103:33","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7148:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"7156:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7144:3:33"},"nodeType":"YulFunctionCall","src":"7144:17:33"},{"name":"length","nodeType":"YulIdentifier","src":"7163:6:33"},{"name":"end","nodeType":"YulIdentifier","src":"7171:3:33"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7081:62:33"},"nodeType":"YulFunctionCall","src":"7081:94:33"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7072:5:33"}]}]},"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6866:6:33","type":""},{"name":"end","nodeType":"YulTypedName","src":"6874:3:33","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"6882:5:33","type":""}],"src":"6811:370:33"},{"body":{"nodeType":"YulBlock","src":"7276:28:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7293:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7296:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7286:6:33"},"nodeType":"YulFunctionCall","src":"7286:12:33"},"nodeType":"YulExpressionStatement","src":"7286:12:33"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"7187:117:33"},{"body":{"nodeType":"YulBlock","src":"7376:241:33","statements":[{"body":{"nodeType":"YulBlock","src":"7481:22:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7483:16:33"},"nodeType":"YulFunctionCall","src":"7483:18:33"},"nodeType":"YulExpressionStatement","src":"7483:18:33"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7453:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"7461:18:33","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7450:2:33"},"nodeType":"YulFunctionCall","src":"7450:30:33"},"nodeType":"YulIf","src":"7447:56:33"},{"nodeType":"YulAssignment","src":"7513:37:33","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7543:6:33"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7521:21:33"},"nodeType":"YulFunctionCall","src":"7521:29:33"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"7513:4:33"}]},{"nodeType":"YulAssignment","src":"7587:23:33","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"7599:4:33"},{"kind":"number","nodeType":"YulLiteral","src":"7605:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7595:3:33"},"nodeType":"YulFunctionCall","src":"7595:15:33"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"7587:4:33"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"7360:6:33","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"7371:4:33","type":""}],"src":"7310:307:33"},{"body":{"nodeType":"YulBlock","src":"7687:82:33","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7710:3:33"},{"name":"src","nodeType":"YulIdentifier","src":"7715:3:33"},{"name":"length","nodeType":"YulIdentifier","src":"7720:6:33"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"7697:12:33"},"nodeType":"YulFunctionCall","src":"7697:30:33"},"nodeType":"YulExpressionStatement","src":"7697:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7747:3:33"},{"name":"length","nodeType":"YulIdentifier","src":"7752:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7743:3:33"},"nodeType":"YulFunctionCall","src":"7743:16:33"},{"kind":"number","nodeType":"YulLiteral","src":"7761:1:33","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7736:6:33"},"nodeType":"YulFunctionCall","src":"7736:27:33"},"nodeType":"YulExpressionStatement","src":"7736:27:33"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"7669:3:33","type":""},{"name":"dst","nodeType":"YulTypedName","src":"7674:3:33","type":""},{"name":"length","nodeType":"YulTypedName","src":"7679:6:33","type":""}],"src":"7623:146:33"},{"body":{"nodeType":"YulBlock","src":"7858:340:33","statements":[{"nodeType":"YulAssignment","src":"7868:74:33","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7934:6:33"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"7893:40:33"},"nodeType":"YulFunctionCall","src":"7893:48:33"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"7877:15:33"},"nodeType":"YulFunctionCall","src":"7877:65:33"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7868:5:33"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7958:5:33"},{"name":"length","nodeType":"YulIdentifier","src":"7965:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7951:6:33"},"nodeType":"YulFunctionCall","src":"7951:21:33"},"nodeType":"YulExpressionStatement","src":"7951:21:33"},{"nodeType":"YulVariableDeclaration","src":"7981:27:33","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7996:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"8003:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7992:3:33"},"nodeType":"YulFunctionCall","src":"7992:16:33"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"7985:3:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"8046:83:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"8048:77:33"},"nodeType":"YulFunctionCall","src":"8048:79:33"},"nodeType":"YulExpressionStatement","src":"8048:79:33"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8027:3:33"},{"name":"length","nodeType":"YulIdentifier","src":"8032:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8023:3:33"},"nodeType":"YulFunctionCall","src":"8023:16:33"},{"name":"end","nodeType":"YulIdentifier","src":"8041:3:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8020:2:33"},"nodeType":"YulFunctionCall","src":"8020:25:33"},"nodeType":"YulIf","src":"8017:112:33"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8175:3:33"},{"name":"dst","nodeType":"YulIdentifier","src":"8180:3:33"},{"name":"length","nodeType":"YulIdentifier","src":"8185:6:33"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"8138:36:33"},"nodeType":"YulFunctionCall","src":"8138:54:33"},"nodeType":"YulExpressionStatement","src":"8138:54:33"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"7831:3:33","type":""},{"name":"length","nodeType":"YulTypedName","src":"7836:6:33","type":""},{"name":"end","nodeType":"YulTypedName","src":"7844:3:33","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"7852:5:33","type":""}],"src":"7775:423:33"},{"body":{"nodeType":"YulBlock","src":"8278:277:33","statements":[{"body":{"nodeType":"YulBlock","src":"8327:83:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"8329:77:33"},"nodeType":"YulFunctionCall","src":"8329:79:33"},"nodeType":"YulExpressionStatement","src":"8329:79:33"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8306:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"8314:4:33","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8302:3:33"},"nodeType":"YulFunctionCall","src":"8302:17:33"},{"name":"end","nodeType":"YulIdentifier","src":"8321:3:33"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8298:3:33"},"nodeType":"YulFunctionCall","src":"8298:27:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8291:6:33"},"nodeType":"YulFunctionCall","src":"8291:35:33"},"nodeType":"YulIf","src":"8288:122:33"},{"nodeType":"YulVariableDeclaration","src":"8419:34:33","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8446:6:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8433:12:33"},"nodeType":"YulFunctionCall","src":"8433:20:33"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8423:6:33","type":""}]},{"nodeType":"YulAssignment","src":"8462:87:33","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8522:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"8530:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8518:3:33"},"nodeType":"YulFunctionCall","src":"8518:17:33"},{"name":"length","nodeType":"YulIdentifier","src":"8537:6:33"},{"name":"end","nodeType":"YulIdentifier","src":"8545:3:33"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8471:46:33"},"nodeType":"YulFunctionCall","src":"8471:78:33"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8462:5:33"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8256:6:33","type":""},{"name":"end","nodeType":"YulTypedName","src":"8264:3:33","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8272:5:33","type":""}],"src":"8217:338:33"},{"body":{"nodeType":"YulBlock","src":"8737:1187:33","statements":[{"body":{"nodeType":"YulBlock","src":"8784:83:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8786:77:33"},"nodeType":"YulFunctionCall","src":"8786:79:33"},"nodeType":"YulExpressionStatement","src":"8786:79:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8758:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"8767:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8754:3:33"},"nodeType":"YulFunctionCall","src":"8754:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"8779:3:33","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8750:3:33"},"nodeType":"YulFunctionCall","src":"8750:33:33"},"nodeType":"YulIf","src":"8747:120:33"},{"nodeType":"YulBlock","src":"8877:117:33","statements":[{"nodeType":"YulVariableDeclaration","src":"8892:15:33","value":{"kind":"number","nodeType":"YulLiteral","src":"8906:1:33","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8896:6:33","type":""}]},{"nodeType":"YulAssignment","src":"8921:63:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8956:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"8967:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8952:3:33"},"nodeType":"YulFunctionCall","src":"8952:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8976:7:33"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8931:20:33"},"nodeType":"YulFunctionCall","src":"8931:53:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8921:6:33"}]}]},{"nodeType":"YulBlock","src":"9004:303:33","statements":[{"nodeType":"YulVariableDeclaration","src":"9019:46:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9050:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"9061:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9046:3:33"},"nodeType":"YulFunctionCall","src":"9046:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9033:12:33"},"nodeType":"YulFunctionCall","src":"9033:32:33"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9023:6:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"9112:83:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9114:77:33"},"nodeType":"YulFunctionCall","src":"9114:79:33"},"nodeType":"YulExpressionStatement","src":"9114:79:33"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9084:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"9092:18:33","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9081:2:33"},"nodeType":"YulFunctionCall","src":"9081:30:33"},"nodeType":"YulIf","src":"9078:117:33"},{"nodeType":"YulAssignment","src":"9209:88:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9269:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"9280:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9265:3:33"},"nodeType":"YulFunctionCall","src":"9265:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9289:7:33"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"9219:45:33"},"nodeType":"YulFunctionCall","src":"9219:78:33"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9209:6:33"}]}]},{"nodeType":"YulBlock","src":"9317:303:33","statements":[{"nodeType":"YulVariableDeclaration","src":"9332:46:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9363:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"9374:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9359:3:33"},"nodeType":"YulFunctionCall","src":"9359:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9346:12:33"},"nodeType":"YulFunctionCall","src":"9346:32:33"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9336:6:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"9425:83:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9427:77:33"},"nodeType":"YulFunctionCall","src":"9427:79:33"},"nodeType":"YulExpressionStatement","src":"9427:79:33"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9397:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"9405:18:33","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9394:2:33"},"nodeType":"YulFunctionCall","src":"9394:30:33"},"nodeType":"YulIf","src":"9391:117:33"},{"nodeType":"YulAssignment","src":"9522:88:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9582:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"9593:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9578:3:33"},"nodeType":"YulFunctionCall","src":"9578:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9602:7:33"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"9532:45:33"},"nodeType":"YulFunctionCall","src":"9532:78:33"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"9522:6:33"}]}]},{"nodeType":"YulBlock","src":"9630:287:33","statements":[{"nodeType":"YulVariableDeclaration","src":"9645:46:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9676:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"9687:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9672:3:33"},"nodeType":"YulFunctionCall","src":"9672:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9659:12:33"},"nodeType":"YulFunctionCall","src":"9659:32:33"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9649:6:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"9738:83:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9740:77:33"},"nodeType":"YulFunctionCall","src":"9740:79:33"},"nodeType":"YulExpressionStatement","src":"9740:79:33"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9710:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"9718:18:33","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9707:2:33"},"nodeType":"YulFunctionCall","src":"9707:30:33"},"nodeType":"YulIf","src":"9704:117:33"},{"nodeType":"YulAssignment","src":"9835:72:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9879:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"9890:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9875:3:33"},"nodeType":"YulFunctionCall","src":"9875:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9899:7:33"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9845:29:33"},"nodeType":"YulFunctionCall","src":"9845:62:33"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"9835:6:33"}]}]}]},"name":"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8683:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8694:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8706:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8714:6:33","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8722:6:33","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8730:6:33","type":""}],"src":"8561:1363:33"},{"body":{"nodeType":"YulBlock","src":"9975:32:33","statements":[{"nodeType":"YulAssignment","src":"9985:16:33","value":{"name":"value","nodeType":"YulIdentifier","src":"9996:5:33"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9985:7:33"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9957:5:33","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9967:7:33","type":""}],"src":"9930:77:33"},{"body":{"nodeType":"YulBlock","src":"10056:79:33","statements":[{"body":{"nodeType":"YulBlock","src":"10113:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10122:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10125:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10115:6:33"},"nodeType":"YulFunctionCall","src":"10115:12:33"},"nodeType":"YulExpressionStatement","src":"10115:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10079:5:33"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10104:5:33"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"10086:17:33"},"nodeType":"YulFunctionCall","src":"10086:24:33"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10076:2:33"},"nodeType":"YulFunctionCall","src":"10076:35:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10069:6:33"},"nodeType":"YulFunctionCall","src":"10069:43:33"},"nodeType":"YulIf","src":"10066:63:33"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10049:5:33","type":""}],"src":"10013:122:33"},{"body":{"nodeType":"YulBlock","src":"10193:87:33","statements":[{"nodeType":"YulAssignment","src":"10203:29:33","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10225:6:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10212:12:33"},"nodeType":"YulFunctionCall","src":"10212:20:33"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10203:5:33"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10268:5:33"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"10241:26:33"},"nodeType":"YulFunctionCall","src":"10241:33:33"},"nodeType":"YulExpressionStatement","src":"10241:33:33"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"10171:6:33","type":""},{"name":"end","nodeType":"YulTypedName","src":"10179:3:33","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"10187:5:33","type":""}],"src":"10141:139:33"},{"body":{"nodeType":"YulBlock","src":"10352:263:33","statements":[{"body":{"nodeType":"YulBlock","src":"10398:83:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10400:77:33"},"nodeType":"YulFunctionCall","src":"10400:79:33"},"nodeType":"YulExpressionStatement","src":"10400:79:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10373:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"10382:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10369:3:33"},"nodeType":"YulFunctionCall","src":"10369:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"10394:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10365:3:33"},"nodeType":"YulFunctionCall","src":"10365:32:33"},"nodeType":"YulIf","src":"10362:119:33"},{"nodeType":"YulBlock","src":"10491:117:33","statements":[{"nodeType":"YulVariableDeclaration","src":"10506:15:33","value":{"kind":"number","nodeType":"YulLiteral","src":"10520:1:33","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10510:6:33","type":""}]},{"nodeType":"YulAssignment","src":"10535:63:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10570:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"10581:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10566:3:33"},"nodeType":"YulFunctionCall","src":"10566:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10590:7:33"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"10545:20:33"},"nodeType":"YulFunctionCall","src":"10545:53:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10535:6:33"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10322:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10333:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10345:6:33","type":""}],"src":"10286:329:33"},{"body":{"nodeType":"YulBlock","src":"10686:53:33","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10703:3:33"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10726:5:33"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"10708:17:33"},"nodeType":"YulFunctionCall","src":"10708:24:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10696:6:33"},"nodeType":"YulFunctionCall","src":"10696:37:33"},"nodeType":"YulExpressionStatement","src":"10696:37:33"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10674:5:33","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10681:3:33","type":""}],"src":"10621:118:33"},{"body":{"nodeType":"YulBlock","src":"10843:124:33","statements":[{"nodeType":"YulAssignment","src":"10853:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10865:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"10876:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10861:3:33"},"nodeType":"YulFunctionCall","src":"10861:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10853:4:33"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10933:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10946:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"10957:1:33","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10942:3:33"},"nodeType":"YulFunctionCall","src":"10942:17:33"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"10889:43:33"},"nodeType":"YulFunctionCall","src":"10889:71:33"},"nodeType":"YulExpressionStatement","src":"10889:71:33"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10815:9:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10827:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10838:4:33","type":""}],"src":"10745:222:33"},{"body":{"nodeType":"YulBlock","src":"11166:1316:33","statements":[{"body":{"nodeType":"YulBlock","src":"11213:83:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11215:77:33"},"nodeType":"YulFunctionCall","src":"11215:79:33"},"nodeType":"YulExpressionStatement","src":"11215:79:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11187:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"11196:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11183:3:33"},"nodeType":"YulFunctionCall","src":"11183:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"11208:3:33","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11179:3:33"},"nodeType":"YulFunctionCall","src":"11179:33:33"},"nodeType":"YulIf","src":"11176:120:33"},{"nodeType":"YulBlock","src":"11306:117:33","statements":[{"nodeType":"YulVariableDeclaration","src":"11321:15:33","value":{"kind":"number","nodeType":"YulLiteral","src":"11335:1:33","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11325:6:33","type":""}]},{"nodeType":"YulAssignment","src":"11350:63:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11385:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"11396:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11381:3:33"},"nodeType":"YulFunctionCall","src":"11381:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11405:7:33"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11360:20:33"},"nodeType":"YulFunctionCall","src":"11360:53:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11350:6:33"}]}]},{"nodeType":"YulBlock","src":"11433:118:33","statements":[{"nodeType":"YulVariableDeclaration","src":"11448:16:33","value":{"kind":"number","nodeType":"YulLiteral","src":"11462:2:33","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11452:6:33","type":""}]},{"nodeType":"YulAssignment","src":"11478:63:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11513:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"11524:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11509:3:33"},"nodeType":"YulFunctionCall","src":"11509:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11533:7:33"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11488:20:33"},"nodeType":"YulFunctionCall","src":"11488:53:33"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11478:6:33"}]}]},{"nodeType":"YulBlock","src":"11561:303:33","statements":[{"nodeType":"YulVariableDeclaration","src":"11576:46:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11607:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"11618:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11603:3:33"},"nodeType":"YulFunctionCall","src":"11603:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11590:12:33"},"nodeType":"YulFunctionCall","src":"11590:32:33"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11580:6:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"11669:83:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"11671:77:33"},"nodeType":"YulFunctionCall","src":"11671:79:33"},"nodeType":"YulExpressionStatement","src":"11671:79:33"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11641:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"11649:18:33","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11638:2:33"},"nodeType":"YulFunctionCall","src":"11638:30:33"},"nodeType":"YulIf","src":"11635:117:33"},{"nodeType":"YulAssignment","src":"11766:88:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11826:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"11837:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11822:3:33"},"nodeType":"YulFunctionCall","src":"11822:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11846:7:33"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"11776:45:33"},"nodeType":"YulFunctionCall","src":"11776:78:33"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"11766:6:33"}]}]},{"nodeType":"YulBlock","src":"11874:303:33","statements":[{"nodeType":"YulVariableDeclaration","src":"11889:46:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11920:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"11931:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11916:3:33"},"nodeType":"YulFunctionCall","src":"11916:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11903:12:33"},"nodeType":"YulFunctionCall","src":"11903:32:33"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11893:6:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"11982:83:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"11984:77:33"},"nodeType":"YulFunctionCall","src":"11984:79:33"},"nodeType":"YulExpressionStatement","src":"11984:79:33"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11954:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"11962:18:33","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11951:2:33"},"nodeType":"YulFunctionCall","src":"11951:30:33"},"nodeType":"YulIf","src":"11948:117:33"},{"nodeType":"YulAssignment","src":"12079:88:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12139:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"12150:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12135:3:33"},"nodeType":"YulFunctionCall","src":"12135:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12159:7:33"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"12089:45:33"},"nodeType":"YulFunctionCall","src":"12089:78:33"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"12079:6:33"}]}]},{"nodeType":"YulBlock","src":"12187:288:33","statements":[{"nodeType":"YulVariableDeclaration","src":"12202:47:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12233:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"12244:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12229:3:33"},"nodeType":"YulFunctionCall","src":"12229:19:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12216:12:33"},"nodeType":"YulFunctionCall","src":"12216:33:33"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12206:6:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"12296:83:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"12298:77:33"},"nodeType":"YulFunctionCall","src":"12298:79:33"},"nodeType":"YulExpressionStatement","src":"12298:79:33"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12268:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"12276:18:33","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12265:2:33"},"nodeType":"YulFunctionCall","src":"12265:30:33"},"nodeType":"YulIf","src":"12262:117:33"},{"nodeType":"YulAssignment","src":"12393:72:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12437:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"12448:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12433:3:33"},"nodeType":"YulFunctionCall","src":"12433:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12457:7:33"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"12403:29:33"},"nodeType":"YulFunctionCall","src":"12403:62:33"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"12393:6:33"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11104:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11115:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11127:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11135:6:33","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11143:6:33","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11151:6:33","type":""},{"name":"value4","nodeType":"YulTypedName","src":"11159:6:33","type":""}],"src":"10973:1509:33"},{"body":{"nodeType":"YulBlock","src":"12571:391:33","statements":[{"body":{"nodeType":"YulBlock","src":"12617:83:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12619:77:33"},"nodeType":"YulFunctionCall","src":"12619:79:33"},"nodeType":"YulExpressionStatement","src":"12619:79:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12592:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"12601:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12588:3:33"},"nodeType":"YulFunctionCall","src":"12588:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"12613:2:33","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12584:3:33"},"nodeType":"YulFunctionCall","src":"12584:32:33"},"nodeType":"YulIf","src":"12581:119:33"},{"nodeType":"YulBlock","src":"12710:117:33","statements":[{"nodeType":"YulVariableDeclaration","src":"12725:15:33","value":{"kind":"number","nodeType":"YulLiteral","src":"12739:1:33","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12729:6:33","type":""}]},{"nodeType":"YulAssignment","src":"12754:63:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12789:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"12800:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12785:3:33"},"nodeType":"YulFunctionCall","src":"12785:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12809:7:33"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"12764:20:33"},"nodeType":"YulFunctionCall","src":"12764:53:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12754:6:33"}]}]},{"nodeType":"YulBlock","src":"12837:118:33","statements":[{"nodeType":"YulVariableDeclaration","src":"12852:16:33","value":{"kind":"number","nodeType":"YulLiteral","src":"12866:2:33","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12856:6:33","type":""}]},{"nodeType":"YulAssignment","src":"12882:63:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12917:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"12928:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12913:3:33"},"nodeType":"YulFunctionCall","src":"12913:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12937:7:33"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"12892:20:33"},"nodeType":"YulFunctionCall","src":"12892:53:33"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12882:6:33"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12533:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12544:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12556:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12564:6:33","type":""}],"src":"12488:474:33"},{"body":{"nodeType":"YulBlock","src":"13050:229:33","statements":[{"body":{"nodeType":"YulBlock","src":"13155:22:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"13157:16:33"},"nodeType":"YulFunctionCall","src":"13157:18:33"},"nodeType":"YulExpressionStatement","src":"13157:18:33"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13127:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"13135:18:33","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13124:2:33"},"nodeType":"YulFunctionCall","src":"13124:30:33"},"nodeType":"YulIf","src":"13121:56:33"},{"nodeType":"YulAssignment","src":"13187:25:33","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13199:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"13207:4:33","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"13195:3:33"},"nodeType":"YulFunctionCall","src":"13195:17:33"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"13187:4:33"}]},{"nodeType":"YulAssignment","src":"13249:23:33","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"13261:4:33"},{"kind":"number","nodeType":"YulLiteral","src":"13267:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13257:3:33"},"nodeType":"YulFunctionCall","src":"13257:15:33"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"13249:4:33"}]}]},"name":"array_allocation_size_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"13034:6:33","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"13045:4:33","type":""}],"src":"12968:311:33"},{"body":{"nodeType":"YulBlock","src":"13404:608:33","statements":[{"nodeType":"YulAssignment","src":"13414:90:33","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13496:6:33"}],"functionName":{"name":"array_allocation_size_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"13439:56:33"},"nodeType":"YulFunctionCall","src":"13439:64:33"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"13423:15:33"},"nodeType":"YulFunctionCall","src":"13423:81:33"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"13414:5:33"}]},{"nodeType":"YulVariableDeclaration","src":"13513:16:33","value":{"name":"array","nodeType":"YulIdentifier","src":"13524:5:33"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"13517:3:33","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"13546:5:33"},{"name":"length","nodeType":"YulIdentifier","src":"13553:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13539:6:33"},"nodeType":"YulFunctionCall","src":"13539:21:33"},"nodeType":"YulExpressionStatement","src":"13539:21:33"},{"nodeType":"YulAssignment","src":"13569:23:33","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"13580:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"13587:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13576:3:33"},"nodeType":"YulFunctionCall","src":"13576:16:33"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"13569:3:33"}]},{"nodeType":"YulVariableDeclaration","src":"13602:44:33","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13620:6:33"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13632:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"13640:4:33","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"13628:3:33"},"nodeType":"YulFunctionCall","src":"13628:17:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13616:3:33"},"nodeType":"YulFunctionCall","src":"13616:30:33"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"13606:6:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"13674:103:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"13688:77:33"},"nodeType":"YulFunctionCall","src":"13688:79:33"},"nodeType":"YulExpressionStatement","src":"13688:79:33"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"13661:6:33"},{"name":"end","nodeType":"YulIdentifier","src":"13669:3:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13658:2:33"},"nodeType":"YulFunctionCall","src":"13658:15:33"},"nodeType":"YulIf","src":"13655:122:33"},{"body":{"nodeType":"YulBlock","src":"13862:144:33","statements":[{"nodeType":"YulVariableDeclaration","src":"13877:21:33","value":{"name":"src","nodeType":"YulIdentifier","src":"13895:3:33"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"13881:10:33","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"13919:3:33"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"13945:10:33"},{"name":"end","nodeType":"YulIdentifier","src":"13957:3:33"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"13924:20:33"},"nodeType":"YulFunctionCall","src":"13924:37:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13912:6:33"},"nodeType":"YulFunctionCall","src":"13912:50:33"},"nodeType":"YulExpressionStatement","src":"13912:50:33"},{"nodeType":"YulAssignment","src":"13975:21:33","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"13986:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"13991:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13982:3:33"},"nodeType":"YulFunctionCall","src":"13982:14:33"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"13975:3:33"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13815:3:33"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"13820:6:33"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13812:2:33"},"nodeType":"YulFunctionCall","src":"13812:15:33"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"13828:25:33","statements":[{"nodeType":"YulAssignment","src":"13830:21:33","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13841:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"13846:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13837:3:33"},"nodeType":"YulFunctionCall","src":"13837:14:33"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"13830:3:33"}]}]},"pre":{"nodeType":"YulBlock","src":"13790:21:33","statements":[{"nodeType":"YulVariableDeclaration","src":"13792:17:33","value":{"name":"offset","nodeType":"YulIdentifier","src":"13803:6:33"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"13796:3:33","type":""}]}]},"src":"13786:220:33"}]},"name":"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"13374:6:33","type":""},{"name":"length","nodeType":"YulTypedName","src":"13382:6:33","type":""},{"name":"end","nodeType":"YulTypedName","src":"13390:3:33","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"13398:5:33","type":""}],"src":"13302:710:33"},{"body":{"nodeType":"YulBlock","src":"14112:293:33","statements":[{"body":{"nodeType":"YulBlock","src":"14161:83:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"14163:77:33"},"nodeType":"YulFunctionCall","src":"14163:79:33"},"nodeType":"YulExpressionStatement","src":"14163:79:33"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14140:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"14148:4:33","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14136:3:33"},"nodeType":"YulFunctionCall","src":"14136:17:33"},{"name":"end","nodeType":"YulIdentifier","src":"14155:3:33"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14132:3:33"},"nodeType":"YulFunctionCall","src":"14132:27:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14125:6:33"},"nodeType":"YulFunctionCall","src":"14125:35:33"},"nodeType":"YulIf","src":"14122:122:33"},{"nodeType":"YulVariableDeclaration","src":"14253:34:33","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14280:6:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14267:12:33"},"nodeType":"YulFunctionCall","src":"14267:20:33"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"14257:6:33","type":""}]},{"nodeType":"YulAssignment","src":"14296:103:33","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14372:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"14380:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14368:3:33"},"nodeType":"YulFunctionCall","src":"14368:17:33"},{"name":"length","nodeType":"YulIdentifier","src":"14387:6:33"},{"name":"end","nodeType":"YulIdentifier","src":"14395:3:33"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"14305:62:33"},"nodeType":"YulFunctionCall","src":"14305:94:33"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"14296:5:33"}]}]},"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"14090:6:33","type":""},{"name":"end","nodeType":"YulTypedName","src":"14098:3:33","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"14106:5:33","type":""}],"src":"14035:370:33"},{"body":{"nodeType":"YulBlock","src":"14544:761:33","statements":[{"body":{"nodeType":"YulBlock","src":"14590:83:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"14592:77:33"},"nodeType":"YulFunctionCall","src":"14592:79:33"},"nodeType":"YulExpressionStatement","src":"14592:79:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14565:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"14574:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14561:3:33"},"nodeType":"YulFunctionCall","src":"14561:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"14586:2:33","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14557:3:33"},"nodeType":"YulFunctionCall","src":"14557:32:33"},"nodeType":"YulIf","src":"14554:119:33"},{"nodeType":"YulBlock","src":"14683:302:33","statements":[{"nodeType":"YulVariableDeclaration","src":"14698:45:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14729:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"14740:1:33","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14725:3:33"},"nodeType":"YulFunctionCall","src":"14725:17:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14712:12:33"},"nodeType":"YulFunctionCall","src":"14712:31:33"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14702:6:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"14790:83:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"14792:77:33"},"nodeType":"YulFunctionCall","src":"14792:79:33"},"nodeType":"YulExpressionStatement","src":"14792:79:33"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14762:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"14770:18:33","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14759:2:33"},"nodeType":"YulFunctionCall","src":"14759:30:33"},"nodeType":"YulIf","src":"14756:117:33"},{"nodeType":"YulAssignment","src":"14887:88:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14947:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"14958:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14943:3:33"},"nodeType":"YulFunctionCall","src":"14943:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14967:7:33"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"14897:45:33"},"nodeType":"YulFunctionCall","src":"14897:78:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"14887:6:33"}]}]},{"nodeType":"YulBlock","src":"14995:303:33","statements":[{"nodeType":"YulVariableDeclaration","src":"15010:46:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15041:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"15052:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15037:3:33"},"nodeType":"YulFunctionCall","src":"15037:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15024:12:33"},"nodeType":"YulFunctionCall","src":"15024:32:33"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15014:6:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"15103:83:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"15105:77:33"},"nodeType":"YulFunctionCall","src":"15105:79:33"},"nodeType":"YulExpressionStatement","src":"15105:79:33"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15075:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"15083:18:33","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15072:2:33"},"nodeType":"YulFunctionCall","src":"15072:30:33"},"nodeType":"YulIf","src":"15069:117:33"},{"nodeType":"YulAssignment","src":"15200:88:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15260:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"15271:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15256:3:33"},"nodeType":"YulFunctionCall","src":"15256:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15280:7:33"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"15210:45:33"},"nodeType":"YulFunctionCall","src":"15210:78:33"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"15200:6:33"}]}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14506:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14517:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14529:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14537:6:33","type":""}],"src":"14411:894:33"},{"body":{"nodeType":"YulBlock","src":"15385:40:33","statements":[{"nodeType":"YulAssignment","src":"15396:22:33","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15412:5:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15406:5:33"},"nodeType":"YulFunctionCall","src":"15406:12:33"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"15396:6:33"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15368:5:33","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"15378:6:33","type":""}],"src":"15311:114:33"},{"body":{"nodeType":"YulBlock","src":"15542:73:33","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15559:3:33"},{"name":"length","nodeType":"YulIdentifier","src":"15564:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15552:6:33"},"nodeType":"YulFunctionCall","src":"15552:19:33"},"nodeType":"YulExpressionStatement","src":"15552:19:33"},{"nodeType":"YulAssignment","src":"15580:29:33","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15599:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"15604:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15595:3:33"},"nodeType":"YulFunctionCall","src":"15595:14:33"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"15580:11:33"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15514:3:33","type":""},{"name":"length","nodeType":"YulTypedName","src":"15519:6:33","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"15530:11:33","type":""}],"src":"15431:184:33"},{"body":{"nodeType":"YulBlock","src":"15693:60:33","statements":[{"nodeType":"YulAssignment","src":"15703:11:33","value":{"name":"ptr","nodeType":"YulIdentifier","src":"15711:3:33"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"15703:4:33"}]},{"nodeType":"YulAssignment","src":"15724:22:33","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15736:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"15741:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15732:3:33"},"nodeType":"YulFunctionCall","src":"15732:14:33"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"15724:4:33"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"15680:3:33","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"15688:4:33","type":""}],"src":"15621:132:33"},{"body":{"nodeType":"YulBlock","src":"15814:53:33","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15831:3:33"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15854:5:33"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"15836:17:33"},"nodeType":"YulFunctionCall","src":"15836:24:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15824:6:33"},"nodeType":"YulFunctionCall","src":"15824:37:33"},"nodeType":"YulExpressionStatement","src":"15824:37:33"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15802:5:33","type":""},{"name":"pos","nodeType":"YulTypedName","src":"15809:3:33","type":""}],"src":"15759:108:33"},{"body":{"nodeType":"YulBlock","src":"15953:99:33","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15997:6:33"},{"name":"pos","nodeType":"YulIdentifier","src":"16005:3:33"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"15963:33:33"},"nodeType":"YulFunctionCall","src":"15963:46:33"},"nodeType":"YulExpressionStatement","src":"15963:46:33"},{"nodeType":"YulAssignment","src":"16018:28:33","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16036:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"16041:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16032:3:33"},"nodeType":"YulFunctionCall","src":"16032:14:33"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"16018:10:33"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"15926:6:33","type":""},{"name":"pos","nodeType":"YulTypedName","src":"15934:3:33","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"15942:10:33","type":""}],"src":"15873:179:33"},{"body":{"nodeType":"YulBlock","src":"16133:38:33","statements":[{"nodeType":"YulAssignment","src":"16143:22:33","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"16155:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"16160:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16151:3:33"},"nodeType":"YulFunctionCall","src":"16151:14:33"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"16143:4:33"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"16120:3:33","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"16128:4:33","type":""}],"src":"16058:113:33"},{"body":{"nodeType":"YulBlock","src":"16331:608:33","statements":[{"nodeType":"YulVariableDeclaration","src":"16341:68:33","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16403:5:33"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"16355:47:33"},"nodeType":"YulFunctionCall","src":"16355:54:33"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"16345:6:33","type":""}]},{"nodeType":"YulAssignment","src":"16418:93:33","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16499:3:33"},{"name":"length","nodeType":"YulIdentifier","src":"16504:6:33"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16425:73:33"},"nodeType":"YulFunctionCall","src":"16425:86:33"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16418:3:33"}]},{"nodeType":"YulVariableDeclaration","src":"16520:71:33","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16585:5:33"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"16535:49:33"},"nodeType":"YulFunctionCall","src":"16535:56:33"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"16524:7:33","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16600:21:33","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"16614:7:33"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"16604:6:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"16690:224:33","statements":[{"nodeType":"YulVariableDeclaration","src":"16704:34:33","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"16731:6:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16725:5:33"},"nodeType":"YulFunctionCall","src":"16725:13:33"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"16708:13:33","type":""}]},{"nodeType":"YulAssignment","src":"16751:70:33","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"16802:13:33"},{"name":"pos","nodeType":"YulIdentifier","src":"16817:3:33"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"16758:43:33"},"nodeType":"YulFunctionCall","src":"16758:63:33"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16751:3:33"}]},{"nodeType":"YulAssignment","src":"16834:70:33","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"16897:6:33"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"16844:52:33"},"nodeType":"YulFunctionCall","src":"16844:60:33"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"16834:6:33"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"16652:1:33"},{"name":"length","nodeType":"YulIdentifier","src":"16655:6:33"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16649:2:33"},"nodeType":"YulFunctionCall","src":"16649:13:33"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"16663:18:33","statements":[{"nodeType":"YulAssignment","src":"16665:14:33","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"16674:1:33"},{"kind":"number","nodeType":"YulLiteral","src":"16677:1:33","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16670:3:33"},"nodeType":"YulFunctionCall","src":"16670:9:33"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"16665:1:33"}]}]},"pre":{"nodeType":"YulBlock","src":"16634:14:33","statements":[{"nodeType":"YulVariableDeclaration","src":"16636:10:33","value":{"kind":"number","nodeType":"YulLiteral","src":"16645:1:33","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"16640:1:33","type":""}]}]},"src":"16630:284:33"},{"nodeType":"YulAssignment","src":"16923:10:33","value":{"name":"pos","nodeType":"YulIdentifier","src":"16930:3:33"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16923:3:33"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16310:5:33","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16317:3:33","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16326:3:33","type":""}],"src":"16207:732:33"},{"body":{"nodeType":"YulBlock","src":"17093:225:33","statements":[{"nodeType":"YulAssignment","src":"17103:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17115:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"17126:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17111:3:33"},"nodeType":"YulFunctionCall","src":"17111:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17103:4:33"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17150:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"17161:1:33","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17146:3:33"},"nodeType":"YulFunctionCall","src":"17146:17:33"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17169:4:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"17175:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17165:3:33"},"nodeType":"YulFunctionCall","src":"17165:20:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17139:6:33"},"nodeType":"YulFunctionCall","src":"17139:47:33"},"nodeType":"YulExpressionStatement","src":"17139:47:33"},{"nodeType":"YulAssignment","src":"17195:116:33","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17297:6:33"},{"name":"tail","nodeType":"YulIdentifier","src":"17306:4:33"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17203:93:33"},"nodeType":"YulFunctionCall","src":"17203:108:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17195:4:33"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17065:9:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17077:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17088:4:33","type":""}],"src":"16945:373:33"},{"body":{"nodeType":"YulBlock","src":"17450:817:33","statements":[{"body":{"nodeType":"YulBlock","src":"17497:83:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"17499:77:33"},"nodeType":"YulFunctionCall","src":"17499:79:33"},"nodeType":"YulExpressionStatement","src":"17499:79:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"17471:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"17480:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17467:3:33"},"nodeType":"YulFunctionCall","src":"17467:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"17492:3:33","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"17463:3:33"},"nodeType":"YulFunctionCall","src":"17463:33:33"},"nodeType":"YulIf","src":"17460:120:33"},{"nodeType":"YulBlock","src":"17590:117:33","statements":[{"nodeType":"YulVariableDeclaration","src":"17605:15:33","value":{"kind":"number","nodeType":"YulLiteral","src":"17619:1:33","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17609:6:33","type":""}]},{"nodeType":"YulAssignment","src":"17634:63:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17669:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"17680:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17665:3:33"},"nodeType":"YulFunctionCall","src":"17665:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17689:7:33"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"17644:20:33"},"nodeType":"YulFunctionCall","src":"17644:53:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"17634:6:33"}]}]},{"nodeType":"YulBlock","src":"17717:118:33","statements":[{"nodeType":"YulVariableDeclaration","src":"17732:16:33","value":{"kind":"number","nodeType":"YulLiteral","src":"17746:2:33","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17736:6:33","type":""}]},{"nodeType":"YulAssignment","src":"17762:63:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17797:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"17808:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17793:3:33"},"nodeType":"YulFunctionCall","src":"17793:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17817:7:33"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"17772:20:33"},"nodeType":"YulFunctionCall","src":"17772:53:33"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"17762:6:33"}]}]},{"nodeType":"YulBlock","src":"17845:118:33","statements":[{"nodeType":"YulVariableDeclaration","src":"17860:16:33","value":{"kind":"number","nodeType":"YulLiteral","src":"17874:2:33","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17864:6:33","type":""}]},{"nodeType":"YulAssignment","src":"17890:63:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17925:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"17936:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17921:3:33"},"nodeType":"YulFunctionCall","src":"17921:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17945:7:33"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"17900:20:33"},"nodeType":"YulFunctionCall","src":"17900:53:33"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"17890:6:33"}]}]},{"nodeType":"YulBlock","src":"17973:287:33","statements":[{"nodeType":"YulVariableDeclaration","src":"17988:46:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18019:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"18030:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18015:3:33"},"nodeType":"YulFunctionCall","src":"18015:18:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"18002:12:33"},"nodeType":"YulFunctionCall","src":"18002:32:33"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17992:6:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"18081:83:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"18083:77:33"},"nodeType":"YulFunctionCall","src":"18083:79:33"},"nodeType":"YulExpressionStatement","src":"18083:79:33"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18053:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"18061:18:33","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18050:2:33"},"nodeType":"YulFunctionCall","src":"18050:30:33"},"nodeType":"YulIf","src":"18047:117:33"},{"nodeType":"YulAssignment","src":"18178:72:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18222:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"18233:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18218:3:33"},"nodeType":"YulFunctionCall","src":"18218:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18242:7:33"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"18188:29:33"},"nodeType":"YulFunctionCall","src":"18188:62:33"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"18178:6:33"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17396:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"17407:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"17419:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17427:6:33","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17435:6:33","type":""},{"name":"value3","nodeType":"YulTypedName","src":"17443:6:33","type":""}],"src":"17324:943:33"},{"body":{"nodeType":"YulBlock","src":"18313:76:33","statements":[{"body":{"nodeType":"YulBlock","src":"18367:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18376:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18379:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18369:6:33"},"nodeType":"YulFunctionCall","src":"18369:12:33"},"nodeType":"YulExpressionStatement","src":"18369:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18336:5:33"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18358:5:33"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"18343:14:33"},"nodeType":"YulFunctionCall","src":"18343:21:33"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"18333:2:33"},"nodeType":"YulFunctionCall","src":"18333:32:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18326:6:33"},"nodeType":"YulFunctionCall","src":"18326:40:33"},"nodeType":"YulIf","src":"18323:60:33"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18306:5:33","type":""}],"src":"18273:116:33"},{"body":{"nodeType":"YulBlock","src":"18444:84:33","statements":[{"nodeType":"YulAssignment","src":"18454:29:33","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18476:6:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"18463:12:33"},"nodeType":"YulFunctionCall","src":"18463:20:33"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"18454:5:33"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18516:5:33"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"18492:23:33"},"nodeType":"YulFunctionCall","src":"18492:30:33"},"nodeType":"YulExpressionStatement","src":"18492:30:33"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"18422:6:33","type":""},{"name":"end","nodeType":"YulTypedName","src":"18430:3:33","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"18438:5:33","type":""}],"src":"18395:133:33"},{"body":{"nodeType":"YulBlock","src":"18614:388:33","statements":[{"body":{"nodeType":"YulBlock","src":"18660:83:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"18662:77:33"},"nodeType":"YulFunctionCall","src":"18662:79:33"},"nodeType":"YulExpressionStatement","src":"18662:79:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"18635:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"18644:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18631:3:33"},"nodeType":"YulFunctionCall","src":"18631:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"18656:2:33","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"18627:3:33"},"nodeType":"YulFunctionCall","src":"18627:32:33"},"nodeType":"YulIf","src":"18624:119:33"},{"nodeType":"YulBlock","src":"18753:117:33","statements":[{"nodeType":"YulVariableDeclaration","src":"18768:15:33","value":{"kind":"number","nodeType":"YulLiteral","src":"18782:1:33","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18772:6:33","type":""}]},{"nodeType":"YulAssignment","src":"18797:63:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18832:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"18843:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18828:3:33"},"nodeType":"YulFunctionCall","src":"18828:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18852:7:33"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"18807:20:33"},"nodeType":"YulFunctionCall","src":"18807:53:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"18797:6:33"}]}]},{"nodeType":"YulBlock","src":"18880:115:33","statements":[{"nodeType":"YulVariableDeclaration","src":"18895:16:33","value":{"kind":"number","nodeType":"YulLiteral","src":"18909:2:33","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18899:6:33","type":""}]},{"nodeType":"YulAssignment","src":"18925:60:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18957:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"18968:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18953:3:33"},"nodeType":"YulFunctionCall","src":"18953:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18977:7:33"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"18935:17:33"},"nodeType":"YulFunctionCall","src":"18935:50:33"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"18925:6:33"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18576:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"18587:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"18599:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18607:6:33","type":""}],"src":"18534:468:33"},{"body":{"nodeType":"YulBlock","src":"19091:391:33","statements":[{"body":{"nodeType":"YulBlock","src":"19137:83:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"19139:77:33"},"nodeType":"YulFunctionCall","src":"19139:79:33"},"nodeType":"YulExpressionStatement","src":"19139:79:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"19112:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"19121:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19108:3:33"},"nodeType":"YulFunctionCall","src":"19108:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"19133:2:33","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"19104:3:33"},"nodeType":"YulFunctionCall","src":"19104:32:33"},"nodeType":"YulIf","src":"19101:119:33"},{"nodeType":"YulBlock","src":"19230:117:33","statements":[{"nodeType":"YulVariableDeclaration","src":"19245:15:33","value":{"kind":"number","nodeType":"YulLiteral","src":"19259:1:33","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19249:6:33","type":""}]},{"nodeType":"YulAssignment","src":"19274:63:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19309:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"19320:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19305:3:33"},"nodeType":"YulFunctionCall","src":"19305:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19329:7:33"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"19284:20:33"},"nodeType":"YulFunctionCall","src":"19284:53:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"19274:6:33"}]}]},{"nodeType":"YulBlock","src":"19357:118:33","statements":[{"nodeType":"YulVariableDeclaration","src":"19372:16:33","value":{"kind":"number","nodeType":"YulLiteral","src":"19386:2:33","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19376:6:33","type":""}]},{"nodeType":"YulAssignment","src":"19402:63:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19437:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"19448:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19433:3:33"},"nodeType":"YulFunctionCall","src":"19433:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19457:7:33"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"19412:20:33"},"nodeType":"YulFunctionCall","src":"19412:53:33"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"19402:6:33"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19053:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"19064:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"19076:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19084:6:33","type":""}],"src":"19008:474:33"},{"body":{"nodeType":"YulBlock","src":"19631:946:33","statements":[{"body":{"nodeType":"YulBlock","src":"19678:83:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"19680:77:33"},"nodeType":"YulFunctionCall","src":"19680:79:33"},"nodeType":"YulExpressionStatement","src":"19680:79:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"19652:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"19661:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19648:3:33"},"nodeType":"YulFunctionCall","src":"19648:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"19673:3:33","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"19644:3:33"},"nodeType":"YulFunctionCall","src":"19644:33:33"},"nodeType":"YulIf","src":"19641:120:33"},{"nodeType":"YulBlock","src":"19771:117:33","statements":[{"nodeType":"YulVariableDeclaration","src":"19786:15:33","value":{"kind":"number","nodeType":"YulLiteral","src":"19800:1:33","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19790:6:33","type":""}]},{"nodeType":"YulAssignment","src":"19815:63:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19850:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"19861:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19846:3:33"},"nodeType":"YulFunctionCall","src":"19846:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19870:7:33"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"19825:20:33"},"nodeType":"YulFunctionCall","src":"19825:53:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"19815:6:33"}]}]},{"nodeType":"YulBlock","src":"19898:118:33","statements":[{"nodeType":"YulVariableDeclaration","src":"19913:16:33","value":{"kind":"number","nodeType":"YulLiteral","src":"19927:2:33","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19917:6:33","type":""}]},{"nodeType":"YulAssignment","src":"19943:63:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19978:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"19989:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19974:3:33"},"nodeType":"YulFunctionCall","src":"19974:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19998:7:33"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"19953:20:33"},"nodeType":"YulFunctionCall","src":"19953:53:33"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"19943:6:33"}]}]},{"nodeType":"YulBlock","src":"20026:118:33","statements":[{"nodeType":"YulVariableDeclaration","src":"20041:16:33","value":{"kind":"number","nodeType":"YulLiteral","src":"20055:2:33","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20045:6:33","type":""}]},{"nodeType":"YulAssignment","src":"20071:63:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20106:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"20117:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20102:3:33"},"nodeType":"YulFunctionCall","src":"20102:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20126:7:33"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"20081:20:33"},"nodeType":"YulFunctionCall","src":"20081:53:33"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"20071:6:33"}]}]},{"nodeType":"YulBlock","src":"20154:118:33","statements":[{"nodeType":"YulVariableDeclaration","src":"20169:16:33","value":{"kind":"number","nodeType":"YulLiteral","src":"20183:2:33","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20173:6:33","type":""}]},{"nodeType":"YulAssignment","src":"20199:63:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20234:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"20245:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20230:3:33"},"nodeType":"YulFunctionCall","src":"20230:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20254:7:33"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"20209:20:33"},"nodeType":"YulFunctionCall","src":"20209:53:33"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"20199:6:33"}]}]},{"nodeType":"YulBlock","src":"20282:288:33","statements":[{"nodeType":"YulVariableDeclaration","src":"20297:47:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20328:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"20339:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20324:3:33"},"nodeType":"YulFunctionCall","src":"20324:19:33"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"20311:12:33"},"nodeType":"YulFunctionCall","src":"20311:33:33"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20301:6:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"20391:83:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"20393:77:33"},"nodeType":"YulFunctionCall","src":"20393:79:33"},"nodeType":"YulExpressionStatement","src":"20393:79:33"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"20363:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"20371:18:33","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20360:2:33"},"nodeType":"YulFunctionCall","src":"20360:30:33"},"nodeType":"YulIf","src":"20357:117:33"},{"nodeType":"YulAssignment","src":"20488:72:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20532:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"20543:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20528:3:33"},"nodeType":"YulFunctionCall","src":"20528:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20552:7:33"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"20498:29:33"},"nodeType":"YulFunctionCall","src":"20498:62:33"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"20488:6:33"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19569:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"19580:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"19592:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19600:6:33","type":""},{"name":"value2","nodeType":"YulTypedName","src":"19608:6:33","type":""},{"name":"value3","nodeType":"YulTypedName","src":"19616:6:33","type":""},{"name":"value4","nodeType":"YulTypedName","src":"19624:6:33","type":""}],"src":"19488:1089:33"},{"body":{"nodeType":"YulBlock","src":"20611:152:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20628:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20631:77:33","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20621:6:33"},"nodeType":"YulFunctionCall","src":"20621:88:33"},"nodeType":"YulExpressionStatement","src":"20621:88:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20725:1:33","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20728:4:33","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20718:6:33"},"nodeType":"YulFunctionCall","src":"20718:15:33"},"nodeType":"YulExpressionStatement","src":"20718:15:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20749:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20752:4:33","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20742:6:33"},"nodeType":"YulFunctionCall","src":"20742:15:33"},"nodeType":"YulExpressionStatement","src":"20742:15:33"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"20583:180:33"},{"body":{"nodeType":"YulBlock","src":"20820:269:33","statements":[{"nodeType":"YulAssignment","src":"20830:22:33","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"20844:4:33"},{"kind":"number","nodeType":"YulLiteral","src":"20850:1:33","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"20840:3:33"},"nodeType":"YulFunctionCall","src":"20840:12:33"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"20830:6:33"}]},{"nodeType":"YulVariableDeclaration","src":"20861:38:33","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"20891:4:33"},{"kind":"number","nodeType":"YulLiteral","src":"20897:1:33","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20887:3:33"},"nodeType":"YulFunctionCall","src":"20887:12:33"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"20865:18:33","type":""}]},{"body":{"nodeType":"YulBlock","src":"20938:51:33","statements":[{"nodeType":"YulAssignment","src":"20952:27:33","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"20966:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"20974:4:33","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20962:3:33"},"nodeType":"YulFunctionCall","src":"20962:17:33"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"20952:6:33"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"20918:18:33"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20911:6:33"},"nodeType":"YulFunctionCall","src":"20911:26:33"},"nodeType":"YulIf","src":"20908:81:33"},{"body":{"nodeType":"YulBlock","src":"21041:42:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"21055:16:33"},"nodeType":"YulFunctionCall","src":"21055:18:33"},"nodeType":"YulExpressionStatement","src":"21055:18:33"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"21005:18:33"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"21028:6:33"},{"kind":"number","nodeType":"YulLiteral","src":"21036:2:33","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"21025:2:33"},"nodeType":"YulFunctionCall","src":"21025:14:33"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"21002:2:33"},"nodeType":"YulFunctionCall","src":"21002:38:33"},"nodeType":"YulIf","src":"20999:84:33"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"20804:4:33","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"20813:6:33","type":""}],"src":"20769:320:33"},{"body":{"nodeType":"YulBlock","src":"21160:53:33","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21177:3:33"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21200:5:33"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"21182:17:33"},"nodeType":"YulFunctionCall","src":"21182:24:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21170:6:33"},"nodeType":"YulFunctionCall","src":"21170:37:33"},"nodeType":"YulExpressionStatement","src":"21170:37:33"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21148:5:33","type":""},{"name":"pos","nodeType":"YulTypedName","src":"21155:3:33","type":""}],"src":"21095:118:33"},{"body":{"nodeType":"YulBlock","src":"21345:206:33","statements":[{"nodeType":"YulAssignment","src":"21355:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21367:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"21378:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21363:3:33"},"nodeType":"YulFunctionCall","src":"21363:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21355:4:33"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21435:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21448:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"21459:1:33","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21444:3:33"},"nodeType":"YulFunctionCall","src":"21444:17:33"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"21391:43:33"},"nodeType":"YulFunctionCall","src":"21391:71:33"},"nodeType":"YulExpressionStatement","src":"21391:71:33"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"21516:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21529:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"21540:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21525:3:33"},"nodeType":"YulFunctionCall","src":"21525:18:33"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"21472:43:33"},"nodeType":"YulFunctionCall","src":"21472:72:33"},"nodeType":"YulExpressionStatement","src":"21472:72:33"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21309:9:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21321:6:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21329:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21340:4:33","type":""}],"src":"21219:332:33"},{"body":{"nodeType":"YulBlock","src":"21683:206:33","statements":[{"nodeType":"YulAssignment","src":"21693:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21705:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"21716:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21701:3:33"},"nodeType":"YulFunctionCall","src":"21701:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21693:4:33"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21773:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21786:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"21797:1:33","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21782:3:33"},"nodeType":"YulFunctionCall","src":"21782:17:33"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"21729:43:33"},"nodeType":"YulFunctionCall","src":"21729:71:33"},"nodeType":"YulExpressionStatement","src":"21729:71:33"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"21854:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21867:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"21878:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21863:3:33"},"nodeType":"YulFunctionCall","src":"21863:18:33"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"21810:43:33"},"nodeType":"YulFunctionCall","src":"21810:72:33"},"nodeType":"YulExpressionStatement","src":"21810:72:33"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21647:9:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21659:6:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21667:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21678:4:33","type":""}],"src":"21557:332:33"},{"body":{"nodeType":"YulBlock","src":"21923:152:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21940:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21943:77:33","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21933:6:33"},"nodeType":"YulFunctionCall","src":"21933:88:33"},"nodeType":"YulExpressionStatement","src":"21933:88:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22037:1:33","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"22040:4:33","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22030:6:33"},"nodeType":"YulFunctionCall","src":"22030:15:33"},"nodeType":"YulExpressionStatement","src":"22030:15:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22061:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22064:4:33","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22054:6:33"},"nodeType":"YulFunctionCall","src":"22054:15:33"},"nodeType":"YulExpressionStatement","src":"22054:15:33"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"21895:180:33"},{"body":{"nodeType":"YulBlock","src":"22109:152:33","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22126:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22129:77:33","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22119:6:33"},"nodeType":"YulFunctionCall","src":"22119:88:33"},"nodeType":"YulExpressionStatement","src":"22119:88:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22223:1:33","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"22226:4:33","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22216:6:33"},"nodeType":"YulFunctionCall","src":"22216:15:33"},"nodeType":"YulExpressionStatement","src":"22216:15:33"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22247:1:33","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22250:4:33","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22240:6:33"},"nodeType":"YulFunctionCall","src":"22240:15:33"},"nodeType":"YulExpressionStatement","src":"22240:15:33"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"22081:180:33"},{"body":{"nodeType":"YulBlock","src":"22310:190:33","statements":[{"nodeType":"YulAssignment","src":"22320:33:33","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22347:5:33"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"22329:17:33"},"nodeType":"YulFunctionCall","src":"22329:24:33"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"22320:5:33"}]},{"body":{"nodeType":"YulBlock","src":"22443:22:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"22445:16:33"},"nodeType":"YulFunctionCall","src":"22445:18:33"},"nodeType":"YulExpressionStatement","src":"22445:18:33"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22368:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"22375:66:33","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"22365:2:33"},"nodeType":"YulFunctionCall","src":"22365:77:33"},"nodeType":"YulIf","src":"22362:103:33"},{"nodeType":"YulAssignment","src":"22474:20:33","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22485:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"22492:1:33","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22481:3:33"},"nodeType":"YulFunctionCall","src":"22481:13:33"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"22474:3:33"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22296:5:33","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"22306:3:33","type":""}],"src":"22267:233:33"},{"body":{"nodeType":"YulBlock","src":"22604:124:33","statements":[{"nodeType":"YulAssignment","src":"22614:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22626:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"22637:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22622:3:33"},"nodeType":"YulFunctionCall","src":"22622:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22614:4:33"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22694:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22707:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"22718:1:33","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22703:3:33"},"nodeType":"YulFunctionCall","src":"22703:17:33"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"22650:43:33"},"nodeType":"YulFunctionCall","src":"22650:71:33"},"nodeType":"YulExpressionStatement","src":"22650:71:33"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22576:9:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22588:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22599:4:33","type":""}],"src":"22506:222:33"},{"body":{"nodeType":"YulBlock","src":"22860:206:33","statements":[{"nodeType":"YulAssignment","src":"22870:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22882:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"22893:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22878:3:33"},"nodeType":"YulFunctionCall","src":"22878:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22870:4:33"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22950:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22963:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"22974:1:33","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22959:3:33"},"nodeType":"YulFunctionCall","src":"22959:17:33"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"22906:43:33"},"nodeType":"YulFunctionCall","src":"22906:71:33"},"nodeType":"YulExpressionStatement","src":"22906:71:33"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"23031:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23044:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"23055:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23040:3:33"},"nodeType":"YulFunctionCall","src":"23040:18:33"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"22987:43:33"},"nodeType":"YulFunctionCall","src":"22987:72:33"},"nodeType":"YulExpressionStatement","src":"22987:72:33"}]},"name":"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22824:9:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22836:6:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22844:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22855:4:33","type":""}],"src":"22734:332:33"},{"body":{"nodeType":"YulBlock","src":"23254:371:33","statements":[{"nodeType":"YulAssignment","src":"23264:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23276:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"23287:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23272:3:33"},"nodeType":"YulFunctionCall","src":"23272:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23264:4:33"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23345:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23358:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"23369:1:33","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23354:3:33"},"nodeType":"YulFunctionCall","src":"23354:17:33"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"23301:43:33"},"nodeType":"YulFunctionCall","src":"23301:71:33"},"nodeType":"YulExpressionStatement","src":"23301:71:33"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"23426:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23439:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"23450:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23435:3:33"},"nodeType":"YulFunctionCall","src":"23435:18:33"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"23382:43:33"},"nodeType":"YulFunctionCall","src":"23382:72:33"},"nodeType":"YulExpressionStatement","src":"23382:72:33"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"23508:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23521:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"23532:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23517:3:33"},"nodeType":"YulFunctionCall","src":"23517:18:33"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"23464:43:33"},"nodeType":"YulFunctionCall","src":"23464:72:33"},"nodeType":"YulExpressionStatement","src":"23464:72:33"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"23590:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23603:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"23614:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23599:3:33"},"nodeType":"YulFunctionCall","src":"23599:18:33"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"23546:43:33"},"nodeType":"YulFunctionCall","src":"23546:72:33"},"nodeType":"YulExpressionStatement","src":"23546:72:33"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23202:9:33","type":""},{"name":"value3","nodeType":"YulTypedName","src":"23214:6:33","type":""},{"name":"value2","nodeType":"YulTypedName","src":"23222:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23230:6:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23238:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23249:4:33","type":""}],"src":"23072:553:33"},{"body":{"nodeType":"YulBlock","src":"23675:147:33","statements":[{"nodeType":"YulAssignment","src":"23685:25:33","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23708:1:33"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23690:17:33"},"nodeType":"YulFunctionCall","src":"23690:20:33"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"23685:1:33"}]},{"nodeType":"YulAssignment","src":"23719:25:33","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"23742:1:33"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23724:17:33"},"nodeType":"YulFunctionCall","src":"23724:20:33"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"23719:1:33"}]},{"nodeType":"YulAssignment","src":"23753:16:33","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23764:1:33"},{"name":"y","nodeType":"YulIdentifier","src":"23767:1:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23760:3:33"},"nodeType":"YulFunctionCall","src":"23760:9:33"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"23753:3:33"}]},{"body":{"nodeType":"YulBlock","src":"23793:22:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"23795:16:33"},"nodeType":"YulFunctionCall","src":"23795:18:33"},"nodeType":"YulExpressionStatement","src":"23795:18:33"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23785:1:33"},{"name":"sum","nodeType":"YulIdentifier","src":"23788:3:33"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"23782:2:33"},"nodeType":"YulFunctionCall","src":"23782:10:33"},"nodeType":"YulIf","src":"23779:36:33"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"23662:1:33","type":""},{"name":"y","nodeType":"YulTypedName","src":"23665:1:33","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"23671:3:33","type":""}],"src":"23631:191:33"},{"body":{"nodeType":"YulBlock","src":"24054:408:33","statements":[{"nodeType":"YulAssignment","src":"24064:26:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24076:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"24087:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24072:3:33"},"nodeType":"YulFunctionCall","src":"24072:18:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24064:4:33"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24111:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"24122:1:33","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24107:3:33"},"nodeType":"YulFunctionCall","src":"24107:17:33"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24130:4:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"24136:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24126:3:33"},"nodeType":"YulFunctionCall","src":"24126:20:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24100:6:33"},"nodeType":"YulFunctionCall","src":"24100:47:33"},"nodeType":"YulExpressionStatement","src":"24100:47:33"},{"nodeType":"YulAssignment","src":"24156:116:33","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24258:6:33"},{"name":"tail","nodeType":"YulIdentifier","src":"24267:4:33"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24164:93:33"},"nodeType":"YulFunctionCall","src":"24164:108:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24156:4:33"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24293:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"24304:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24289:3:33"},"nodeType":"YulFunctionCall","src":"24289:18:33"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24313:4:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"24319:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24309:3:33"},"nodeType":"YulFunctionCall","src":"24309:20:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24282:6:33"},"nodeType":"YulFunctionCall","src":"24282:48:33"},"nodeType":"YulExpressionStatement","src":"24282:48:33"},{"nodeType":"YulAssignment","src":"24339:116:33","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"24441:6:33"},{"name":"tail","nodeType":"YulIdentifier","src":"24450:4:33"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24347:93:33"},"nodeType":"YulFunctionCall","src":"24347:108:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24339:4:33"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24018:9:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"24030:6:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24038:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24049:4:33","type":""}],"src":"23828:634:33"},{"body":{"nodeType":"YulBlock","src":"24526:40:33","statements":[{"nodeType":"YulAssignment","src":"24537:22:33","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24553:5:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"24547:5:33"},"nodeType":"YulFunctionCall","src":"24547:12:33"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"24537:6:33"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24509:5:33","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"24519:6:33","type":""}],"src":"24468:98:33"},{"body":{"nodeType":"YulBlock","src":"24667:73:33","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24684:3:33"},{"name":"length","nodeType":"YulIdentifier","src":"24689:6:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24677:6:33"},"nodeType":"YulFunctionCall","src":"24677:19:33"},"nodeType":"YulExpressionStatement","src":"24677:19:33"},{"nodeType":"YulAssignment","src":"24705:29:33","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24724:3:33"},{"kind":"number","nodeType":"YulLiteral","src":"24729:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24720:3:33"},"nodeType":"YulFunctionCall","src":"24720:14:33"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"24705:11:33"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24639:3:33","type":""},{"name":"length","nodeType":"YulTypedName","src":"24644:6:33","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"24655:11:33","type":""}],"src":"24572:168:33"},{"body":{"nodeType":"YulBlock","src":"24836:283:33","statements":[{"nodeType":"YulVariableDeclaration","src":"24846:52:33","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24892:5:33"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"24860:31:33"},"nodeType":"YulFunctionCall","src":"24860:38:33"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"24850:6:33","type":""}]},{"nodeType":"YulAssignment","src":"24907:77:33","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24972:3:33"},{"name":"length","nodeType":"YulIdentifier","src":"24977:6:33"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24914:57:33"},"nodeType":"YulFunctionCall","src":"24914:70:33"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24907:3:33"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25032:5:33"},{"kind":"number","nodeType":"YulLiteral","src":"25039:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25028:3:33"},"nodeType":"YulFunctionCall","src":"25028:16:33"},{"name":"pos","nodeType":"YulIdentifier","src":"25046:3:33"},{"name":"length","nodeType":"YulIdentifier","src":"25051:6:33"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"24993:34:33"},"nodeType":"YulFunctionCall","src":"24993:65:33"},"nodeType":"YulExpressionStatement","src":"24993:65:33"},{"nodeType":"YulAssignment","src":"25067:46:33","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25078:3:33"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"25105:6:33"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"25083:21:33"},"nodeType":"YulFunctionCall","src":"25083:29:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25074:3:33"},"nodeType":"YulFunctionCall","src":"25074:39:33"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25067:3:33"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24817:5:33","type":""},{"name":"pos","nodeType":"YulTypedName","src":"24824:3:33","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24832:3:33","type":""}],"src":"24746:373:33"},{"body":{"nodeType":"YulBlock","src":"25353:523:33","statements":[{"nodeType":"YulAssignment","src":"25363:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25375:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"25386:3:33","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25371:3:33"},"nodeType":"YulFunctionCall","src":"25371:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25363:4:33"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25444:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25457:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"25468:1:33","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25453:3:33"},"nodeType":"YulFunctionCall","src":"25453:17:33"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"25400:43:33"},"nodeType":"YulFunctionCall","src":"25400:71:33"},"nodeType":"YulExpressionStatement","src":"25400:71:33"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"25525:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25538:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"25549:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25534:3:33"},"nodeType":"YulFunctionCall","src":"25534:18:33"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"25481:43:33"},"nodeType":"YulFunctionCall","src":"25481:72:33"},"nodeType":"YulExpressionStatement","src":"25481:72:33"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"25607:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25620:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"25631:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25616:3:33"},"nodeType":"YulFunctionCall","src":"25616:18:33"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"25563:43:33"},"nodeType":"YulFunctionCall","src":"25563:72:33"},"nodeType":"YulExpressionStatement","src":"25563:72:33"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"25689:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25702:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"25713:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25698:3:33"},"nodeType":"YulFunctionCall","src":"25698:18:33"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"25645:43:33"},"nodeType":"YulFunctionCall","src":"25645:72:33"},"nodeType":"YulExpressionStatement","src":"25645:72:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25738:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"25749:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25734:3:33"},"nodeType":"YulFunctionCall","src":"25734:19:33"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25759:4:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"25765:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25755:3:33"},"nodeType":"YulFunctionCall","src":"25755:20:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25727:6:33"},"nodeType":"YulFunctionCall","src":"25727:49:33"},"nodeType":"YulExpressionStatement","src":"25727:49:33"},{"nodeType":"YulAssignment","src":"25785:84:33","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"25855:6:33"},{"name":"tail","nodeType":"YulIdentifier","src":"25864:4:33"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25793:61:33"},"nodeType":"YulFunctionCall","src":"25793:76:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25785:4:33"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25293:9:33","type":""},{"name":"value4","nodeType":"YulTypedName","src":"25305:6:33","type":""},{"name":"value3","nodeType":"YulTypedName","src":"25313:6:33","type":""},{"name":"value2","nodeType":"YulTypedName","src":"25321:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"25329:6:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25337:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25348:4:33","type":""}],"src":"25125:751:33"},{"body":{"nodeType":"YulBlock","src":"25944:79:33","statements":[{"nodeType":"YulAssignment","src":"25954:22:33","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"25969:6:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"25963:5:33"},"nodeType":"YulFunctionCall","src":"25963:13:33"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"25954:5:33"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26011:5:33"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"25985:25:33"},"nodeType":"YulFunctionCall","src":"25985:32:33"},"nodeType":"YulExpressionStatement","src":"25985:32:33"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"25922:6:33","type":""},{"name":"end","nodeType":"YulTypedName","src":"25930:3:33","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"25938:5:33","type":""}],"src":"25882:141:33"},{"body":{"nodeType":"YulBlock","src":"26105:273:33","statements":[{"body":{"nodeType":"YulBlock","src":"26151:83:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"26153:77:33"},"nodeType":"YulFunctionCall","src":"26153:79:33"},"nodeType":"YulExpressionStatement","src":"26153:79:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"26126:7:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"26135:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26122:3:33"},"nodeType":"YulFunctionCall","src":"26122:23:33"},{"kind":"number","nodeType":"YulLiteral","src":"26147:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"26118:3:33"},"nodeType":"YulFunctionCall","src":"26118:32:33"},"nodeType":"YulIf","src":"26115:119:33"},{"nodeType":"YulBlock","src":"26244:127:33","statements":[{"nodeType":"YulVariableDeclaration","src":"26259:15:33","value":{"kind":"number","nodeType":"YulLiteral","src":"26273:1:33","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"26263:6:33","type":""}]},{"nodeType":"YulAssignment","src":"26288:73:33","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26333:9:33"},{"name":"offset","nodeType":"YulIdentifier","src":"26344:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26329:3:33"},"nodeType":"YulFunctionCall","src":"26329:22:33"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"26353:7:33"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"26298:30:33"},"nodeType":"YulFunctionCall","src":"26298:63:33"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"26288:6:33"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26075:9:33","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"26086:7:33","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"26098:6:33","type":""}],"src":"26029:349:33"},{"body":{"nodeType":"YulBlock","src":"26712:725:33","statements":[{"nodeType":"YulAssignment","src":"26722:27:33","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26734:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"26745:3:33","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26730:3:33"},"nodeType":"YulFunctionCall","src":"26730:19:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26722:4:33"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26803:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26816:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"26827:1:33","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26812:3:33"},"nodeType":"YulFunctionCall","src":"26812:17:33"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"26759:43:33"},"nodeType":"YulFunctionCall","src":"26759:71:33"},"nodeType":"YulExpressionStatement","src":"26759:71:33"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"26884:6:33"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26897:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"26908:2:33","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26893:3:33"},"nodeType":"YulFunctionCall","src":"26893:18:33"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"26840:43:33"},"nodeType":"YulFunctionCall","src":"26840:72:33"},"nodeType":"YulExpressionStatement","src":"26840:72:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26933:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"26944:2:33","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26929:3:33"},"nodeType":"YulFunctionCall","src":"26929:18:33"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26953:4:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"26959:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26949:3:33"},"nodeType":"YulFunctionCall","src":"26949:20:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26922:6:33"},"nodeType":"YulFunctionCall","src":"26922:48:33"},"nodeType":"YulExpressionStatement","src":"26922:48:33"},{"nodeType":"YulAssignment","src":"26979:116:33","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"27081:6:33"},{"name":"tail","nodeType":"YulIdentifier","src":"27090:4:33"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26987:93:33"},"nodeType":"YulFunctionCall","src":"26987:108:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26979:4:33"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27116:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"27127:2:33","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27112:3:33"},"nodeType":"YulFunctionCall","src":"27112:18:33"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27136:4:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"27142:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27132:3:33"},"nodeType":"YulFunctionCall","src":"27132:20:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27105:6:33"},"nodeType":"YulFunctionCall","src":"27105:48:33"},"nodeType":"YulExpressionStatement","src":"27105:48:33"},{"nodeType":"YulAssignment","src":"27162:116:33","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"27264:6:33"},{"name":"tail","nodeType":"YulIdentifier","src":"27273:4:33"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27170:93:33"},"nodeType":"YulFunctionCall","src":"27170:108:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27162:4:33"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27299:9:33"},{"kind":"number","nodeType":"YulLiteral","src":"27310:3:33","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27295:3:33"},"nodeType":"YulFunctionCall","src":"27295:19:33"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27320:4:33"},{"name":"headStart","nodeType":"YulIdentifier","src":"27326:9:33"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27316:3:33"},"nodeType":"YulFunctionCall","src":"27316:20:33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27288:6:33"},"nodeType":"YulFunctionCall","src":"27288:49:33"},"nodeType":"YulExpressionStatement","src":"27288:49:33"},{"nodeType":"YulAssignment","src":"27346:84:33","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"27416:6:33"},{"name":"tail","nodeType":"YulIdentifier","src":"27425:4:33"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27354:61:33"},"nodeType":"YulFunctionCall","src":"27354:76:33"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27346:4:33"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26652:9:33","type":""},{"name":"value4","nodeType":"YulTypedName","src":"26664:6:33","type":""},{"name":"value3","nodeType":"YulTypedName","src":"26672:6:33","type":""},{"name":"value2","nodeType":"YulTypedName","src":"26680:6:33","type":""},{"name":"value1","nodeType":"YulTypedName","src":"26688:6:33","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26696:6:33","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26707:4:33","type":""}],"src":"26384:1053:33"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value3,  tail)\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n}\n","id":33,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x120 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD5391393 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x393 JUMPI DUP1 PUSH4 0xFE829BC3 EQ PUSH2 0x3AF JUMPI PUSH2 0x120 JUMP JUMPDEST DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0x731133E9 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x30D JUMPI PUSH2 0x120 JUMP JUMPDEST DUP1 PUSH4 0x1F7FDFFA GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x1F7FDFFA EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x257 JUMPI PUSH2 0x120 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x1C681A42 EQ PUSH2 0x1B5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x1B41 JUMP JUMPDEST PUSH2 0x3CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C SWAP2 SWAP1 PUSH2 0x1B90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16A SWAP2 SWAP1 PUSH2 0x1C03 JUMP JUMPDEST PUSH2 0x427 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17C SWAP2 SWAP1 PUSH2 0x1C4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19A SWAP2 SWAP1 PUSH2 0x1C66 JUMP JUMPDEST PUSH2 0x439 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0x1D23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BD PUSH2 0x4CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x1B90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x1F42 JUMP JUMPDEST PUSH2 0x4D2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x2033 JUMP JUMPDEST PUSH2 0x50F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x206F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x239 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x208A JUMP JUMPDEST PUSH2 0x52F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x255 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x2159 JUMP JUMPDEST PUSH2 0x5D7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x271 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26C SWAP2 SWAP1 PUSH2 0x2159 JUMP JUMPDEST PUSH2 0x5F9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x225C JUMP JUMPDEST PUSH2 0x674 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x2392 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x23B4 JUMP JUMPDEST PUSH2 0x783 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0x2159 JUMP JUMPDEST PUSH2 0x7C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x1C4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F7 PUSH2 0x82B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x304 SWAP2 SWAP1 PUSH2 0x206F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x327 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x322 SWAP2 SWAP1 PUSH2 0x2463 JUMP JUMPDEST PUSH2 0x832 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x331 PUSH2 0x848 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33E SWAP2 SWAP1 PUSH2 0x206F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x361 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35C SWAP2 SWAP1 PUSH2 0x2159 JUMP JUMPDEST PUSH2 0x86C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x37D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x378 SWAP2 SWAP1 PUSH2 0x24A3 JUMP JUMPDEST PUSH2 0x88E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38A SWAP2 SWAP1 PUSH2 0x1C4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A8 SWAP2 SWAP1 PUSH2 0x24E3 JUMP JUMPDEST PUSH2 0x922 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B7 PUSH2 0x9CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C4 SWAP2 SWAP1 PUSH2 0x1B90 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x432 DUP3 PUSH2 0x9CF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x448 SWAP1 PUSH2 0x25A9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x474 SWAP1 PUSH2 0x25A9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4C1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x496 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4C1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4A4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x4FC DUP2 PUSH2 0xA49 JUMP JUMPDEST PUSH2 0x508 DUP6 DUP6 DUP6 DUP6 PUSH2 0xA5D JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x539 PUSH2 0xAE3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x57E JUMPI POP PUSH2 0x57C DUP7 DUP3 PUSH2 0x88E JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x5C2 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B9 SWAP3 SWAP2 SWAP1 PUSH2 0x25E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5CF DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xAEB JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5E0 DUP3 PUSH2 0x50F JUMP JUMPDEST PUSH2 0x5E9 DUP2 PUSH2 0xA49 JUMP JUMPDEST PUSH2 0x5F3 DUP4 DUP4 PUSH2 0xBE3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x601 PUSH2 0xAE3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x665 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x66F DUP3 DUP3 PUSH2 0xCD5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x6C0 JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B7 SWAP3 SWAP2 SWAP1 PUSH2 0x2612 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6DD JUMPI PUSH2 0x6DC PUSH2 0x1D4A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x70B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x778 JUMPI PUSH2 0x748 PUSH2 0x730 DUP3 DUP8 PUSH2 0xDC8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x743 DUP4 DUP8 PUSH2 0xDDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x3CD JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x75B JUMPI PUSH2 0x75A PUSH2 0x263B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x771 SWAP1 PUSH2 0x2699 JUMP JUMPDEST SWAP1 POP PUSH2 0x711 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x7AD DUP2 PUSH2 0xA49 JUMP JUMPDEST PUSH2 0x7B9 DUP6 DUP6 DUP6 DUP6 PUSH2 0xDF0 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH2 0x844 PUSH2 0x83D PUSH2 0xAE3 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xE89 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x875 DUP3 PUSH2 0x50F JUMP JUMPDEST PUSH2 0x87E DUP2 PUSH2 0xA49 JUMP JUMPDEST PUSH2 0x888 DUP4 DUP4 PUSH2 0xCD5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x92C PUSH2 0xAE3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x971 JUMPI POP PUSH2 0x96F DUP7 DUP3 PUSH2 0x88E JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x9B5 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9AC SWAP3 SWAP2 SWAP1 PUSH2 0x25E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9C2 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xFF9 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xA42 JUMPI POP PUSH2 0xA41 DUP3 PUSH2 0x1104 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA5A DUP2 PUSH2 0xA55 PUSH2 0xAE3 JUMP JUMPDEST PUSH2 0x11E6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xACF JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC6 SWAP2 SWAP1 PUSH2 0x26E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xADD PUSH1 0x0 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1237 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB5D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB54 SWAP2 SWAP1 PUSH2 0x26E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBCF JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC6 SWAP2 SWAP1 PUSH2 0x26E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBDC DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1237 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBEF DUP4 DUP4 PUSH2 0x7C0 JUMP JUMPDEST PUSH2 0xCCA JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xC67 PUSH2 0xAE3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xCCF JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCE1 DUP4 DUP4 PUSH2 0x7C0 JUMP JUMPDEST ISZERO PUSH2 0xDBD JUMPI PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xD5A PUSH2 0xAE3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xDC2 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE62 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE59 SWAP2 SWAP1 PUSH2 0x26E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE6F DUP6 DUP6 PUSH2 0x12E9 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xE81 PUSH1 0x0 DUP8 DUP5 DUP5 DUP8 PUSH2 0x1237 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEFB JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xCED3E10000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF2 SWAP2 SWAP1 PUSH2 0x26E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFEC SWAP2 SWAP1 PUSH2 0x1C4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x106B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1062 SWAP2 SWAP1 PUSH2 0x26E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10DD JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D4 SWAP2 SWAP1 PUSH2 0x26E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x10EA DUP6 DUP6 PUSH2 0x12E9 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x10FB DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0x1237 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x11CF JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x11DF JUMPI POP PUSH2 0x11DE DUP3 PUSH2 0x1319 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11F0 DUP3 DUP3 PUSH2 0x7C0 JUMP JUMPDEST PUSH2 0x1233 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x122A SWAP3 SWAP2 SWAP1 PUSH2 0x26FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1243 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1383 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12E2 JUMPI PUSH1 0x0 PUSH2 0x1281 PUSH2 0xAE3 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP5 MLOAD SUB PUSH2 0x12D1 JUMPI PUSH1 0x0 PUSH2 0x12A2 PUSH1 0x0 DUP7 PUSH2 0xDDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x12BA PUSH1 0x0 DUP7 PUSH2 0xDDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x12CA DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x1731 JUMP JUMPDEST POP POP PUSH2 0x12E0 JUMP JUMPDEST PUSH2 0x12DF DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x18E5 JUMP JUMPDEST JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH1 0x1 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x13CD JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13C4 SWAP3 SWAP2 SWAP1 PUSH2 0x2612 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x13D7 PUSH2 0xAE3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x15EC JUMPI PUSH1 0x0 PUSH2 0x13FA DUP3 DUP7 PUSH2 0xDDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1411 DUP4 DUP7 PUSH2 0xDDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x153E JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x14E6 JUMPI DUP9 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x3DEE4C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14DD SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2725 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x15D9 JUMPI DUP1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x15D1 SWAP2 SWAP1 PUSH2 0x276A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 PUSH2 0x15E5 SWAP1 PUSH2 0x2699 JUMP JUMPDEST SWAP1 POP PUSH2 0x13DC JUMP JUMPDEST POP PUSH1 0x1 DUP4 MLOAD SUB PUSH2 0x16AB JUMPI PUSH1 0x0 PUSH2 0x160C PUSH1 0x0 DUP6 PUSH2 0xDDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1624 PUSH1 0x0 DUP6 PUSH2 0xDDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x169C SWAP3 SWAP2 SWAP1 PUSH2 0x2612 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x172A JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1721 SWAP3 SWAP2 SWAP1 PUSH2 0x279E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x18DD JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1792 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x282A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x17CE JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17CB SWAP2 SWAP1 PUSH2 0x2899 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1852 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x17FE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1803 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x184A JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1841 SWAP2 SWAP1 PUSH2 0x26E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x18DB JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18D2 SWAP2 SWAP1 PUSH2 0x26E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1A91 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1946 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x28C6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1982 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x197F SWAP2 SWAP1 PUSH2 0x2899 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1A06 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x19B2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x19B7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x19FE JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19F5 SWAP2 SWAP1 PUSH2 0x26E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1A8F JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A86 SWAP2 SWAP1 PUSH2 0x26E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AD8 DUP3 PUSH2 0x1AAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AE8 DUP2 PUSH2 0x1ACD JUMP JUMPDEST DUP2 EQ PUSH2 0x1AF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B05 DUP2 PUSH2 0x1ADF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B1E DUP2 PUSH2 0x1B0B JUMP JUMPDEST DUP2 EQ PUSH2 0x1B29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B3B DUP2 PUSH2 0x1B15 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B58 JUMPI PUSH2 0x1B57 PUSH2 0x1AA3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B66 DUP6 DUP3 DUP7 ADD PUSH2 0x1AF6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B77 DUP6 DUP3 DUP7 ADD PUSH2 0x1B2C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B8A DUP2 PUSH2 0x1B0B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BA5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B81 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BE0 DUP2 PUSH2 0x1BAB JUMP JUMPDEST DUP2 EQ PUSH2 0x1BEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BFD DUP2 PUSH2 0x1BD7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C19 JUMPI PUSH2 0x1C18 PUSH2 0x1AA3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C27 DUP5 DUP3 DUP6 ADD PUSH2 0x1BEE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C45 DUP2 PUSH2 0x1C30 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C60 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C3C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C7C JUMPI PUSH2 0x1C7B PUSH2 0x1AA3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C8A DUP5 DUP3 DUP6 ADD PUSH2 0x1B2C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1CCD JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1CB2 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CF5 DUP3 PUSH2 0x1C93 JUMP JUMPDEST PUSH2 0x1CFF DUP2 DUP6 PUSH2 0x1C9E JUMP JUMPDEST SWAP4 POP PUSH2 0x1D0F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CAF JUMP JUMPDEST PUSH2 0x1D18 DUP2 PUSH2 0x1CD9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D3D DUP2 DUP5 PUSH2 0x1CEA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1D82 DUP3 PUSH2 0x1CD9 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1DA1 JUMPI PUSH2 0x1DA0 PUSH2 0x1D4A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DB4 PUSH2 0x1A99 JUMP JUMPDEST SWAP1 POP PUSH2 0x1DC0 DUP3 DUP3 PUSH2 0x1D79 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1DE0 JUMPI PUSH2 0x1DDF PUSH2 0x1D4A JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1E09 PUSH2 0x1E04 DUP5 PUSH2 0x1DC5 JUMP JUMPDEST PUSH2 0x1DAA JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1E2C JUMPI PUSH2 0x1E2B PUSH2 0x1DF1 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1E55 JUMPI DUP1 PUSH2 0x1E41 DUP9 DUP3 PUSH2 0x1B2C JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1E2E JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1E74 JUMPI PUSH2 0x1E73 PUSH2 0x1D45 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1E84 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1DF6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1EAD JUMPI PUSH2 0x1EAC PUSH2 0x1D4A JUMP JUMPDEST JUMPDEST PUSH2 0x1EB6 DUP3 PUSH2 0x1CD9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EE5 PUSH2 0x1EE0 DUP5 PUSH2 0x1E92 JUMP JUMPDEST PUSH2 0x1DAA JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1F01 JUMPI PUSH2 0x1F00 PUSH2 0x1E8D JUMP JUMPDEST JUMPDEST PUSH2 0x1F0C DUP5 DUP3 DUP6 PUSH2 0x1EC3 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1F29 JUMPI PUSH2 0x1F28 PUSH2 0x1D45 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1F39 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1ED2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1F5C JUMPI PUSH2 0x1F5B PUSH2 0x1AA3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F6A DUP8 DUP3 DUP9 ADD PUSH2 0x1AF6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F8B JUMPI PUSH2 0x1F8A PUSH2 0x1AA8 JUMP JUMPDEST JUMPDEST PUSH2 0x1F97 DUP8 DUP3 DUP9 ADD PUSH2 0x1E5F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FB8 JUMPI PUSH2 0x1FB7 PUSH2 0x1AA8 JUMP JUMPDEST JUMPDEST PUSH2 0x1FC4 DUP8 DUP3 DUP9 ADD PUSH2 0x1E5F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FE5 JUMPI PUSH2 0x1FE4 PUSH2 0x1AA8 JUMP JUMPDEST JUMPDEST PUSH2 0x1FF1 DUP8 DUP3 DUP9 ADD PUSH2 0x1F14 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2010 DUP2 PUSH2 0x1FFD JUMP JUMPDEST DUP2 EQ PUSH2 0x201B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x202D DUP2 PUSH2 0x2007 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2049 JUMPI PUSH2 0x2048 PUSH2 0x1AA3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2057 DUP5 DUP3 DUP6 ADD PUSH2 0x201E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2069 DUP2 PUSH2 0x1FFD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2084 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2060 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x20A6 JUMPI PUSH2 0x20A5 PUSH2 0x1AA3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20B4 DUP9 DUP3 DUP10 ADD PUSH2 0x1AF6 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x20C5 DUP9 DUP3 DUP10 ADD PUSH2 0x1AF6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20E6 JUMPI PUSH2 0x20E5 PUSH2 0x1AA8 JUMP JUMPDEST JUMPDEST PUSH2 0x20F2 DUP9 DUP3 DUP10 ADD PUSH2 0x1E5F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2113 JUMPI PUSH2 0x2112 PUSH2 0x1AA8 JUMP JUMPDEST JUMPDEST PUSH2 0x211F DUP9 DUP3 DUP10 ADD PUSH2 0x1E5F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2140 JUMPI PUSH2 0x213F PUSH2 0x1AA8 JUMP JUMPDEST JUMPDEST PUSH2 0x214C DUP9 DUP3 DUP10 ADD PUSH2 0x1F14 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2170 JUMPI PUSH2 0x216F PUSH2 0x1AA3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x217E DUP6 DUP3 DUP7 ADD PUSH2 0x201E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x218F DUP6 DUP3 DUP7 ADD PUSH2 0x1AF6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x21B4 JUMPI PUSH2 0x21B3 PUSH2 0x1D4A JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21D8 PUSH2 0x21D3 DUP5 PUSH2 0x2199 JUMP JUMPDEST PUSH2 0x1DAA JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x21FB JUMPI PUSH2 0x21FA PUSH2 0x1DF1 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2224 JUMPI DUP1 PUSH2 0x2210 DUP9 DUP3 PUSH2 0x1AF6 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x21FD JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2243 JUMPI PUSH2 0x2242 PUSH2 0x1D45 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2253 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x21C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2273 JUMPI PUSH2 0x2272 PUSH2 0x1AA3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2291 JUMPI PUSH2 0x2290 PUSH2 0x1AA8 JUMP JUMPDEST JUMPDEST PUSH2 0x229D DUP6 DUP3 DUP7 ADD PUSH2 0x222E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22BE JUMPI PUSH2 0x22BD PUSH2 0x1AA8 JUMP JUMPDEST JUMPDEST PUSH2 0x22CA DUP6 DUP3 DUP7 ADD PUSH2 0x1E5F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2309 DUP2 PUSH2 0x1B0B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x231B DUP4 DUP4 PUSH2 0x2300 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x233F DUP3 PUSH2 0x22D4 JUMP JUMPDEST PUSH2 0x2349 DUP2 DUP6 PUSH2 0x22DF JUMP JUMPDEST SWAP4 POP PUSH2 0x2354 DUP4 PUSH2 0x22F0 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2385 JUMPI DUP2 MLOAD PUSH2 0x236C DUP9 DUP3 PUSH2 0x230F JUMP JUMPDEST SWAP8 POP PUSH2 0x2377 DUP4 PUSH2 0x2327 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2358 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23AC DUP2 DUP5 PUSH2 0x2334 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x23CE JUMPI PUSH2 0x23CD PUSH2 0x1AA3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23DC DUP8 DUP3 DUP9 ADD PUSH2 0x1AF6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x23ED DUP8 DUP3 DUP9 ADD PUSH2 0x1B2C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x23FE DUP8 DUP3 DUP9 ADD PUSH2 0x1B2C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x241F JUMPI PUSH2 0x241E PUSH2 0x1AA8 JUMP JUMPDEST JUMPDEST PUSH2 0x242B DUP8 DUP3 DUP9 ADD PUSH2 0x1F14 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x2440 DUP2 PUSH2 0x1C30 JUMP JUMPDEST DUP2 EQ PUSH2 0x244B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x245D DUP2 PUSH2 0x2437 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x247A JUMPI PUSH2 0x2479 PUSH2 0x1AA3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2488 DUP6 DUP3 DUP7 ADD PUSH2 0x1AF6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2499 DUP6 DUP3 DUP7 ADD PUSH2 0x244E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x24BA JUMPI PUSH2 0x24B9 PUSH2 0x1AA3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x24C8 DUP6 DUP3 DUP7 ADD PUSH2 0x1AF6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x24D9 DUP6 DUP3 DUP7 ADD PUSH2 0x1AF6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x24FF JUMPI PUSH2 0x24FE PUSH2 0x1AA3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x250D DUP9 DUP3 DUP10 ADD PUSH2 0x1AF6 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x251E DUP9 DUP3 DUP10 ADD PUSH2 0x1AF6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x252F DUP9 DUP3 DUP10 ADD PUSH2 0x1B2C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2540 DUP9 DUP3 DUP10 ADD PUSH2 0x1B2C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2561 JUMPI PUSH2 0x2560 PUSH2 0x1AA8 JUMP JUMPDEST JUMPDEST PUSH2 0x256D DUP9 DUP3 DUP10 ADD PUSH2 0x1F14 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x25C1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x25D4 JUMPI PUSH2 0x25D3 PUSH2 0x257A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25E3 DUP2 PUSH2 0x1ACD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x25FE PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x25DA JUMP JUMPDEST PUSH2 0x260B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x25DA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2627 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1B81 JUMP JUMPDEST PUSH2 0x2634 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B81 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x26A4 DUP3 PUSH2 0x1B0B JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x26D6 JUMPI PUSH2 0x26D5 PUSH2 0x266A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x26F6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x25DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2711 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x25DA JUMP JUMPDEST PUSH2 0x271E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2060 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x273A PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x25DA JUMP JUMPDEST PUSH2 0x2747 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1B81 JUMP JUMPDEST PUSH2 0x2754 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1B81 JUMP JUMPDEST PUSH2 0x2761 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1B81 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2775 DUP3 PUSH2 0x1B0B JUMP JUMPDEST SWAP2 POP PUSH2 0x2780 DUP4 PUSH2 0x1B0B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2798 JUMPI PUSH2 0x2797 PUSH2 0x266A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x27B8 DUP2 DUP6 PUSH2 0x2334 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x27CC DUP2 DUP5 PUSH2 0x2334 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27FC DUP3 PUSH2 0x27D5 JUMP JUMPDEST PUSH2 0x2806 DUP2 DUP6 PUSH2 0x27E0 JUMP JUMPDEST SWAP4 POP PUSH2 0x2816 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CAF JUMP JUMPDEST PUSH2 0x281F DUP2 PUSH2 0x1CD9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x283F PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x25DA JUMP JUMPDEST PUSH2 0x284C PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x25DA JUMP JUMPDEST PUSH2 0x2859 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1B81 JUMP JUMPDEST PUSH2 0x2866 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1B81 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2878 DUP2 DUP5 PUSH2 0x27F1 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2893 DUP2 PUSH2 0x1BD7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28AF JUMPI PUSH2 0x28AE PUSH2 0x1AA3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28BD DUP5 DUP3 DUP6 ADD PUSH2 0x2884 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x28DB PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x25DA JUMP JUMPDEST PUSH2 0x28E8 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x25DA JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x28FA DUP2 DUP7 PUSH2 0x2334 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x290E DUP2 DUP6 PUSH2 0x2334 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2922 DUP2 DUP5 PUSH2 0x27F1 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE SAR LOG3 PUSH28 0x672C21C72A7D7FB6CA7E1BC5DDC41E192ACC589BEB0467C7E3393C36 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"177:1047:32:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2247:132:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1041:181:32;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2084:103:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;271:34:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;751:216;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3810:120:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4014:429:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4226:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5328:245;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2536:552:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;551:194:32;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2854:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2187:49;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3156:144:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;312:62:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4642:138:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3367:157:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3591:351;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;226:39:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2247:132:5;2324:7;2350:9;:13;2360:2;2350:13;;;;;;;;;;;:22;2364:7;2350:22;;;;;;;;;;;;;;;;2343:29;;2247:132;;;;:::o;1041:181:32:-;1156:4;1179:36;1203:11;1179:23;:36::i;:::-;1172:43;;1041:181;;;:::o;2084:103:5:-;2144:13;2176:4;2169:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2084:103;;;:::o;271:34:32:-;304:1;271:34;:::o;751:216::-;350:24;2464:16:0;2475:4;2464:10;:16::i;:::-;926:34:32::1;937:2;941:3;946:7;955:4;926:10;:34::i;:::-;751:216:::0;;;;;:::o;3810:120:0:-;3875:7;3901:6;:12;3908:4;3901:12;;;;;;;;;;;:22;;;3894:29;;3810:120;;;:::o;4014:429:5:-;4208:14;4225:12;:10;:12::i;:::-;4208:29;;4259:6;4251:14;;:4;:14;;;;:49;;;;;4270:30;4287:4;4293:6;4270:16;:30::i;:::-;4269:31;4251:49;4247:129;;;4352:6;4360:4;4323:42;;;;;;;;;;;;:::i;:::-;;;;;;;;4247:129;4385:51;4408:4;4414:2;4418:3;4423:6;4431:4;4385:22;:51::i;:::-;4198:245;4014:429;;;;;:::o;4226:136:0:-;4300:18;4313:4;4300:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;5328:245::-;5443:12;:10;:12::i;:::-;5421:34;;:18;:34;;;5417:102;;5478:30;;;;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;2536:552:5:-;2660:16;2711:3;:10;2692:8;:15;:29;2688:121;;2770:3;:10;2782:8;:15;2744:54;;;;;;;;;;;;:::i;:::-;;;;;;;;2688:121;2819:30;2866:8;:15;2852:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2819:63;;2898:9;2893:158;2917:8;:15;2913:1;:19;2893:158;;;2972:68;2982:30;3010:1;2982:8;:27;;:30;;;;:::i;:::-;3014:25;3037:1;3014:3;:22;;:25;;;;:::i;:::-;2972:9;:68::i;:::-;2953:13;2967:1;2953:16;;;;;;;;:::i;:::-;;;;;;;:87;;;;;2934:3;;;;:::i;:::-;;;2893:158;;;;3068:13;3061:20;;;2536:552;;;;:::o;551:194:32:-;350:24;2464:16:0;2475:4;2464:10;:16::i;:::-;706:32:32::1;712:7;721:2;725:6;733:4;706:5;:32::i;:::-;551:194:::0;;;;;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;2187:49::-;2232:4;2187:49;;;:::o;3156:144:5:-;3241:52;3260:12;:10;:12::i;:::-;3274:8;3284;3241:18;:52::i;:::-;3156:144;;:::o;312:62:32:-;350:24;312:62;:::o;4642:138:0:-;4717:18;4730:4;4717:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;:::-;;4642:138:::0;;;:::o;3367:157:5:-;3457:4;3480:18;:27;3499:7;3480:27;;;;;;;;;;;;;;;:37;3508:8;3480:37;;;;;;;;;;;;;;;;;;;;;;;;;3473:44;;3367:157;;;;:::o;3591:351::-;3714:14;3731:12;:10;:12::i;:::-;3714:29;;3765:6;3757:14;;:4;:14;;;;:49;;;;;3776:30;3793:4;3799:6;3776:16;:30::i;:::-;3775:31;3757:49;3753:129;;;3858:6;3866:4;3829:42;;;;;;;;;;;;:::i;:::-;;;;;;;;3753:129;3891:44;3909:4;3915:2;3919;3923:5;3930:4;3891:17;:44::i;:::-;3704:238;3591:351;;;;;:::o;226:39:32:-;264:1;226:39;:::o;2565:202:0:-;2650:4;2688:32;2673:47;;;:11;:47;;;;:87;;;;2724:36;2748:11;2724:23;:36::i;:::-;2673:87;2666:94;;2565:202;;;:::o;3199:103::-;3265:30;3276:4;3282:12;:10;:12::i;:::-;3265:10;:30::i;:::-;3199:103;:::o;11523:282:5:-;11658:1;11644:16;;:2;:16;;;11640:88;;11714:1;11683:34;;;;;;;;;;;:::i;:::-;;;;;;;;11640:88;11737:61;11772:1;11776:2;11780:3;11785:6;11793:4;11737:26;:61::i;:::-;11523:282;;;;:::o;656:96:16:-;709:7;735:10;728:17;;656:96;:::o;9015:445:5:-;9222:1;9208:16;;:2;:16;;;9204:88;;9278:1;9247:34;;;;;;;;;;;:::i;:::-;;;;;;;;9204:88;9321:1;9305:18;;:4;:18;;;9301:88;;9375:1;9346:32;;;;;;;;;;;:::i;:::-;;;;;;;;9301:88;9398:55;9425:4;9431:2;9435:3;9440:6;9448:4;9398:26;:55::i;:::-;9015:445;;;;;:::o;6179:316:0:-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;:12::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;6730:317::-;6808:4;6828:22;6836:4;6842:7;6828;:22::i;:::-;6824:217;;;6898:5;6866:6;:12;6873:4;6866:12;;;;;;;;;;;:20;;:29;6887:7;6866:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6949:12;:10;:12::i;:::-;6922:40;;6940:7;6922:40;;6934:4;6922:40;;;;;;;;;;6983:4;6976:11;;;;6824:217;7025:5;7018:12;;6730:317;;;;;:::o;4603:197:15:-;4689:11;4777:4;4772:3;4768:14;4761:4;4756:3;4752:14;4748:35;4742:42;4735:49;;4603:197;;;;:::o;4204:::-;4290:11;4378:4;4373:3;4369:14;4362:4;4357:3;4353:14;4349:35;4343:42;4336:49;;4204:197;;;;:::o;10746:346:5:-;10856:1;10842:16;;:2;:16;;;10838:88;;10912:1;10881:34;;;;;;;;;;;:::i;:::-;;;;;;;;10838:88;10936:20;10958:23;10985:29;11004:2;11008:5;10985:18;:29::i;:::-;10935:79;;;;11024:61;11059:1;11063:2;11067:3;11072:6;11080:4;11024:26;:61::i;:::-;10828:264;;10746:346;;;;:::o;13268:315::-;13395:1;13375:22;;:8;:22;;;13371:94;;13451:1;13420:34;;;;;;;;;;;:::i;:::-;;;;;;;;13371:94;13512:8;13474:18;:25;13493:5;13474:25;;;;;;;;;;;;;;;:35;13500:8;13474:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13557:8;13535:41;;13550:5;13535:41;;;13567:8;13535:41;;;;;;:::i;:::-;;;;;;;;13268:315;;;:::o;8151:463::-;8287:1;8273:16;;:2;:16;;;8269:88;;8343:1;8312:34;;;;;;;;;;;:::i;:::-;;;;;;;;8269:88;8386:1;8370:18;;:4;:18;;;8366:88;;8440:1;8411:32;;;;;;;;;;;:::i;:::-;;;;;;;;8366:88;8464:20;8486:23;8513:29;8532:2;8536:5;8513:18;:29::i;:::-;8463:79;;;;8552:55;8579:4;8585:2;8589:3;8594:6;8602:4;8552:26;:55::i;:::-;8259:355;;8151:463;;;;;:::o;1380:305::-;1482:4;1532:26;1517:41;;;:11;:41;;;;:109;;;;1589:37;1574:52;;;:11;:52;;;;1517:109;:161;;;;1642:36;1666:11;1642:23;:36::i;:::-;1517:161;1498:180;;1380:305;;;:::o;3432:197:0:-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3598:7;3607:4;3565:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3515:108;3432:197;;:::o;7004:690:5:-;7205:30;7213:4;7219:2;7223:3;7228:6;7205:7;:30::i;:::-;7263:1;7249:16;;:2;:16;;;7245:443;;7281:16;7300:12;:10;:12::i;:::-;7281:31;;7344:1;7330:3;:10;:15;7326:352;;7365:10;7378:25;7401:1;7378:3;:22;;:25;;;;:::i;:::-;7365:38;;7421:13;7437:28;7463:1;7437:6;:25;;:28;;;;:::i;:::-;7421:44;;7483:67;7514:8;7524:4;7530:2;7534;7538:5;7545:4;7483:30;:67::i;:::-;7347:218;;7326:352;;;7589:74;7625:8;7635:4;7641:2;7645:3;7650:6;7658:4;7589:35;:74::i;:::-;7326:352;7267:421;7245:443;7004:690;;;;;:::o;16080:849::-;16188:23;16213;16374:4;16368:11;16358:21;;16444:1;16436:6;16429:17;16582:8;16575:4;16567:6;16563:17;16556:35;16704:4;16696:6;16692:17;16682:27;;16737:1;16729:6;16722:17;16778:8;16771:4;16763:6;16759:17;16752:35;16907:4;16899:6;16895:17;16889:4;16882:31;16080:849;;;;;:::o;762:146:25:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;5144:1281:5:-;5279:6;:13;5265:3;:10;:27;5261:117;;5341:3;:10;5353:6;:13;5315:52;;;;;;;;;;;;:::i;:::-;;;;;;;;5261:117;5388:16;5407:12;:10;:12::i;:::-;5388:31;;5435:9;5430:691;5454:3;:10;5450:1;:14;5430:691;;;5485:10;5498:25;5521:1;5498:3;:22;;:25;;;;:::i;:::-;5485:38;;5537:13;5553:28;5579:1;5553:6;:25;;:28;;;;:::i;:::-;5537:44;;5616:1;5600:18;;:4;:18;;;5596:420;;5638:19;5660:9;:13;5670:2;5660:13;;;;;;;;;;;:19;5674:4;5660:19;;;;;;;;;;;;;;;;5638:41;;5715:5;5701:11;:19;5697:129;;;5778:4;5784:11;5797:5;5804:2;5751:56;;;;;;;;;;;;;;:::i;:::-;;;;;;;;5697:129;5978:5;5964:11;:19;5942:9;:13;5952:2;5942:13;;;;;;;;;;;:19;5956:4;5942:19;;;;;;;;;;;;;;;:41;;;;5620:396;5596:420;6048:1;6034:16;;:2;:16;;;6030:81;;6091:5;6070:9;:13;6080:2;6070:13;;;;;;;;;;;:17;6084:2;6070:17;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;6030:81;5471:650;;5466:3;;;;:::i;:::-;;;5430:691;;;;6149:1;6135:3;:10;:15;6131:288;;6166:10;6179:25;6202:1;6179:3;:22;;:25;;;;:::i;:::-;6166:38;;6218:13;6234:28;6260:1;6234:6;:25;;:28;;;;:::i;:::-;6218:44;;6312:2;6281:45;;6306:4;6281:45;;6296:8;6281:45;;;6316:2;6320:5;6281:45;;;;;;;:::i;:::-;;;;;;;;6152:185;;6131:288;;;6392:2;6362:46;;6386:4;6362:46;;6376:8;6362:46;;;6396:3;6401:6;6362:46;;;;;;;:::i;:::-;;;;;;;;6131:288;5251:1174;5144:1281;;;;:::o;13761:974::-;13984:1;13967:2;:14;;;:18;13963:766;;;14022:2;14005:38;;;14044:8;14054:4;14060:2;14064:5;14071:4;14005:71;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14001:718;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14377:1;14360:6;:13;:18;14356:349;;14487:2;14464:26;;;;;;;;;;;:::i;:::-;;;;;;;;14356:349;14657:6;14651:13;14642:6;14638:2;14634:15;14627:38;14001:718;14137:43;;;14125:55;;;:8;:55;;;;14121:174;;14273:2;14250:26;;;;;;;;;;;:::i;:::-;;;;;;;;14121:174;14077:232;13963:766;13761:974;;;;;;:::o;14923:1041::-;15171:1;15154:2;:14;;;:18;15150:808;;;15209:2;15192:43;;;15236:8;15246:4;15252:3;15257:6;15265:4;15192:78;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;15188:760;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15606:1;15589:6;:13;:18;15585:349;;15716:2;15693:26;;;;;;;;;;;:::i;:::-;;;;;;;;15585:349;15886:6;15880:13;15871:6;15867:2;15863:15;15856:38;15188:760;15361:48;;;15349:60;;;:8;:60;;;;15345:179;;15502:2;15479:26;;;;;;;;;;;:::i;:::-;;;;;;;;15345:179;15271:267;15150:808;14923:1041;;;;;;:::o;7:75:33:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:118::-;1764:24;1782:5;1764:24;:::i;:::-;1759:3;1752:37;1677:118;;:::o;1801:222::-;1894:4;1932:2;1921:9;1917:18;1909:26;;1945:71;2013:1;2002:9;1998:17;1989:6;1945:71;:::i;:::-;1801:222;;;;:::o;2029:149::-;2065:7;2105:66;2098:5;2094:78;2083:89;;2029:149;;;:::o;2184:120::-;2256:23;2273:5;2256:23;:::i;:::-;2249:5;2246:34;2236:62;;2294:1;2291;2284:12;2236:62;2184:120;:::o;2310:137::-;2355:5;2393:6;2380:20;2371:29;;2409:32;2435:5;2409:32;:::i;:::-;2310:137;;;;:::o;2453:327::-;2511:6;2560:2;2548:9;2539:7;2535:23;2531:32;2528:119;;;2566:79;;:::i;:::-;2528:119;2686:1;2711:52;2755:7;2746:6;2735:9;2731:22;2711:52;:::i;:::-;2701:62;;2657:116;2453:327;;;;:::o;2786:90::-;2820:7;2863:5;2856:13;2849:21;2838:32;;2786:90;;;:::o;2882:109::-;2963:21;2978:5;2963:21;:::i;:::-;2958:3;2951:34;2882:109;;:::o;2997:210::-;3084:4;3122:2;3111:9;3107:18;3099:26;;3135:65;3197:1;3186:9;3182:17;3173:6;3135:65;:::i;:::-;2997:210;;;;:::o;3213:329::-;3272:6;3321:2;3309:9;3300:7;3296:23;3292:32;3289:119;;;3327:79;;:::i;:::-;3289:119;3447:1;3472:53;3517:7;3508:6;3497:9;3493:22;3472:53;:::i;:::-;3462:63;;3418:117;3213:329;;;;:::o;3548:99::-;3600:6;3634:5;3628:12;3618:22;;3548:99;;;:::o;3653:169::-;3737:11;3771:6;3766:3;3759:19;3811:4;3806:3;3802:14;3787:29;;3653:169;;;;:::o;3828:246::-;3909:1;3919:113;3933:6;3930:1;3927:13;3919:113;;;4018:1;4013:3;4009:11;4003:18;3999:1;3994:3;3990:11;3983:39;3955:2;3952:1;3948:10;3943:15;;3919:113;;;4066:1;4057:6;4052:3;4048:16;4041:27;3890:184;3828:246;;;:::o;4080:102::-;4121:6;4172:2;4168:7;4163:2;4156:5;4152:14;4148:28;4138:38;;4080:102;;;:::o;4188:377::-;4276:3;4304:39;4337:5;4304:39;:::i;:::-;4359:71;4423:6;4418:3;4359:71;:::i;:::-;4352:78;;4439:65;4497:6;4492:3;4485:4;4478:5;4474:16;4439:65;:::i;:::-;4529:29;4551:6;4529:29;:::i;:::-;4524:3;4520:39;4513:46;;4280:285;4188:377;;;;:::o;4571:313::-;4684:4;4722:2;4711:9;4707:18;4699:26;;4771:9;4765:4;4761:20;4757:1;4746:9;4742:17;4735:47;4799:78;4872:4;4863:6;4799:78;:::i;:::-;4791:86;;4571:313;;;;:::o;4890:117::-;4999:1;4996;4989:12;5013:180;5061:77;5058:1;5051:88;5158:4;5155:1;5148:15;5182:4;5179:1;5172:15;5199:281;5282:27;5304:4;5282:27;:::i;:::-;5274:6;5270:40;5412:6;5400:10;5397:22;5376:18;5364:10;5361:34;5358:62;5355:88;;;5423:18;;:::i;:::-;5355:88;5463:10;5459:2;5452:22;5242:238;5199:281;;:::o;5486:129::-;5520:6;5547:20;;:::i;:::-;5537:30;;5576:33;5604:4;5596:6;5576:33;:::i;:::-;5486:129;;;:::o;5621:311::-;5698:4;5788:18;5780:6;5777:30;5774:56;;;5810:18;;:::i;:::-;5774:56;5860:4;5852:6;5848:17;5840:25;;5920:4;5914;5910:15;5902:23;;5621:311;;;:::o;5938:117::-;6047:1;6044;6037:12;6078:710;6174:5;6199:81;6215:64;6272:6;6215:64;:::i;:::-;6199:81;:::i;:::-;6190:90;;6300:5;6329:6;6322:5;6315:21;6363:4;6356:5;6352:16;6345:23;;6416:4;6408:6;6404:17;6396:6;6392:30;6445:3;6437:6;6434:15;6431:122;;;6464:79;;:::i;:::-;6431:122;6579:6;6562:220;6596:6;6591:3;6588:15;6562:220;;;6671:3;6700:37;6733:3;6721:10;6700:37;:::i;:::-;6695:3;6688:50;6767:4;6762:3;6758:14;6751:21;;6638:144;6622:4;6617:3;6613:14;6606:21;;6562:220;;;6566:21;6180:608;;6078:710;;;;;:::o;6811:370::-;6882:5;6931:3;6924:4;6916:6;6912:17;6908:27;6898:122;;6939:79;;:::i;:::-;6898:122;7056:6;7043:20;7081:94;7171:3;7163:6;7156:4;7148:6;7144:17;7081:94;:::i;:::-;7072:103;;6888:293;6811:370;;;;:::o;7187:117::-;7296:1;7293;7286:12;7310:307;7371:4;7461:18;7453:6;7450:30;7447:56;;;7483:18;;:::i;:::-;7447:56;7521:29;7543:6;7521:29;:::i;:::-;7513:37;;7605:4;7599;7595:15;7587:23;;7310:307;;;:::o;7623:146::-;7720:6;7715:3;7710;7697:30;7761:1;7752:6;7747:3;7743:16;7736:27;7623:146;;;:::o;7775:423::-;7852:5;7877:65;7893:48;7934:6;7893:48;:::i;:::-;7877:65;:::i;:::-;7868:74;;7965:6;7958:5;7951:21;8003:4;7996:5;7992:16;8041:3;8032:6;8027:3;8023:16;8020:25;8017:112;;;8048:79;;:::i;:::-;8017:112;8138:54;8185:6;8180:3;8175;8138:54;:::i;:::-;7858:340;7775:423;;;;;:::o;8217:338::-;8272:5;8321:3;8314:4;8306:6;8302:17;8298:27;8288:122;;8329:79;;:::i;:::-;8288:122;8446:6;8433:20;8471:78;8545:3;8537:6;8530:4;8522:6;8518:17;8471:78;:::i;:::-;8462:87;;8278:277;8217:338;;;;:::o;8561:1363::-;8706:6;8714;8722;8730;8779:3;8767:9;8758:7;8754:23;8750:33;8747:120;;;8786:79;;:::i;:::-;8747:120;8906:1;8931:53;8976:7;8967:6;8956:9;8952:22;8931:53;:::i;:::-;8921:63;;8877:117;9061:2;9050:9;9046:18;9033:32;9092:18;9084:6;9081:30;9078:117;;;9114:79;;:::i;:::-;9078:117;9219:78;9289:7;9280:6;9269:9;9265:22;9219:78;:::i;:::-;9209:88;;9004:303;9374:2;9363:9;9359:18;9346:32;9405:18;9397:6;9394:30;9391:117;;;9427:79;;:::i;:::-;9391:117;9532:78;9602:7;9593:6;9582:9;9578:22;9532:78;:::i;:::-;9522:88;;9317:303;9687:2;9676:9;9672:18;9659:32;9718:18;9710:6;9707:30;9704:117;;;9740:79;;:::i;:::-;9704:117;9845:62;9899:7;9890:6;9879:9;9875:22;9845:62;:::i;:::-;9835:72;;9630:287;8561:1363;;;;;;;:::o;9930:77::-;9967:7;9996:5;9985:16;;9930:77;;;:::o;10013:122::-;10086:24;10104:5;10086:24;:::i;:::-;10079:5;10076:35;10066:63;;10125:1;10122;10115:12;10066:63;10013:122;:::o;10141:139::-;10187:5;10225:6;10212:20;10203:29;;10241:33;10268:5;10241:33;:::i;:::-;10141:139;;;;:::o;10286:329::-;10345:6;10394:2;10382:9;10373:7;10369:23;10365:32;10362:119;;;10400:79;;:::i;:::-;10362:119;10520:1;10545:53;10590:7;10581:6;10570:9;10566:22;10545:53;:::i;:::-;10535:63;;10491:117;10286:329;;;;:::o;10621:118::-;10708:24;10726:5;10708:24;:::i;:::-;10703:3;10696:37;10621:118;;:::o;10745:222::-;10838:4;10876:2;10865:9;10861:18;10853:26;;10889:71;10957:1;10946:9;10942:17;10933:6;10889:71;:::i;:::-;10745:222;;;;:::o;10973:1509::-;11127:6;11135;11143;11151;11159;11208:3;11196:9;11187:7;11183:23;11179:33;11176:120;;;11215:79;;:::i;:::-;11176:120;11335:1;11360:53;11405:7;11396:6;11385:9;11381:22;11360:53;:::i;:::-;11350:63;;11306:117;11462:2;11488:53;11533:7;11524:6;11513:9;11509:22;11488:53;:::i;:::-;11478:63;;11433:118;11618:2;11607:9;11603:18;11590:32;11649:18;11641:6;11638:30;11635:117;;;11671:79;;:::i;:::-;11635:117;11776:78;11846:7;11837:6;11826:9;11822:22;11776:78;:::i;:::-;11766:88;;11561:303;11931:2;11920:9;11916:18;11903:32;11962:18;11954:6;11951:30;11948:117;;;11984:79;;:::i;:::-;11948:117;12089:78;12159:7;12150:6;12139:9;12135:22;12089:78;:::i;:::-;12079:88;;11874:303;12244:3;12233:9;12229:19;12216:33;12276:18;12268:6;12265:30;12262:117;;;12298:79;;:::i;:::-;12262:117;12403:62;12457:7;12448:6;12437:9;12433:22;12403:62;:::i;:::-;12393:72;;12187:288;10973:1509;;;;;;;;:::o;12488:474::-;12556:6;12564;12613:2;12601:9;12592:7;12588:23;12584:32;12581:119;;;12619:79;;:::i;:::-;12581:119;12739:1;12764:53;12809:7;12800:6;12789:9;12785:22;12764:53;:::i;:::-;12754:63;;12710:117;12866:2;12892:53;12937:7;12928:6;12917:9;12913:22;12892:53;:::i;:::-;12882:63;;12837:118;12488:474;;;;;:::o;12968:311::-;13045:4;13135:18;13127:6;13124:30;13121:56;;;13157:18;;:::i;:::-;13121:56;13207:4;13199:6;13195:17;13187:25;;13267:4;13261;13257:15;13249:23;;12968:311;;;:::o;13302:710::-;13398:5;13423:81;13439:64;13496:6;13439:64;:::i;:::-;13423:81;:::i;:::-;13414:90;;13524:5;13553:6;13546:5;13539:21;13587:4;13580:5;13576:16;13569:23;;13640:4;13632:6;13628:17;13620:6;13616:30;13669:3;13661:6;13658:15;13655:122;;;13688:79;;:::i;:::-;13655:122;13803:6;13786:220;13820:6;13815:3;13812:15;13786:220;;;13895:3;13924:37;13957:3;13945:10;13924:37;:::i;:::-;13919:3;13912:50;13991:4;13986:3;13982:14;13975:21;;13862:144;13846:4;13841:3;13837:14;13830:21;;13786:220;;;13790:21;13404:608;;13302:710;;;;;:::o;14035:370::-;14106:5;14155:3;14148:4;14140:6;14136:17;14132:27;14122:122;;14163:79;;:::i;:::-;14122:122;14280:6;14267:20;14305:94;14395:3;14387:6;14380:4;14372:6;14368:17;14305:94;:::i;:::-;14296:103;;14112:293;14035:370;;;;:::o;14411:894::-;14529:6;14537;14586:2;14574:9;14565:7;14561:23;14557:32;14554:119;;;14592:79;;:::i;:::-;14554:119;14740:1;14729:9;14725:17;14712:31;14770:18;14762:6;14759:30;14756:117;;;14792:79;;:::i;:::-;14756:117;14897:78;14967:7;14958:6;14947:9;14943:22;14897:78;:::i;:::-;14887:88;;14683:302;15052:2;15041:9;15037:18;15024:32;15083:18;15075:6;15072:30;15069:117;;;15105:79;;:::i;:::-;15069:117;15210:78;15280:7;15271:6;15260:9;15256:22;15210:78;:::i;:::-;15200:88;;14995:303;14411:894;;;;;:::o;15311:114::-;15378:6;15412:5;15406:12;15396:22;;15311:114;;;:::o;15431:184::-;15530:11;15564:6;15559:3;15552:19;15604:4;15599:3;15595:14;15580:29;;15431:184;;;;:::o;15621:132::-;15688:4;15711:3;15703:11;;15741:4;15736:3;15732:14;15724:22;;15621:132;;;:::o;15759:108::-;15836:24;15854:5;15836:24;:::i;:::-;15831:3;15824:37;15759:108;;:::o;15873:179::-;15942:10;15963:46;16005:3;15997:6;15963:46;:::i;:::-;16041:4;16036:3;16032:14;16018:28;;15873:179;;;;:::o;16058:113::-;16128:4;16160;16155:3;16151:14;16143:22;;16058:113;;;:::o;16207:732::-;16326:3;16355:54;16403:5;16355:54;:::i;:::-;16425:86;16504:6;16499:3;16425:86;:::i;:::-;16418:93;;16535:56;16585:5;16535:56;:::i;:::-;16614:7;16645:1;16630:284;16655:6;16652:1;16649:13;16630:284;;;16731:6;16725:13;16758:63;16817:3;16802:13;16758:63;:::i;:::-;16751:70;;16844:60;16897:6;16844:60;:::i;:::-;16834:70;;16690:224;16677:1;16674;16670:9;16665:14;;16630:284;;;16634:14;16930:3;16923:10;;16331:608;;;16207:732;;;;:::o;16945:373::-;17088:4;17126:2;17115:9;17111:18;17103:26;;17175:9;17169:4;17165:20;17161:1;17150:9;17146:17;17139:47;17203:108;17306:4;17297:6;17203:108;:::i;:::-;17195:116;;16945:373;;;;:::o;17324:943::-;17419:6;17427;17435;17443;17492:3;17480:9;17471:7;17467:23;17463:33;17460:120;;;17499:79;;:::i;:::-;17460:120;17619:1;17644:53;17689:7;17680:6;17669:9;17665:22;17644:53;:::i;:::-;17634:63;;17590:117;17746:2;17772:53;17817:7;17808:6;17797:9;17793:22;17772:53;:::i;:::-;17762:63;;17717:118;17874:2;17900:53;17945:7;17936:6;17925:9;17921:22;17900:53;:::i;:::-;17890:63;;17845:118;18030:2;18019:9;18015:18;18002:32;18061:18;18053:6;18050:30;18047:117;;;18083:79;;:::i;:::-;18047:117;18188:62;18242:7;18233:6;18222:9;18218:22;18188:62;:::i;:::-;18178:72;;17973:287;17324:943;;;;;;;:::o;18273:116::-;18343:21;18358:5;18343:21;:::i;:::-;18336:5;18333:32;18323:60;;18379:1;18376;18369:12;18323:60;18273:116;:::o;18395:133::-;18438:5;18476:6;18463:20;18454:29;;18492:30;18516:5;18492:30;:::i;:::-;18395:133;;;;:::o;18534:468::-;18599:6;18607;18656:2;18644:9;18635:7;18631:23;18627:32;18624:119;;;18662:79;;:::i;:::-;18624:119;18782:1;18807:53;18852:7;18843:6;18832:9;18828:22;18807:53;:::i;:::-;18797:63;;18753:117;18909:2;18935:50;18977:7;18968:6;18957:9;18953:22;18935:50;:::i;:::-;18925:60;;18880:115;18534:468;;;;;:::o;19008:474::-;19076:6;19084;19133:2;19121:9;19112:7;19108:23;19104:32;19101:119;;;19139:79;;:::i;:::-;19101:119;19259:1;19284:53;19329:7;19320:6;19309:9;19305:22;19284:53;:::i;:::-;19274:63;;19230:117;19386:2;19412:53;19457:7;19448:6;19437:9;19433:22;19412:53;:::i;:::-;19402:63;;19357:118;19008:474;;;;;:::o;19488:1089::-;19592:6;19600;19608;19616;19624;19673:3;19661:9;19652:7;19648:23;19644:33;19641:120;;;19680:79;;:::i;:::-;19641:120;19800:1;19825:53;19870:7;19861:6;19850:9;19846:22;19825:53;:::i;:::-;19815:63;;19771:117;19927:2;19953:53;19998:7;19989:6;19978:9;19974:22;19953:53;:::i;:::-;19943:63;;19898:118;20055:2;20081:53;20126:7;20117:6;20106:9;20102:22;20081:53;:::i;:::-;20071:63;;20026:118;20183:2;20209:53;20254:7;20245:6;20234:9;20230:22;20209:53;:::i;:::-;20199:63;;20154:118;20339:3;20328:9;20324:19;20311:33;20371:18;20363:6;20360:30;20357:117;;;20393:79;;:::i;:::-;20357:117;20498:62;20552:7;20543:6;20532:9;20528:22;20498:62;:::i;:::-;20488:72;;20282:288;19488:1089;;;;;;;;:::o;20583:180::-;20631:77;20628:1;20621:88;20728:4;20725:1;20718:15;20752:4;20749:1;20742:15;20769:320;20813:6;20850:1;20844:4;20840:12;20830:22;;20897:1;20891:4;20887:12;20918:18;20908:81;;20974:4;20966:6;20962:17;20952:27;;20908:81;21036:2;21028:6;21025:14;21005:18;21002:38;20999:84;;21055:18;;:::i;:::-;20999:84;20820:269;20769:320;;;:::o;21095:118::-;21182:24;21200:5;21182:24;:::i;:::-;21177:3;21170:37;21095:118;;:::o;21219:332::-;21340:4;21378:2;21367:9;21363:18;21355:26;;21391:71;21459:1;21448:9;21444:17;21435:6;21391:71;:::i;:::-;21472:72;21540:2;21529:9;21525:18;21516:6;21472:72;:::i;:::-;21219:332;;;;;:::o;21557:::-;21678:4;21716:2;21705:9;21701:18;21693:26;;21729:71;21797:1;21786:9;21782:17;21773:6;21729:71;:::i;:::-;21810:72;21878:2;21867:9;21863:18;21854:6;21810:72;:::i;:::-;21557:332;;;;;:::o;21895:180::-;21943:77;21940:1;21933:88;22040:4;22037:1;22030:15;22064:4;22061:1;22054:15;22081:180;22129:77;22126:1;22119:88;22226:4;22223:1;22216:15;22250:4;22247:1;22240:15;22267:233;22306:3;22329:24;22347:5;22329:24;:::i;:::-;22320:33;;22375:66;22368:5;22365:77;22362:103;;22445:18;;:::i;:::-;22362:103;22492:1;22485:5;22481:13;22474:20;;22267:233;;;:::o;22506:222::-;22599:4;22637:2;22626:9;22622:18;22614:26;;22650:71;22718:1;22707:9;22703:17;22694:6;22650:71;:::i;:::-;22506:222;;;;:::o;22734:332::-;22855:4;22893:2;22882:9;22878:18;22870:26;;22906:71;22974:1;22963:9;22959:17;22950:6;22906:71;:::i;:::-;22987:72;23055:2;23044:9;23040:18;23031:6;22987:72;:::i;:::-;22734:332;;;;;:::o;23072:553::-;23249:4;23287:3;23276:9;23272:19;23264:27;;23301:71;23369:1;23358:9;23354:17;23345:6;23301:71;:::i;:::-;23382:72;23450:2;23439:9;23435:18;23426:6;23382:72;:::i;:::-;23464;23532:2;23521:9;23517:18;23508:6;23464:72;:::i;:::-;23546;23614:2;23603:9;23599:18;23590:6;23546:72;:::i;:::-;23072:553;;;;;;;:::o;23631:191::-;23671:3;23690:20;23708:1;23690:20;:::i;:::-;23685:25;;23724:20;23742:1;23724:20;:::i;:::-;23719:25;;23767:1;23764;23760:9;23753:16;;23788:3;23785:1;23782:10;23779:36;;;23795:18;;:::i;:::-;23779:36;23631:191;;;;:::o;23828:634::-;24049:4;24087:2;24076:9;24072:18;24064:26;;24136:9;24130:4;24126:20;24122:1;24111:9;24107:17;24100:47;24164:108;24267:4;24258:6;24164:108;:::i;:::-;24156:116;;24319:9;24313:4;24309:20;24304:2;24293:9;24289:18;24282:48;24347:108;24450:4;24441:6;24347:108;:::i;:::-;24339:116;;23828:634;;;;;:::o;24468:98::-;24519:6;24553:5;24547:12;24537:22;;24468:98;;;:::o;24572:168::-;24655:11;24689:6;24684:3;24677:19;24729:4;24724:3;24720:14;24705:29;;24572:168;;;;:::o;24746:373::-;24832:3;24860:38;24892:5;24860:38;:::i;:::-;24914:70;24977:6;24972:3;24914:70;:::i;:::-;24907:77;;24993:65;25051:6;25046:3;25039:4;25032:5;25028:16;24993:65;:::i;:::-;25083:29;25105:6;25083:29;:::i;:::-;25078:3;25074:39;25067:46;;24836:283;24746:373;;;;:::o;25125:751::-;25348:4;25386:3;25375:9;25371:19;25363:27;;25400:71;25468:1;25457:9;25453:17;25444:6;25400:71;:::i;:::-;25481:72;25549:2;25538:9;25534:18;25525:6;25481:72;:::i;:::-;25563;25631:2;25620:9;25616:18;25607:6;25563:72;:::i;:::-;25645;25713:2;25702:9;25698:18;25689:6;25645:72;:::i;:::-;25765:9;25759:4;25755:20;25749:3;25738:9;25734:19;25727:49;25793:76;25864:4;25855:6;25793:76;:::i;:::-;25785:84;;25125:751;;;;;;;;:::o;25882:141::-;25938:5;25969:6;25963:13;25954:22;;25985:32;26011:5;25985:32;:::i;:::-;25882:141;;;;:::o;26029:349::-;26098:6;26147:2;26135:9;26126:7;26122:23;26118:32;26115:119;;;26153:79;;:::i;:::-;26115:119;26273:1;26298:63;26353:7;26344:6;26333:9;26329:22;26298:63;:::i;:::-;26288:73;;26244:127;26029:349;;;;:::o;26384:1053::-;26707:4;26745:3;26734:9;26730:19;26722:27;;26759:71;26827:1;26816:9;26812:17;26803:6;26759:71;:::i;:::-;26840:72;26908:2;26897:9;26893:18;26884:6;26840:72;:::i;:::-;26959:9;26953:4;26949:20;26944:2;26933:9;26929:18;26922:48;26987:108;27090:4;27081:6;26987:108;:::i;:::-;26979:116;;27142:9;27136:4;27132:20;27127:2;27116:9;27112:18;27105:48;27170:108;27273:4;27264:6;27170:108;:::i;:::-;27162:116;;27326:9;27320:4;27316:20;27310:3;27299:9;27295:19;27288:49;27354:76;27425:4;27416:6;27354:76;:::i;:::-;27346:84;;26384:1053;;;;;;;;:::o"},"methodIdentifiers":{"BARDAOTOKEN()":"fe829bc3","DEFAULT_ADMIN_ROLE()":"a217fddf","MEMBER()":"1c681a42","MINTER_ROLE()":"d5391393","balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","isApprovedForAll(address,address)":"e985e9c5","mint(address,uint256,uint256,bytes)":"731133e9","mintBatch(address,uint256[],uint256[],bytes)":"1f7fdffa","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BARDAOTOKEN\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MEMBER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mintBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SubDaoToken.sol\":\"MyToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd9b0b8ee1ac6dfee14eb1ad4383a4739dbaa0f2036594bb3a16f0408085dadde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6309805132e519162d1134c67df22dd963323a9208b4f41344a4c13ed63c1026\",\"dweb:/ipfs/QmTBPHnf6qbtAD4NVnKVFmubUHRqMDPLkseR6apxTUpsQo\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xe64b3445a3f638890af7ad92464cd18f1f202a2f5a7ed42dabf74317bae43303\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6620b77b8dcd786149534b1c664f94ff1f8bb1ad141e8da7d9ec64b9624c73f0\",\"dweb:/ipfs/QmVWHh5UvQ7PxRUtUNfd94mSxxxStuzV1NBZtLiKqKpBrQ\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"contracts/SubDaoToken.sol\":{\"keccak256\":\"0xc42258db77bdc3bc1ea9161a049a5e318b1db7c5a3afc38c24b2894ab64e5350\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3834f032672508235f03c1234f7b455a423c4b56735a5475de79d586d8bc986\",\"dweb:/ipfs/Qma9nwHBKdohGpt88jhKNdQ2LXozQMHhRhYds6rnAWSaSY\"]}},\"version\":1}"}}}}}